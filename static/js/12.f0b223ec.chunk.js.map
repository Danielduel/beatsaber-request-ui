{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/color-string/index.js","../node_modules/simple-swizzle/index.js","../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../node_modules/color/node_modules/color-convert/index.js","../node_modules/color/node_modules/color-convert/route.js","../node_modules/color/index.js","../node_modules/overlayscrollbars/js/OverlayScrollbars.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/color-name/index.js","../node_modules/color/node_modules/color-convert/conversions.js","../../src/OverlayScrollbarsComponent.tsx"],"names":["module","exports","arr","Array","isArray","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","len","arr2","TypeError","unsupportedIterableToArray","o","F","s","n","e","f","it","normalCompletion","didErr","step","_e2","colorNames","require","swizzle","reverseNames","name","hasOwnProperty","cs","to","get","clamp","num","min","max","Math","hexDouble","str","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","match","hexAlpha","i2","parseInt","slice","parseFloat","round","alpha","isNaN","hex","rgba","arguments","percent","r","g","b","hsla","hwba","a","keyword","isArrayish","concat","prototype","args","results","arg","call","wrap","fn","obj","splice","Function","getOwnPropertyDescriptor","constructor","conversions","route","convert","keys","forEach","fromModel","defineProperty","channels","labels","routes","toModel","wrappedFn","arg0","result","conversion","wrapRounded","raw","wrapRaw","deriveBFS","graph","models","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur","colorString","_slice","skippedModels","hashedModelKeys","sort","join","limiters","Color","object","this","Error","color","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","map","number","Number","toFixed","roundTo","roundToPlace","red","getset","maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","rgbNumber","luminosity","lum","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w","w1","w2","includes","newAlpha","assertArray","channel","modifier","m","v","global","window","define","document","TYPES","LEXICON","c","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","charAt","_cssPrefixes","_jsPrefixes","_cssProperty","resultPossibilities","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","replace","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","split","preparedSuffix","cssText","_jsAPI","isInterface","fallback","COMPATIBILITY","windowSize","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","fNOP","fBound","apply","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","isA","def","type","MATH","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnConstructor","hasIsPrototypeOf","each","callback","isArrayLike","stripAndCollapse","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","specialEasing","hasOptions","start","css","timeNow","end","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","pos","speacialEasing","startTime","elementIsVisible","getClientRects","elms","base","elements","innerHTML","children","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","firstChild","insertBefore","wrapAll","wrapperHTML","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","addClass","classes","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","clearQ","jump","jumpToEnd","INSTANCES","_targets","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","trident","edge","rv","parseIntFunc","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","valOne","valTwo","absValOne","absValTwo","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strTransitionEndEvent","_classNameHostElement","_cassNamesPrefix","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportElement","_classNameViewportNativeScrollbarsOverlaid","_classNameTextInherit","_classNameScrollbarTrackOff","_classNameScrollbarTrack","_classNameScrollbarHandleOff","_classNameScrollbarHandle","_classNameScrollbarUnusable","_classNameScrollbar","_classNameScrollbarAutoHidden","_classNameScrollbarCornerResize","_classNameScrollbarCorner","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_swallowedUpdateHints","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","curr","cache","changedAttrs","checks","_elem","_attrs","check","checkCache","updateViewportAttrsFromTarget","meaningfulAttrsChanged","float","bodyMinSizeC","changed","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","h","bodyMinSizeChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","destroy","extName","disconnectMutationObservers","setupResizeObserver","removeExt","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","isRTLisX","normalizeShortcuts","evalFunc","eval","substr","parseToZeroOrNumber","normalizeIsRTLisX","operatorCurrScroll","invert","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","getElements","elementName","host","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","valid","targetElement","initBodyScroll","bodyMouseTouchDownListener","defaultView","parentWindow","findFirst","_strDot","setupResponsiveEventListener","setupStructureEvents","setupScrollbarEvents","reconnectMutationObserver","insideIFrame","mouseDownPosition","mouseDownSize","mouseDownInvertedScale","documentDragMove","onMouseTouchDownContinue","pageOffset","getCoordinates","hostElementCSS","documentMouseTouchUp","eventIsTrusted","documentOnSelectStart","releaseCapture","connectMutationObservers","isTouchEvent","screenX","screenY","addDestroyEventListener","getHostElementInvertedScale","setCapture","setupScrollbarCornerEvents","createMutationObservers","hostOnResized","activeElement","focus","construct","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","onElementResizedCallback","resizeObserver","strAnimationStartEvent","generateDiv","observe","dir","_classNameResizeObserverItemElement","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","onload","wnd","contentDocument","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserver","contentLastUpdate","mutations","doUpdate","mutation","attributeName","mutationType","hostClassNamesChanged","oldValue","isUnknownMutation","textareaUpdate","doUpdateForce","mutatedAttrs","createHostClassNameRegExp","filter","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSize","_strMinMinus","oldClassNames","newClassNames","regex","currClasses","diff","a1","a2","k","getArrayDifferences","idx","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","_strMaxMinus","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","_strPaddingMinus","_strMarginMinus","strOverflow","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","widestRow","textareaLastCol","cursorRow","cursorCol","_cursorRow","_cursorColumn","_rows","_columns","_widestRow","_cursorPosition","_cursorMax","getTextareaInfo","textareaRowsChanged","lastRow","lastCol","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","selectOrGenerateDivByClass","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","updateTextarea","doClearInterval","clearInterval","keyCode","setInterval","strFocus","propertyName","affectingPropsX","affectingPropsXContentBox","_strBorderMinus","affectingPropsY","affectingPropsYContentBox","checkX","sizeIsAffected","checkPropertyName","isSizeAffectingCSSProperty","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","trackTimeout","mouseDownScroll","mouseDownOffset","scrollbarVarsInfo","_info","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","scrollDelta","isFinite","clientX","clientY","onHandleMouseTouchDownAction","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","isRTLisHorizontal","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","strTranslateBrace","transitionStr","assembledValue","strResult","valueArray","regExpMain","RegExp","regExpValidate","properties","splitCssStyleByComma","$1","getCSSTransitionString","isTrack","element2","_l_t","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","nodeName","toFloat","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","splits","splitsLength","extendObj","extendObjRoot","doAdd","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","overlayScrollbars","factory","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayLikeToArray","minLen","test","cssKeywords","reverseKeywords","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","delta","rdif","gdif","bdif","diffc","reversed","currentClosestKeyword","currentClosestDistance","Infinity","t2","t3","t1","smin","lmin","hi","sl","vmin","bl","y2","x2","z2","atan2","hr","saturation","ansi","mult","rem","char","integer","mg","pure","OverlayScrollbarsComponent","_osInstance","_osTargetRef","createRef","osTarget","mergeHostClassNames","prevProps","divProps","ref","osClassNames"],"mappings":";4IAIAA,EAAOC,QAJP,SAAyBC,GACvB,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,I,kBC0BjCF,EAAOC,QA3BP,SAA+BC,EAAKG,GAClC,GAAsB,qBAAXC,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETd,GAAKI,EAAKW,SAAWf,GAH8CK,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,K,kBCdTT,EAAOC,QAVP,SAA2BC,EAAKoB,IACnB,MAAPA,GAAeA,EAAMpB,EAAIkB,UAAQE,EAAMpB,EAAIkB,QAE/C,IAAK,IAAIf,EAAI,EAAGkB,EAAO,IAAIpB,MAAMmB,GAAMjB,EAAIiB,EAAKjB,IAC9CkB,EAAKlB,GAAKH,EAAIG,GAGhB,OAAOkB,I,kBCHTvB,EAAOC,QAJP,WACE,MAAM,IAAIuB,UAAU,+I,oBCDtB,IAAIC,EAA6B,EAAQ,IAyDzCzB,EAAOC,QAvDP,SAAoCyB,GAClC,GAAsB,qBAAXpB,QAAgD,MAAtBoB,EAAEpB,OAAOC,UAAmB,CAC/D,GAAIJ,MAAMC,QAAQsB,KAAOA,EAAID,EAA2BC,IAAK,CAC3D,IAAIrB,EAAI,EAEJsB,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIxB,GAAKqB,EAAEN,OAAe,CACxBH,MAAM,GAED,CACLA,MAAM,EACNE,MAAOO,EAAErB,OAGbyB,EAAG,SAAWlB,GACZ,MAAMA,GAERmB,EAAGJ,GAIP,MAAM,IAAIH,UAAU,yIAGtB,IAAIQ,EAGAX,EAFAY,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLN,EAAG,WACDI,EAAKN,EAAEpB,OAAOC,aAEhBsB,EAAG,WACD,IAAIM,EAAOH,EAAGhB,OAEd,OADAiB,EAAmBE,EAAKlB,KACjBkB,GAETL,EAAG,SAAWM,GACZF,GAAS,EACTb,EAAMe,GAERL,EAAG,WACD,IACOE,GAAoC,MAAhBD,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIE,EAAQ,MAAMb,O,oBClD1B,IAAIgB,EAAaC,EAAQ,IACrBC,EAAUD,EAAQ,KAElBE,EAAe,GAGnB,IAAK,IAAIC,KAAQJ,EACZA,EAAWK,eAAeD,KAC7BD,EAAaH,EAAWI,IAASA,GAInC,IAAIE,EAAK3C,EAAOC,QAAU,CACzB2C,GAAI,GACJC,IAAK,IAmNN,SAASC,EAAMC,EAAKC,EAAKC,GACxB,OAAOC,KAAKF,IAAIE,KAAKD,IAAID,EAAKD,GAAME,GAGrC,SAASE,EAAUJ,GAClB,IAAIK,EAAML,EAAIM,SAAS,IAAIC,cAC3B,OAAQF,EAAIhC,OAAS,EAAK,IAAMgC,EAAMA,EAtNvCT,EAAGE,IAAM,SAAUU,GAClB,IACIC,EACAC,EACJ,OAHaF,EAAOG,UAAU,EAAG,GAAGC,eAInC,IAAK,MACJH,EAAMb,EAAGE,IAAIe,IAAIL,GACjBE,EAAQ,MACR,MACD,IAAK,MACJD,EAAMb,EAAGE,IAAIgB,IAAIN,GACjBE,EAAQ,MACR,MACD,QACCD,EAAMb,EAAGE,IAAIiB,IAAIP,GACjBE,EAAQ,MAIV,OAAKD,EAIE,CAACC,MAAOA,EAAOtC,MAAOqC,GAHrB,MAMTb,EAAGE,IAAIiB,IAAM,SAAUP,GACtB,IAAKA,EACJ,OAAO,KAGR,IAOIQ,EACA1D,EACA2D,EAHAF,EAAM,CAAC,EAAG,EAAG,EAAG,GAKpB,GAAIC,EAAQR,EAAOQ,MAVT,mCAUqB,CAI9B,IAHAC,EAAWD,EAAM,GACjBA,EAAQA,EAAM,GAET1D,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEvB,IAAI4D,EAAS,EAAJ5D,EACTyD,EAAIzD,GAAK6D,SAASH,EAAMI,MAAMF,EAAIA,EAAK,GAAI,IAGxCD,IACHF,EAAI,GAAKI,SAASF,EAAU,IAAM,UAE7B,GAAID,EAAQR,EAAOQ,MAxBf,uBAwB4B,CAItC,IAFAC,GADAD,EAAQA,EAAM,IACG,GAEZ1D,EAAI,EAAGA,EAAI,EAAGA,IAClByD,EAAIzD,GAAK6D,SAASH,EAAM1D,GAAK0D,EAAM1D,GAAI,IAGpC2D,IACHF,EAAI,GAAKI,SAASF,EAAWA,EAAU,IAAM,UAExC,GAAID,EAAQR,EAAOQ,MAjCf,2FAiC4B,CACtC,IAAK1D,EAAI,EAAGA,EAAI,EAAGA,IAClByD,EAAIzD,GAAK6D,SAASH,EAAM1D,EAAI,GAAI,GAG7B0D,EAAM,KACTD,EAAI,GAAKM,WAAWL,EAAM,SAErB,MAAIA,EAAQR,EAAOQ,MAxChB,8GAgDH,OAAIA,EAAQR,EAAOQ,MA/CZ,UAgDI,gBAAbA,EAAM,GACF,CAAC,EAAG,EAAG,EAAG,IAGlBD,EAAMzB,EAAW0B,EAAM,MAMvBD,EAAI,GAAK,EAEFA,GALC,KAOD,KAtBP,IAAKzD,EAAI,EAAGA,EAAI,EAAGA,IAClByD,EAAIzD,GAAK6C,KAAKmB,MAAiC,KAA3BD,WAAWL,EAAM1D,EAAI,KAGtC0D,EAAM,KACTD,EAAI,GAAKM,WAAWL,EAAM,KAoB5B,IAAK1D,EAAI,EAAGA,EAAI,EAAGA,IAClByD,EAAIzD,GAAKyC,EAAMgB,EAAIzD,GAAI,EAAG,KAI3B,OAFAyD,EAAI,GAAKhB,EAAMgB,EAAI,GAAI,EAAG,GAEnBA,GAGRnB,EAAGE,IAAIe,IAAM,SAAUL,GACtB,IAAKA,EACJ,OAAO,KAGR,IACIQ,EAAQR,EAAOQ,MADT,kIAGV,GAAIA,EAAO,CACV,IAAIO,EAAQF,WAAWL,EAAM,IAM7B,MAAO,EALEK,WAAWL,EAAM,IAAM,KAAO,IAC/BjB,EAAMsB,WAAWL,EAAM,IAAK,EAAG,KAC/BjB,EAAMsB,WAAWL,EAAM,IAAK,EAAG,KAC/BjB,EAAMyB,MAAMD,GAAS,EAAIA,EAAO,EAAG,IAK5C,OAAO,MAGR3B,EAAGE,IAAIgB,IAAM,SAAUN,GACtB,IAAKA,EACJ,OAAO,KAGR,IACIQ,EAAQR,EAAOQ,MADT,yHAGV,GAAIA,EAAO,CACV,IAAIO,EAAQF,WAAWL,EAAM,IAK7B,MAAO,EAJGK,WAAWL,EAAM,IAAM,IAAO,KAAO,IACvCjB,EAAMsB,WAAWL,EAAM,IAAK,EAAG,KAC/BjB,EAAMsB,WAAWL,EAAM,IAAK,EAAG,KAC/BjB,EAAMyB,MAAMD,GAAS,EAAIA,EAAO,EAAG,IAI5C,OAAO,MAGR3B,EAAGC,GAAG4B,IAAM,WACX,IAAIC,EAAOlC,EAAQmC,WAEnB,MACC,IACAvB,EAAUsB,EAAK,IACftB,EAAUsB,EAAK,IACftB,EAAUsB,EAAK,KACdA,EAAK,GAAK,EACPtB,EAAUD,KAAKmB,MAAgB,IAAVI,EAAK,KAC3B,KAIL9B,EAAGC,GAAGkB,IAAM,WACX,IAAIW,EAAOlC,EAAQmC,WAEnB,OAAOD,EAAKrD,OAAS,GAAiB,IAAZqD,EAAK,GAC5B,OAASvB,KAAKmB,MAAMI,EAAK,IAAM,KAAOvB,KAAKmB,MAAMI,EAAK,IAAM,KAAOvB,KAAKmB,MAAMI,EAAK,IAAM,IACzF,QAAUvB,KAAKmB,MAAMI,EAAK,IAAM,KAAOvB,KAAKmB,MAAMI,EAAK,IAAM,KAAOvB,KAAKmB,MAAMI,EAAK,IAAM,KAAOA,EAAK,GAAK,KAG/G9B,EAAGC,GAAGkB,IAAIa,QAAU,WACnB,IAAIF,EAAOlC,EAAQmC,WAEfE,EAAI1B,KAAKmB,MAAMI,EAAK,GAAK,IAAM,KAC/BI,EAAI3B,KAAKmB,MAAMI,EAAK,GAAK,IAAM,KAC/BK,EAAI5B,KAAKmB,MAAMI,EAAK,GAAK,IAAM,KAEnC,OAAOA,EAAKrD,OAAS,GAAiB,IAAZqD,EAAK,GAC5B,OAASG,EAAI,MAAQC,EAAI,MAAQC,EAAI,KACrC,QAAUF,EAAI,MAAQC,EAAI,MAAQC,EAAI,MAAQL,EAAK,GAAK,KAG5D9B,EAAGC,GAAGgB,IAAM,WACX,IAAImB,EAAOxC,EAAQmC,WACnB,OAAOK,EAAK3D,OAAS,GAAiB,IAAZ2D,EAAK,GAC5B,OAASA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,KACtD,QAAUA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,MAAQA,EAAK,GAAK,KAK7EpC,EAAGC,GAAGiB,IAAM,WACX,IAAImB,EAAOzC,EAAQmC,WAEfO,EAAI,GAKR,OAJID,EAAK5D,QAAU,GAAiB,IAAZ4D,EAAK,KAC5BC,EAAI,KAAOD,EAAK,IAGV,OAASA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,IAAMC,EAAI,KAGxEtC,EAAGC,GAAGsC,QAAU,SAAUpB,GACzB,OAAOtB,EAAasB,EAAIK,MAAM,EAAG,M,iCC5NlC,IAAIgB,EAAa7C,EAAQ,KAErB8C,EAASjF,MAAMkF,UAAUD,OACzBjB,EAAQhE,MAAMkF,UAAUlB,MAExB5B,EAAUvC,EAAOC,QAAU,SAAiBqF,GAG/C,IAFA,IAAIC,EAAU,GAELlF,EAAI,EAAGiB,EAAMgE,EAAKlE,OAAQf,EAAIiB,EAAKjB,IAAK,CAChD,IAAImF,EAAMF,EAAKjF,GAEX8E,EAAWK,GAEdD,EAAUH,EAAOK,KAAKF,EAASpB,EAAMsB,KAAKD,IAE1CD,EAAQrE,KAAKsE,GAIf,OAAOD,GAGRhD,EAAQmD,KAAO,SAAUC,GACxB,OAAO,WACN,OAAOA,EAAGpD,EAAQmC,e,kBC1BpB1E,EAAOC,QAAU,SAAoB2F,GACpC,SAAKA,GAAsB,kBAARA,KAIZA,aAAezF,OAASA,MAAMC,QAAQwF,IAC3CA,EAAIxE,QAAU,IAAMwE,EAAIC,kBAAkBC,UACzCtF,OAAOuF,yBAAyBH,EAAMA,EAAIxE,OAAS,IAAgC,WAAzBwE,EAAII,YAAYvD,S,oBCP9E,IAAMwD,EAAc3D,EAAQ,IACtB4D,EAAQ5D,EAAQ,KAEhB6D,EAAU,GAED3F,OAAO4F,KAAKH,GA0DpBI,SAAQ,SAAAC,GACdH,EAAQG,GAAa,GAErB9F,OAAO+F,eAAeJ,EAAQG,GAAY,WAAY,CAACnF,MAAO8E,EAAYK,GAAWE,WACrFhG,OAAO+F,eAAeJ,EAAQG,GAAY,SAAU,CAACnF,MAAO8E,EAAYK,GAAWG,SAEnF,IAAMC,EAASR,EAAMI,GACD9F,OAAO4F,KAAKM,GAEpBL,SAAQ,SAAAM,GACnB,IAAMhB,EAAKe,EAAOC,GAElBR,EAAQG,GAAWK,GA9CrB,SAAqBhB,GACpB,IAAMiB,EAAY,WAAmB,2BAANtB,EAAM,yBAANA,EAAM,gBACpC,IAAMuB,EAAOvB,EAAK,GAElB,QAAazE,IAATgG,GAA+B,OAATA,EACzB,OAAOA,EAGJA,EAAKzF,OAAS,IACjBkE,EAAOuB,GAGR,IAAMC,EAASnB,EAAGL,GAKlB,GAAsB,kBAAXwB,EACV,IAAK,IAAIxF,EAAMwF,EAAO1F,OAAQf,EAAI,EAAGA,EAAIiB,EAAKjB,IAC7CyG,EAAOzG,GAAK6C,KAAKmB,MAAMyC,EAAOzG,IAIhC,OAAOyG,GAQR,MAJI,eAAgBnB,IACnBiB,EAAUG,WAAapB,EAAGoB,YAGpBH,EAewBI,CAAYrB,GAC1CQ,EAAQG,GAAWK,GAASM,IArE9B,SAAiBtB,GAChB,IAAMiB,EAAY,WAAmB,2BAANtB,EAAM,yBAANA,EAAM,gBACpC,IAAMuB,EAAOvB,EAAK,GAClB,YAAazE,IAATgG,GAA+B,OAATA,EAClBA,GAGJA,EAAKzF,OAAS,IACjBkE,EAAOuB,GAGDlB,EAAGL,KAQX,MAJI,eAAgBK,IACnBiB,EAAUG,WAAapB,EAAGoB,YAGpBH,EAkD4BM,CAAQvB,SAI5C3F,EAAOC,QAAUkG,G,oBChFjB,IAAMF,EAAc3D,EAAQ,IA+B5B,SAAS6E,EAAUb,GAClB,IAAMc,EAnBP,WAKC,IAJA,IAAMA,EAAQ,GAERC,EAAS7G,OAAO4F,KAAKH,GAElB3E,EAAM+F,EAAOjG,OAAQf,EAAI,EAAGA,EAAIiB,EAAKjB,IAC7C+G,EAAMC,EAAOhH,IAAM,CAGlBiH,UAAW,EACXC,OAAQ,MAIV,OAAOH,EAKOI,GACRC,EAAQ,CAACnB,GAIf,IAFAc,EAAMd,GAAWgB,SAAW,EAErBG,EAAMrG,QAIZ,IAHA,IAAMsG,EAAUD,EAAME,MAChBC,EAAYpH,OAAO4F,KAAKH,EAAYyB,IAEjCpG,EAAMsG,EAAUxG,OAAQf,EAAI,EAAGA,EAAIiB,EAAKjB,IAAK,CACrD,IAAMwH,EAAWD,EAAUvH,GACrByH,EAAOV,EAAMS,IAEI,IAAnBC,EAAKR,WACRQ,EAAKR,SAAWF,EAAMM,GAASJ,SAAW,EAC1CQ,EAAKP,OAASG,EACdD,EAAMM,QAAQF,IAKjB,OAAOT,EAGR,SAASY,EAAKC,EAAMrF,GACnB,OAAO,SAAU0C,GAChB,OAAO1C,EAAGqF,EAAK3C,KAIjB,SAAS4C,EAAevB,EAASS,GAKhC,IAJA,IAAMe,EAAO,CAACf,EAAMT,GAASY,OAAQZ,GACjChB,EAAKM,EAAYmB,EAAMT,GAASY,QAAQZ,GAExCyB,EAAMhB,EAAMT,GAASY,OAClBH,EAAMgB,GAAKb,QACjBY,EAAKJ,QAAQX,EAAMgB,GAAKb,QACxB5B,EAAKqC,EAAK/B,EAAYmB,EAAMgB,GAAKb,QAAQa,GAAMzC,GAC/CyC,EAAMhB,EAAMgB,GAAKb,OAIlB,OADA5B,EAAGoB,WAAaoB,EACTxC,EAGR3F,EAAOC,QAAU,SAAUqG,GAK1B,IAJA,IAAMc,EAAQD,EAAUb,GAClBS,EAAa,GAEbM,EAAS7G,OAAO4F,KAAKgB,GAClB9F,EAAM+F,EAAOjG,OAAQf,EAAI,EAAGA,EAAIiB,EAAKjB,IAAK,CAClD,IAAMsG,EAAUU,EAAOhH,GAGH,OAFP+G,EAAMT,GAEVY,SAKTR,EAAWJ,GAAWuB,EAAevB,EAASS,IAG/C,OAAOL,I,mBC7ER,I,qBAjBMsB,EAAc/F,EAAQ,KACtB6D,EAAU7D,EAAQ,KAElBgG,EAAS,GAAGnE,MAEZoE,EAAgB,CAErB,UAGA,OAGA,OAGKC,EAAkB,GACxB,MAAoBhI,OAAO4F,KAAKD,GAAhC,eAA0C,CAArC,IAAM1C,EAAK,KACf+E,EAAgBF,EAAO7C,KAAKU,EAAQ1C,GAAOgD,QAAQgC,OAAOC,KAAK,KAAOjF,EAGvE,IAAMkF,EAAW,GAEjB,SAASC,EAAMC,EAAQpF,GACtB,KAAMqF,gBAAgBF,GACrB,OAAO,IAAIA,EAAMC,EAAQpF,GAO1B,GAJIA,GAASA,KAAS8E,IACrB9E,EAAQ,MAGLA,KAAWA,KAAS0C,GACvB,MAAM,IAAI4C,MAAM,kBAAoBtF,GAGrC,IAAIpD,EACAmG,EAEJ,GAAc,MAAVqC,EACHC,KAAKrF,MAAQ,MACbqF,KAAKE,MAAQ,CAAC,EAAG,EAAG,GACpBF,KAAKG,OAAS,OACR,GAAIJ,aAAkBD,EAC5BE,KAAKrF,MAAQoF,EAAOpF,MACpBqF,KAAKE,MAAQH,EAAOG,MAAM7E,QAC1B2E,KAAKG,OAASJ,EAAOI,YACf,GAAsB,kBAAXJ,EAAqB,CACtC,IAAM/B,EAASuB,EAAYxF,IAAIgG,GAC/B,GAAe,OAAX/B,EACH,MAAM,IAAIiC,MAAM,sCAAwCF,GAGzDC,KAAKrF,MAAQqD,EAAOrD,MACpB+C,EAAWL,EAAQ2C,KAAKrF,OAAO+C,SAC/BsC,KAAKE,MAAQlC,EAAO3F,MAAMgD,MAAM,EAAGqC,GACnCsC,KAAKG,OAA2C,kBAA3BnC,EAAO3F,MAAMqF,GAAyBM,EAAO3F,MAAMqF,GAAY,OAC9E,GAAIqC,EAAOzH,OAAS,EAAG,CAC7B0H,KAAKrF,MAAQA,GAAS,MACtB+C,EAAWL,EAAQ2C,KAAKrF,OAAO+C,SAC/B,IAAM0C,EAAWZ,EAAO7C,KAAKoD,EAAQ,EAAGrC,GACxCsC,KAAKE,MAAQG,EAAUD,EAAU1C,GACjCsC,KAAKG,OAAqC,kBAArBJ,EAAOrC,GAAyBqC,EAAOrC,GAAY,OAClE,GAAsB,kBAAXqC,EAEjBC,KAAKrF,MAAQ,MACbqF,KAAKE,MAAQ,CACXH,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,GAEDC,KAAKG,OAAS,MACR,CACNH,KAAKG,OAAS,EAEd,IAAM7C,EAAO5F,OAAO4F,KAAKyC,GACrB,UAAWA,IACdzC,EAAKP,OAAOO,EAAKgD,QAAQ,SAAU,GACnCN,KAAKG,OAAiC,kBAAjBJ,EAAOvE,MAAqBuE,EAAOvE,MAAQ,GAGjE,IAAM+E,EAAajD,EAAKqC,OAAOC,KAAK,IACpC,KAAMW,KAAcb,GACnB,MAAM,IAAIO,MAAM,sCAAwCO,KAAKC,UAAUV,IAGxEC,KAAKrF,MAAQ+E,EAAgBa,GAE7B,IAAM5C,EAASN,EAAQ2C,KAAKrF,OAAOgD,OAC7BuC,EAAQ,GACd,IAAK3I,EAAI,EAAGA,EAAIoG,EAAOrF,OAAQf,IAC9B2I,EAAM9H,KAAK2H,EAAOpC,EAAOpG,KAG1ByI,KAAKE,MAAQG,EAAUH,GAIxB,GAAIL,EAASG,KAAKrF,OAEjB,IADA+C,EAAWL,EAAQ2C,KAAKrF,OAAO+C,SAC1BnG,EAAI,EAAGA,EAAImG,EAAUnG,IAAK,CAC9B,IAAMmJ,EAAQb,EAASG,KAAKrF,OAAOpD,GAC/BmJ,IACHV,KAAKE,MAAM3I,GAAKmJ,EAAMV,KAAKE,MAAM3I,KAKpCyI,KAAKG,OAAS/F,KAAKD,IAAI,EAAGC,KAAKF,IAAI,EAAG8F,KAAKG,SAEvCzI,OAAOiJ,QACVjJ,OAAOiJ,OAAOX,MAIhBF,EAAMvD,UAAY,CACjBhC,SADiB,WAEhB,OAAOyF,KAAKvF,UAGbmG,OALiB,WAMhB,OAAOZ,KAAKA,KAAKrF,UAGlBF,OATiB,SASVoG,GACN,IAAIC,EAAOd,KAAKrF,SAAS4E,EAAYzF,GAAKkG,KAAOA,KAAKhF,MAEhDwB,EAAuB,KAD7BsE,EAAOA,EAAKvF,MAAwB,kBAAXsF,EAAsBA,EAAS,IACtCV,OAAeW,EAAKZ,MAAQY,EAAKZ,MAAM5D,OAAO0D,KAAKG,QACrE,OAAOZ,EAAYzF,GAAGgH,EAAKnG,OAAO6B,IAGnCuE,cAhBiB,SAgBHF,GACb,IAAMC,EAAOd,KAAKhF,MAAMO,MAAwB,kBAAXsF,EAAsBA,EAAS,GAC9DrE,EAAuB,IAAhBsE,EAAKX,OAAeW,EAAKZ,MAAQY,EAAKZ,MAAM5D,OAAO0D,KAAKG,QACrE,OAAOZ,EAAYzF,GAAGkB,IAAIa,QAAQW,IAGnCwE,MAtBiB,WAuBhB,OAAuB,IAAhBhB,KAAKG,OAAeH,KAAKE,MAAM7E,QAAU2E,KAAKE,MAAM5D,OAAO0D,KAAKG,SAGxEJ,OA1BiB,WA+BhB,IAJA,IAAM/B,EAAS,GACTN,EAAWL,EAAQ2C,KAAKrF,OAAO+C,SAC/BC,EAASN,EAAQ2C,KAAKrF,OAAOgD,OAE1BpG,EAAI,EAAGA,EAAImG,EAAUnG,IAC7ByG,EAAOL,EAAOpG,IAAMyI,KAAKE,MAAM3I,GAOhC,OAJoB,IAAhByI,KAAKG,SACRnC,EAAOxC,MAAQwE,KAAKG,QAGdnC,GAGRiD,UA1CiB,WA2ChB,IAAMjG,EAAMgF,KAAKhF,MAAMkF,MASvB,OARAlF,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IAEU,IAAhBgF,KAAKG,QACRnF,EAAI5C,KAAK4H,KAAKG,QAGRnF,GAGRkG,WAvDiB,WAwDhB,IAAMlG,EAAMgF,KAAKhF,MAAM+E,SASvB,OARA/E,EAAIc,GAAK,IACTd,EAAIe,GAAK,IACTf,EAAIgB,GAAK,IAEW,IAAhBgE,KAAKG,SACRnF,EAAIQ,MAAQwE,KAAKG,QAGXnF,GAGRO,MApEiB,SAoEXsF,GAEL,OADAA,EAASzG,KAAKD,IAAI0G,GAAU,EAAG,GACxB,IAAIf,EAAME,KAAKE,MAAMiB,IA+O9B,SAAsBN,GACrB,OAAO,SAAUO,GAChB,OANF,SAAiBA,EAAQP,GACxB,OAAOQ,OAAOD,EAAOE,QAAQT,IAKrBU,CAAQH,EAAQP,IAjPSW,CAAaX,IAASvE,OAAO0D,KAAKG,QAASH,KAAKrF,QAGjFa,MAzEiB,SAyEXnD,GACL,OAAIuD,UAAUtD,OAAS,EACf,IAAIwH,EAAME,KAAKE,MAAM5D,OAAOlC,KAAKD,IAAI,EAAGC,KAAKF,IAAI,EAAG7B,KAAU2H,KAAKrF,OAGpEqF,KAAKG,QAIbsB,IAAKC,EAAO,MAAO,EAAGC,EAAM,MAC5BC,MAAOF,EAAO,MAAO,EAAGC,EAAM,MAC9BE,KAAMH,EAAO,MAAO,EAAGC,EAAM,MAE7BG,IAAKJ,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,GAAG,SAAArJ,GAAK,OAAMA,EAAQ,IAAO,KAAO,OAErF0J,YAAaL,EAAO,MAAO,EAAGC,EAAM,MACpCK,UAAWN,EAAO,MAAO,EAAGC,EAAM,MAElCM,YAAaP,EAAO,MAAO,EAAGC,EAAM,MACpCtJ,MAAOqJ,EAAO,MAAO,EAAGC,EAAM,MAE9BO,OAAQR,EAAO,MAAO,EAAGC,EAAM,MAC/BQ,KAAMT,EAAO,MAAO,EAAGC,EAAM,MAE7BS,MAAOV,EAAO,MAAO,EAAGC,EAAM,MAC9BU,OAAQX,EAAO,MAAO,EAAGC,EAAM,MAE/BW,KAAMZ,EAAO,OAAQ,EAAGC,EAAM,MAC9BY,QAASb,EAAO,OAAQ,EAAGC,EAAM,MACjCa,OAAQd,EAAO,OAAQ,EAAGC,EAAM,MAChCc,MAAOf,EAAO,OAAQ,EAAGC,EAAM,MAE/Be,EAAGhB,EAAO,MAAO,EAAGC,EAAM,MAC1BgB,EAAGjB,EAAO,MAAO,EAAGC,EAAM,MAC1BiB,EAAGlB,EAAO,MAAO,EAAGC,EAAM,MAE1BkB,EAAGnB,EAAO,MAAO,EAAGC,EAAM,MAC1BxF,EAAGuF,EAAO,MAAO,GACjB1F,EAAG0F,EAAO,MAAO,GAEjBtF,QAjHiB,SAiHT/D,GACP,OAAIuD,UAAUtD,OAAS,EACf,IAAIwH,EAAMzH,GAGXgF,EAAQ2C,KAAKrF,OAAOyB,QAAQ4D,KAAKE,QAGzCxE,IAzHiB,SAyHbrD,GACH,OAAIuD,UAAUtD,OAAS,EACf,IAAIwH,EAAMzH,GAGXkH,EAAYzF,GAAG4B,IAAIsE,KAAKhF,MAAMO,QAAQ2E,QAG9C4C,UAjIiB,WAkIhB,IAAM9H,EAAMgF,KAAKhF,MAAMkF,MACvB,OAAkB,IAATlF,EAAI,KAAc,IAAiB,IAATA,EAAI,KAAc,EAAe,IAATA,EAAI,IAGhE+H,WAtIiB,WAwIhB,IAFY,EAEN/H,EAAMgF,KAAKhF,MAAMkF,MAEjB8C,EAAM,GAJA,IAKehI,EAAIiI,WALnB,IAKZ,2BAA0C,oBAA9B1L,EAA8B,KACnC2L,EADmC,KAClB,IACvBF,EAAIzL,GAAM2L,GAAQ,OAAYA,EAAO,MAA5B,UAAsCA,EAAO,MAAS,MAAU,MAP9D,8BAUZ,MAAO,MAASF,EAAI,GAAK,MAASA,EAAI,GAAK,MAASA,EAAI,IAGzDG,SAnJiB,SAmJRC,GAER,IAAMC,EAAOrD,KAAK+C,aACZO,EAAOF,EAAOL,aAEpB,OAAIM,EAAOC,GACFD,EAAO,MAASC,EAAO,MAGxBA,EAAO,MAASD,EAAO,MAGhCE,MA/JiB,SA+JXH,GACL,IAAMI,EAAgBxD,KAAKmD,SAASC,GACpC,OAAII,GAAiB,IACb,MAGAA,GAAiB,IAAO,KAAO,IAGxCC,OAxKiB,WA0KhB,IAAMzI,EAAMgF,KAAKhF,MAAMkF,MAEvB,OADsB,IAATlF,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,IAC9C,KAGd0I,QA/KiB,WAgLhB,OAAQ1D,KAAKyD,UAGdE,OAnLiB,WAqLhB,IADA,IAAM3I,EAAMgF,KAAKhF,MACRzD,EAAI,EAAGA,EAAI,EAAGA,IACtByD,EAAIkF,MAAM3I,GAAK,IAAMyD,EAAIkF,MAAM3I,GAGhC,OAAOyD,GAGR4I,QA5LiB,SA4LTC,GACP,IAAM/I,EAAMkF,KAAKlF,MAEjB,OADAA,EAAIoF,MAAM,IAAMpF,EAAIoF,MAAM,GAAK2D,EACxB/I,GAGRgJ,OAlMiB,SAkMVD,GACN,IAAM/I,EAAMkF,KAAKlF,MAEjB,OADAA,EAAIoF,MAAM,IAAMpF,EAAIoF,MAAM,GAAK2D,EACxB/I,GAGRiJ,SAxMiB,SAwMRF,GACR,IAAM/I,EAAMkF,KAAKlF,MAEjB,OADAA,EAAIoF,MAAM,IAAMpF,EAAIoF,MAAM,GAAK2D,EACxB/I,GAGRkJ,WA9MiB,SA8MNH,GACV,IAAM/I,EAAMkF,KAAKlF,MAEjB,OADAA,EAAIoF,MAAM,IAAMpF,EAAIoF,MAAM,GAAK2D,EACxB/I,GAGRmJ,OApNiB,SAoNVJ,GACN,IAAM9I,EAAMiF,KAAKjF,MAEjB,OADAA,EAAImF,MAAM,IAAMnF,EAAImF,MAAM,GAAK2D,EACxB9I,GAGRmJ,QA1NiB,SA0NTL,GACP,IAAM9I,EAAMiF,KAAKjF,MAEjB,OADAA,EAAImF,MAAM,IAAMnF,EAAImF,MAAM,GAAK2D,EACxB9I,GAGRoJ,UAhOiB,WAkOhB,IAAMnJ,EAAMgF,KAAKhF,MAAMkF,MACjB7H,EAAiB,GAAT2C,EAAI,GAAoB,IAATA,EAAI,GAAqB,IAATA,EAAI,GACjD,OAAO8E,EAAM9E,IAAI3C,EAAOA,EAAOA,IAGhC+L,KAvOiB,SAuOZP,GACJ,OAAO7D,KAAKxE,MAAMwE,KAAKG,OAAUH,KAAKG,OAAS0D,IAGhDQ,QA3OiB,SA2OTR,GACP,OAAO7D,KAAKxE,MAAMwE,KAAKG,OAAUH,KAAKG,OAAS0D,IAGhDS,OA/OiB,SA+OVC,GACN,IAAMzJ,EAAMkF,KAAKlF,MACbgH,EAAMhH,EAAIoF,MAAM,GAIpB,OAFA4B,GADAA,GAAOA,EAAMyC,GAAW,KACZ,EAAI,IAAMzC,EAAMA,EAC5BhH,EAAIoF,MAAM,GAAK4B,EACRhH,GAGR0J,IAxPiB,SAwPbC,EAAYC,GAGf,IAAKD,IAAeA,EAAWzJ,IAC9B,MAAM,IAAIiF,MAAM,gFAAkFwE,GAGnG,IAAME,EAASF,EAAWzJ,MACpBoI,EAASpD,KAAKhF,MACd4J,OAAe7M,IAAX2M,EAAuB,GAAMA,EAEjCG,EAAI,EAAID,EAAI,EACZzI,EAAIwI,EAAOnJ,QAAU4H,EAAO5H,QAE5BsJ,IAAQD,EAAI1I,KAAO,EAAK0I,GAAKA,EAAI1I,IAAM,EAAI0I,EAAI1I,IAAM,GAAK,EAC1D4I,EAAK,EAAID,EAEf,OAAOhF,EAAM9E,IACZ8J,EAAKH,EAAOlD,MAAQsD,EAAK3B,EAAO3B,MAChCqD,EAAKH,EAAO/C,QAAUmD,EAAK3B,EAAOxB,QAClCkD,EAAKH,EAAO9C,OAASkD,EAAK3B,EAAOvB,OACjC8C,EAAOnJ,QAAUoJ,EAAIxB,EAAO5H,SAAW,EAAIoJ,MAK9C,I,iBAAK,IAAMjK,EAAK,KACf,GAAI8E,EAAcuF,SAASrK,GAC1B,iBAGD,IAAM+C,EAAWL,EAAQ1C,GAAO+C,SAGhCoC,EAAMvD,UAAU5B,GAAS,WACxB,GAAIqF,KAAKrF,QAAUA,EAClB,OAAO,IAAImF,EAAME,MAGlB,GAAIpE,UAAUtD,OAAS,EACtB,OAAO,IAAIwH,EAAMlE,UAAWjB,GAG7B,IAAMsK,EAA0C,kBAAxBrJ,UAAU8B,GAAyBA,EAAWsC,KAAKG,OAC3E,OAAO,IAAIL,EAAMoF,EAAY7H,EAAQ2C,KAAKrF,OAAOA,GAAOwD,IAAI6B,KAAKE,QAAQ5D,OAAO2I,GAAWtK,IAI5FmF,EAAMnF,GAAS,SAAUuF,GAKxB,MAJqB,kBAAVA,IACVA,EAAQG,EAAUb,EAAO7C,KAAKf,WAAY8B,IAGpC,IAAIoC,EAAMI,EAAOvF,KA3B1B,MAAoBjD,OAAO4F,KAAKD,GAAhC,eAA0C,IAyC1C,SAASqE,EAAO/G,EAAOwK,EAASC,GAC/BzK,EAAQtD,MAAMC,QAAQqD,GAASA,EAAQ,CAACA,GADC,UAGzBA,GAHyB,IAGzC,2BAAuB,KAAZ0K,EAAY,SACrBxF,EAASwF,KAAOxF,EAASwF,GAAK,KAAKF,GAAWC,GAJP,8BASzC,OAFAzK,EAAQA,EAAM,GAEP,SAAUtC,GAChB,IAAI2F,EAEJ,OAAIpC,UAAUtD,OAAS,GAClB8M,IACH/M,EAAQ+M,EAAS/M,KAGlB2F,EAASgC,KAAKrF,MACPuF,MAAMiF,GAAW9M,EACjB2F,IAGRA,EAASgC,KAAKrF,KAASuF,MAAMiF,GACzBC,IACHpH,EAASoH,EAASpH,IAGZA,IAIT,SAAS2D,EAAMxH,GACd,OAAO,SAAUmL,GAChB,OAAOlL,KAAKD,IAAI,EAAGC,KAAKF,IAAIC,EAAKmL,KAInC,SAASJ,EAAY7M,GACpB,OAAOhB,MAAMC,QAAQe,GAASA,EAAQ,CAACA,GAGxC,SAASgI,EAAUW,EAAO1I,GACzB,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAQf,IACH,kBAAbyJ,EAAMzJ,KAChByJ,EAAMzJ,GAAK,GAIb,OAAOyJ,EAGR9J,EAAOC,QAAU2I,G,mBCjejB,MAaWyF,IAOS,qBAAXC,OAAyBA,OAASxF,UAL7B,KAANyF,aAAqB,OAMzB,SAAUD,EAAQE,EAAU3N,GACxB,aACA,IACI4N,EACG,SADHA,EAEG,WAFHA,EAGG,QAHHA,EAIG,SAJHA,EAKG,UALHA,EAMG,SANHA,EAOG,YAPHA,EAQG,OAMHC,EAAU,CACVC,EAAG,QACH/M,EAAG,QACHvB,EAAG,KACHsL,EAAG,SACH+B,EAAG,YACHkB,GAAI,WACJC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,GAAI,cACJC,GAAI,cACJC,GAAI,cACJC,IAAK,iBACLC,IAAK,yBAELC,EAAW,WAEX,IAAIC,EAAU,GACVC,EAAW,GACXC,EAAc,CAAC,WAAY,QAAS,MAAO,QAC3CC,EAAa,CAAC,SAAU,MAAO,IAAK,MACxC,SAASC,EAAmBtM,GACxB,OAAOA,EAAIuM,OAAO,GAAGrM,cAAgBF,EAAIe,MAAM,GAGnD,MAAO,CACHyL,aAAcJ,EACdK,YAAaJ,EACbK,aAAc,SAAUrN,GACpB,IAAIqE,EAASyI,EAAS9M,GAEtB,GAAI8M,EAASb,EAAQS,KAAK1M,GACtB,OAAOqE,EASX,IAPA,IAEIiJ,EAEA3B,EACA4B,EALAC,EAAiBP,EAAmBjN,GACpCyN,EAAW1B,EAAS2B,cAAc,OAAOzB,EAAQ9M,GAEjDvB,EAAI,EAIDA,EAAImP,EAAYpO,OAAQf,IAQ3B,IAPA2P,EAA0BR,EAAYnP,GAAG+P,QAAQ,KAAM,IACvDL,EAAsB,CAClBtN,EACA+M,EAAYnP,GAAKoC,EACjBuN,EAA0BC,EAC1BP,EAAmBM,GAA2BC,GAE7C7B,EAAI,EAAGA,EAAI2B,EAAoBrB,EAAQ/C,GAAIyC,IAC5C,GAAI8B,EAASH,EAAoB3B,MAAQvN,EAAW,CAChDiG,EAASiJ,EAAoB3B,GAC7B,MAMZ,OADAmB,EAAS9M,GAAQqE,EACVA,GAEXuJ,kBAAmB,SAAUC,EAAUC,EAAQC,GAC3C,IAAI/N,EAAO6N,EAAW,IAAMC,EACxBzJ,EAASyI,EAAS9M,GAEtB,GAAI8M,EAASb,EAAQS,KAAK1M,GACtB,OAAOqE,EASX,IAPA,IAKI2J,EALAC,EAAalC,EAAS2B,cAAc,OAAOzB,EAAQ9M,GACnD+O,EAAgBJ,EAAOK,MAAM,KAC7BC,EAAiBL,GAAU,GAC3BnQ,EAAI,EACJ+N,GAAK,EAGF/N,EAAIsQ,EAAcjC,EAAQ/C,GAAItL,IACjC,KAAO+N,EAAIiB,EAAQO,aAAalB,EAAQ/C,GAAIyC,IAGxC,GAFAqC,EAAOrC,EAAI,EAAIuC,EAActQ,GAAKgP,EAAQO,aAAaxB,GAAKuC,EAActQ,GAC1EqQ,EAAWI,QAAUR,EAAW,IAAMG,EAAOI,EACzCH,EAAWhC,EAAQ/C,GAAI,CACvB7E,EAAS2J,EACT,MAMZ,OADAlB,EAAS9M,GAAQqE,EACVA,GAEXiK,OAAQ,SAAUtO,EAAMuO,EAAaC,GACjC,IAAI5Q,EAAI,EACJyG,EAASwI,EAAQ7M,GAErB,IAAK6M,EAAQZ,EAAQS,KAAK1M,GAAO,CAE7B,IADAqE,EAASwH,EAAO7L,GACTpC,EAAIoP,EAAWf,EAAQ/C,GAAItL,IAC9ByG,EAASA,GAAUwH,GAAQ0C,EAAcvB,EAAWpP,GAAKoP,EAAWpP,GAAGsD,eAAiB+L,EAAmBjN,IAC/G6M,EAAQ7M,GAAQqE,EAEpB,OAAOA,GAAUmK,IAnFd,GAuFXC,EAAiB,WACjB,SAASC,EAAW3F,GAChB,OAAOA,EAAI8C,EAAO8C,YAAc5C,EAAS6C,gBAAgB3C,EAAQO,KAAOT,EAAS8C,KAAK5C,EAAQO,IAAMX,EAAOiD,aAAe/C,EAAS6C,gBAAgB3C,EAAQI,KAAON,EAAS8C,KAAK5C,EAAQI,IAE5L,SAAS0C,EAAKC,EAAMC,GAChB,UAAWD,GAAQhD,EACf,KAAM,uBAKV,IAAIkD,EAAQjD,EAAQhB,EAChBkE,EAAQzR,MAAMwR,GAAOxN,MAAMsB,KAAKf,UAAW,GAC3CmN,EAAO,aACPC,EAAS,WAAc,OAAOL,EAAKM,MAAMjJ,gBAAgB+I,EAAO/I,KAAO4I,EAASE,EAAMxM,OAAOjF,MAAMwR,GAAOxN,MAAMsB,KAAKf,cAMzH,OAJI+M,EAAKE,KACLE,EAAKF,GAASF,EAAKE,IACvBG,EAAOH,GAAS,IAAIE,EAEbC,EAGX,MAAO,CAKHE,GAAIR,EAAKL,EAAY,GAAG,GAMxBc,GAAIT,EAAKL,EAAY,GAMrBe,GAAIV,EAAKnC,EAAQ0B,OAAQ,EAAG,oBAAoB,GAMhDoB,GAAIX,EAAKnC,EAAQ0B,OAAQ,EAAG,kBAAkB,GAM9CqB,IAAKZ,EAAKnC,EAAQ0B,OAAQ,EAAG,yBAAyB,GAAO,SAAUU,GAAQ,OAAOnD,EAAO+D,WAAWZ,EAAM,IAAO,OAMrHa,IAAKd,EAAKnC,EAAQ0B,OAAQ,EAAG,wBAAwB,GAAO,SAAUwB,GAAM,OAAOjE,EAAOkE,aAAaD,MAMvGE,IAAK,WACD,OAAOC,KAAKD,KAAOC,KAAKD,QAAS,IAAIC,MAAOC,WAOhDC,KAAM,SAAUC,GACRA,EAAMC,gBACND,EAAMC,kBAEND,EAAME,cAAe,GAO7BC,KAAM,SAAUH,GACRA,EAAMI,gBAAkBJ,EAAMK,WAC9BL,EAAMI,iBAENJ,EAAMM,aAAc,GAQ5BC,KAAM,SAAUP,GAGZ,IAKIQ,IAPJR,EAAQA,EAAMS,eAAiBT,GAMZU,QAAUV,EAAMW,YAAchF,GAC3BiF,eAAiBjF,EACnCkF,EAAML,EAAShC,gBACfC,EAAO+B,EAAS/B,KAGpB,GAAIuB,EAAMc,UAAY9S,EAAW,CAC7B,IAAI+S,EAAQf,EAAMc,QAAQ,GAC1B,MAAO,CACHnI,EAAGoI,EAAK,MACRnI,EAAGmI,EAAK,OAKhB,OAAKf,EAAK,OAAoBA,EAAK,SAAiD,MAA3BA,EAAK,QAEnD,CACHrH,EAAGqH,EAAK,SACHa,GAAOA,EAAIG,YAAcvC,GAAQA,EAAKuC,YAAc,IACpDH,GAAOA,EAAII,YAAcxC,GAAQA,EAAKwC,YAAc,GACzDrI,EAAGoH,EAAK,SACHa,GAAOA,EAAIK,WAAazC,GAAQA,EAAKyC,WAAa,IAClDL,GAAOA,EAAIM,WAAa1C,GAAQA,EAAK0C,WAAa,IAGxD,CACHxI,EAAGqH,EAAK,MACRpH,EAAGoH,EAAK,QAShBoB,KAAM,SAAUpB,GACZ,IAAIqB,EAASrB,EAAMqB,OACnB,OAAKrB,EAAMsB,OAASD,IAAWrT,EAGpBgS,EAAMsB,MAFI,EAATD,EAAa,EAAc,EAATA,EAAa,EAAc,EAATA,EAAa,EAAI,GAWrEE,IAAK,SAAUC,EAAMnU,GACjB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAIwO,EAAQ/C,GAAItL,IAEhC,IACI,GAAIH,EAAIG,KAAOgU,EACX,OAAOhU,EAEf,MAAOyB,IACX,OAAQ,GAQZwS,IAAK,SAAUpU,GACX,IAAIqU,EAAMpU,MAAMC,QAChB,OAAOmU,EAAMA,EAAIrU,GAAO4I,KAAK0L,KAAKtU,IAAQuO,GAQ9C+F,KAAM,SAAU5O,GACZ,OAAIA,IAAQ/E,GAEA,OAAR+E,EADOA,EAAM,GAGVpF,OAAOkO,EAAQhB,GAAGrK,SAASoC,KAAKG,GAAKwK,QAAQ,oBAAqB,MAAMzM,eAInF6N,KAAMA,GA5LO,GA8MjBiD,EAAOvR,KACPwR,EAASpG,EAAOqG,OAChBC,EAAU,WACV,IAAIC,EAAe,CACfnH,EAAG+G,EAAKK,GACRnG,EAAG8F,EAAKM,IACRnT,EAAG6S,EAAKO,IACRrH,EAAG8G,EAAKQ,IACRC,EAAGT,EAAKU,KACRtT,EAAG4S,EAAKW,KACRnQ,EAAGwP,EAAKY,IACR3T,EAAG,SAaP,MAAO,CACH4T,MAAO,SAAU9J,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACzB,MAAO,GAAMV,EAAalG,EAAEnD,EAAIqJ,EAAanH,GAAK,GAEtD8H,OAAQ,SAAUhK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC1B,OAAO/J,GAEXiK,WAAY,SAAUjK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC9B,OAAO5G,GAAKuG,GAAKK,GAAKL,EAAIpQ,GAE9B4Q,YAAa,SAAUlK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAQ5G,GAAKuG,GAAKK,IAAML,EAAI,GAAKpQ,GAErC6Q,cAAe,SAAUnK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,OAASL,GAAKK,EAAI,GAAK,EAAK5G,EAAI,EAAIuG,EAAIA,EAAIpQ,GAAK6J,EAAI,KAAQuG,GAAMA,EAAI,GAAK,GAAKpQ,GAErF8Q,YAAa,SAAUpK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAO5G,GAAKuG,GAAKK,GAAKL,EAAIA,EAAIpQ,GAElC+Q,aAAc,SAAUrK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAChC,OAAO5G,IAAMuG,EAAIA,EAAIK,EAAI,GAAKL,EAAIA,EAAI,GAAKpQ,GAE/CgR,eAAgB,SAAUtK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAClC,OAASL,GAAKK,EAAI,GAAK,EAAK5G,EAAI,EAAIuG,EAAIA,EAAIA,EAAIpQ,EAAI6J,EAAI,IAAMuG,GAAK,GAAKA,EAAIA,EAAI,GAAKpQ,GAEzFiR,YAAa,SAAUvK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAO5G,GAAKuG,GAAKK,GAAKL,EAAIA,EAAIA,EAAIpQ,GAEtCkR,aAAc,SAAUxK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAChC,OAAQ5G,IAAMuG,EAAIA,EAAIK,EAAI,GAAKL,EAAIA,EAAIA,EAAI,GAAKpQ,GAEpDmR,eAAgB,SAAUzK,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAClC,OAASL,GAAKK,EAAI,GAAK,EAAK5G,EAAI,EAAIuG,EAAIA,EAAIA,EAAIA,EAAIpQ,GAAK6J,EAAI,IAAMuG,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKpQ,GAElGoR,YAAa,SAAU1K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAO5G,GAAKuG,GAAKK,GAAKL,EAAIA,EAAIA,EAAIA,EAAIpQ,GAE1CqR,aAAc,SAAU3K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAChC,OAAO5G,IAAMuG,EAAIA,EAAIK,EAAI,GAAKL,EAAIA,EAAIA,EAAIA,EAAI,GAAKpQ,GAEvDsR,eAAgB,SAAU5K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAClC,OAASL,GAAKK,EAAI,GAAK,EAAK5G,EAAI,EAAIuG,EAAIA,EAAIA,EAAIA,EAAIA,EAAIpQ,EAAI6J,EAAI,IAAMuG,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKpQ,GAEzGuR,WAAY,SAAU7K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC9B,OAAQ5G,EAAIkG,EAAalG,EAAEuG,EAAIK,GAAKV,EAAanH,EAAI,IAAMiB,EAAI7J,GAEnEwR,YAAa,SAAU9K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAO5G,EAAIkG,EAAajT,EAAEsT,EAAIK,GAAKV,EAAanH,EAAI,IAAM5I,GAE9DyR,cAAe,SAAU/K,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,OAAQ5G,EAAI,GAAKkG,EAAalG,EAAEkG,EAAanH,EAAIwH,EAAIK,GAAK,GAAKzQ,GAEnE0R,WAAY,SAAUhL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC9B,OAAa,GAALL,EAAUpQ,EAAI6J,EAAIkG,EAAalH,EAAE,EAAG,IAAMuH,EAAIK,EAAI,IAAMzQ,GAEpE2R,YAAa,SAAUjL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAQL,GAAKK,EAAKzQ,EAAI6J,EAAIA,GAAuC,EAAjCkG,EAAalH,EAAE,GAAI,GAAKuH,EAAIK,IAAUzQ,GAE1E4R,cAAe,SAAUlL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,OAAS,GAALL,EAAepQ,EACfoQ,GAAKK,EAAUzQ,EAAI6J,GAClBuG,GAAKK,EAAI,GAAK,EAAU5G,EAAI,EAAIkG,EAAalH,EAAE,EAAG,IAAMuH,EAAI,IAAMpQ,EAChE6J,EAAI,GAAqC,EAA/BkG,EAAalH,EAAE,GAAI,KAAOuH,IAAUpQ,GAEzD6R,WAAY,SAAUnL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC9B,OAAQ5G,GAAKkG,EAAaK,EAAE,GAAKA,GAAKK,GAAKL,GAAK,GAAKpQ,GAEzD8R,YAAa,SAAUpL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAC/B,OAAO5G,EAAIkG,EAAaK,EAAE,GAAKA,EAAIA,EAAIK,EAAI,GAAKL,GAAKpQ,GAEzD+R,cAAe,SAAUrL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,OAASL,GAAKK,EAAI,GAAK,GAAM5G,EAAI,GAAKkG,EAAaK,EAAE,EAAIA,EAAIA,GAAK,GAAKpQ,EAAI6J,EAAI,GAAKkG,EAAaK,EAAE,GAAKA,GAAK,GAAKA,GAAK,GAAKpQ,GAEhIgS,cAAe,SAAUtL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,IAAI3T,EAAIiT,EAAanT,EAAOgM,EAAI,EAAOzI,EAAI0J,EAC3C,OAAS,GAALuG,EAAepQ,EAAmB,IAAXoQ,GAAKK,GAAgBzQ,EAAI6J,GAAQjB,IAAGA,EAAQ,GAAJ6H,GAC/DtQ,EAAI4P,EAAa5P,EAAE0J,IAAM1J,EAAI0J,EAAG/M,EAAI8L,EAAI,GACvC9L,EAAI8L,GAAK,EAAImH,EAAanH,GAAKmH,EAAahT,EAAE8M,EAAI1J,IAC9CA,EAAI4P,EAAalH,EAAE,EAAG,IAAMuH,GAAK,IAAML,EAAajT,GAAGsT,EAAIK,EAAI3T,IAAM,EAAIiT,EAAanH,GAAKA,GAAM5I,IAE9GiS,eAAgB,SAAUvL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAClC,IAAI3T,EAAIiT,EAAanT,EAAOgM,EAAI,EAAOzI,EAAI0J,EAC3C,OAAS,GAALuG,EAAepQ,EACH,IAAXoQ,GAAKK,GAAgBzQ,EAAI6J,GACzBjB,IAAGA,EAAQ,GAAJ6H,GACRtQ,EAAI4P,EAAa5P,EAAE0J,IAAM1J,EAAI0J,EAAG/M,EAAI8L,EAAI,GACvC9L,EAAI8L,GAAK,EAAImH,EAAanH,GAAKmH,EAAahT,EAAE8M,EAAI1J,GAChDA,EAAI4P,EAAalH,EAAE,GAAI,GAAKuH,GAAKL,EAAajT,GAAGsT,EAAIK,EAAI3T,IAAM,EAAIiT,EAAanH,GAAKA,GAAKiB,EAAI7J,IAEzGkS,iBAAkB,SAAUxL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACpC,IAAI3T,EAAIiT,EAAanT,EAAOgM,EAAI,EAAOzI,EAAI0J,EAC3C,OAAS,GAALuG,EAAepQ,EACC,IAAfoQ,GAAKK,EAAI,GAAgBzQ,EAAI6J,GAC7BjB,IAAGA,EAAI6H,GAAK,GAAK,MAClBtQ,EAAI4P,EAAa5P,EAAE0J,IAAM1J,EAAI0J,EAAG/M,EAAI8L,EAAI,GACvC9L,EAAI8L,GAAK,EAAImH,EAAanH,GAAKmH,EAAahT,EAAE8M,EAAI1J,GACnDiQ,EAAI,EAAiBjQ,EAAI4P,EAAalH,EAAE,EAAG,IAAMuH,GAAK,IAAML,EAAajT,GAAGsT,EAAIK,EAAI3T,IAAM,EAAIiT,EAAanH,GAAKA,IAAjG,GAAuG5I,EACnHG,EAAI4P,EAAalH,EAAE,GAAI,IAAMuH,GAAK,IAAML,EAAajT,GAAGsT,EAAIK,EAAI3T,IAAM,EAAIiT,EAAanH,GAAKA,GAAK,GAAKiB,EAAI7J,IAErHmS,WAAY,SAAUzL,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,EAAG3T,GAEjC,OAAO+M,GAAKuG,GAAKK,GAAKL,KADtBtT,EAAIA,GAAKiT,EAAanT,GACU,GAAKwT,EAAItT,GAAKkD,GAElDoS,YAAa,SAAU1L,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,EAAG3T,GAElC,OAAO+M,IAAMuG,EAAIA,EAAIK,EAAI,GAAKL,KAD9BtT,EAAIA,GAAKiT,EAAanT,GACkB,GAAKwT,EAAItT,GAAK,GAAKkD,GAE/DqS,cAAe,SAAU3L,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,EAAG3T,GAEpC,OADAA,EAAIA,GAAKiT,EAAanT,GACbwT,GAAKK,EAAI,GAAK,EAAK5G,EAAI,GAAKuG,EAAIA,IAAuB,GAAhBtT,GAAM,QAAesT,EAAItT,IAAMkD,EAAI6J,EAAI,IAAMuG,GAAK,GAAKA,IAAuB,GAAhBtT,GAAM,QAAesT,EAAItT,GAAK,GAAKkD,GAErJsS,aAAc,SAAU5L,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GAChC,OAAO5G,EAAI7F,KAAKuO,cAAc7L,EAAG+J,EAAIL,EAAG,EAAGvG,EAAG4G,GAAKzQ,GAEvDuS,cAAe,SAAU7L,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACjC,IAAI7T,EAAI,OACR,OAAKwT,GAAKK,GAAM,EAAI,KACT5G,GAAKjN,EAAIwT,EAAIA,GAAKpQ,EAClBoQ,EAAK,EAAI,KACTvG,GAAKjN,GAAKwT,GAAM,IAAM,MAASA,EAAI,KAAOpQ,EAC1CoQ,EAAK,IAAM,KACXvG,GAAKjN,GAAKwT,GAAM,KAAO,MAASA,EAAI,OAASpQ,EAE7C6J,GAAKjN,GAAKwT,GAAM,MAAQ,MAASA,EAAI,SAAWpQ,GAG/DwS,gBAAiB,SAAU9L,EAAG0J,EAAGpQ,EAAG6J,EAAG4G,GACnC,OAAQL,EAAIK,EAAI,EAA4C,GAAvCzM,KAAKsO,aAAa5L,EAAO,EAAJ0J,EAAO,EAAGvG,EAAG4G,GAAUzQ,EAAgD,GAA5CgE,KAAKuO,cAAc7L,EAAO,EAAJ0J,EAAQK,EAAG,EAAG5G,EAAG4G,GAAc,GAAJ5G,EAAS7J,IArJ7H,GAyLVyS,EAAa,WACb,IAAIC,EAAkB,oBAKlBC,EAAc,GACdC,EAAQxG,EAAcsD,KACtBmD,EAAa,CACbC,yBAAyB,EACzBC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,MAAM,GAGV,SAASC,IACL,IAAIC,EAAKC,EAAaC,EAAMnW,EAAMoW,EAASC,EAAOvF,EAAS7O,UAAU,IAAM,GACvErE,EAAI,EACJe,EAASsD,UAAUgK,EAAQ/C,GAC3BoN,GAAO,EAqBX,IAlBIrB,EAAMnE,IAAW9E,IACjBsK,EAAOxF,EACPA,EAAS7O,UAAU,IAAM,GAEzBrE,EAAI,GAIJqX,EAAMnE,IAAW9E,IAAYiJ,EAAMnE,IAAW9E,IAC9C8E,EAAS,IAITnS,IAAWf,IACXkT,EAASyF,IACP3Y,GAGCA,EAAIe,EAAQf,IAEf,GAAgC,OAA3BwY,EAAUnU,UAAUrE,IAErB,IAAKoC,KAAQoW,EACTH,EAAMnF,EAAO9Q,GAIT8Q,KAHJqF,EAAOC,EAAQpW,MAQXsW,GAAQH,IAASK,EAAcL,KAAUD,EAAczH,EAAcoD,IAAIsE,MACrED,GACAA,GAAc,EACdG,EAAQJ,GAAOxH,EAAcoD,IAAIoE,GAAOA,EAAM,IAG9CI,EAAQJ,GAAOO,EAAcP,GAAOA,EAAM,GAI9CnF,EAAO9Q,GAAQgW,EAAOM,EAAMD,EAAOF,IAG5BA,IAAS/X,IAChB0S,EAAO9Q,GAAQmW,IAO/B,OAAOrF,EAGX,SAAS2F,EAAQ7E,EAAMnU,EAAKiZ,GACxB,IAAK,IAAI9Y,EAAI8Y,GAAa,EAAG9Y,EAAIH,EAAIwO,EAAQ/C,GAAItL,IAC7C,GAAIH,EAAIG,KAAOgU,EACX,OAAOhU,EACf,OAAQ,EAGZ,SAAS+Y,EAAWxT,GAChB,OAAO8R,EAAM9R,IAAQ6I,EAGzB,SAAS4K,EAAczT,GACnB,IAAK,IAAInD,KAAQmD,EACb,OAAO,EACX,OAAO,EAGX,SAASqT,EAAcrT,GACnB,IAAKA,GAAO8R,EAAM9R,IAAQ6I,EACtB,OAAO,EAEX,IAAI6K,EACA3H,EAAQjD,EAAQhB,EAChBhL,EAAiBlC,OAAOmR,GAAOjP,eAC/B6W,EAAoB7W,EAAe+C,KAAKG,EAAK,eAC7C4T,EAAmB5T,EAAII,aAAeJ,EAAII,YAAY2L,IAAUjP,EAAe+C,KAAKG,EAAII,YAAY2L,GAAQ,iBAEhH,GAAI/L,EAAII,cAAgBuT,IAAsBC,EAC1C,OAAO,EAIX,IAAKF,KAAO1T,GAEZ,OAAO8R,EAAM4B,IAAQ7K,GAAW/L,EAAe+C,KAAKG,EAAK0T,GAG7D,SAASG,EAAK7T,EAAK8T,GACf,IAAIrZ,EAAI,EAER,GAAIsZ,EAAY/T,GACZ,KAAOvF,EAAIuF,EAAI8I,EAAQ/C,KACsB,IAArC+N,EAASjU,KAAKG,EAAIvF,GAAIA,EAAGuF,EAAIvF,IADVA,UAM3B,IAAKA,KAAKuF,EACN,IAAyC,IAArC8T,EAASjU,KAAKG,EAAIvF,GAAIA,EAAGuF,EAAIvF,IAC7B,MAIZ,OAAOuF,EAGX,SAAS+T,EAAY/T,GACjB,IAAIxE,IAAWwE,GAAO,CAAC8I,EAAQ/C,KAAM/F,GAAOA,EAAI8I,EAAQ/C,GACpDuJ,EAAIwC,EAAM9R,GACd,OAAOwT,EAAWlE,KAAcA,GAAKzG,GAAsB,IAAXrN,GAAgBsW,EAAMtW,IAAWqN,GAAWrN,EAAS,GAAMA,EAAS,KAAMwE,GAG9H,SAASgU,EAAiBzY,GAEtB,OADaA,EAAM4C,MAAMyT,IAAmB,IAC9B9O,KArJF,KAwJhB,SAASmR,EAAQC,EAAMC,GAInB,IAHA,IAAIC,GAAYF,EAAKG,YAAczL,GAAU0L,iBAAiBH,IAAa,GACvE1Z,EAAI2Z,EAAStL,EAAQ/C,GAElBtL,KACH,GAAI2Z,EAAS3Z,IAAMyZ,EACf,OAAO,EAEf,OAAO,EAGX,SAASK,EAAsBC,EAAIC,EAAUC,GACzC,GAAIpJ,EAAcoD,IAAIgG,GAClB,IAAK,IAAIja,EAAI,EAAGA,EAAIia,EAAM5L,EAAQ/C,GAAItL,IAClC8Z,EAAsBC,EAAIC,EAAUC,EAAMja,SAEzCqX,EAAM4C,IAAU7L,EACrB2L,EAAGG,mBAAmBF,EAAUC,GAEhCF,EAAGD,sBAAsBE,EAAUC,EAAME,SAAWF,EAAQA,EAAM,IAG1E,SAASG,EAAUL,EAAI3J,EAAMjN,GACzB,IACQ4W,EAAG1L,EAAQ9M,GAAG6O,KAAU5P,IACxBuZ,EAAG1L,EAAQ9M,GAAG6O,GAI1B,SAAqBA,EAAMjN,GAGvB,OAFKmU,EAAWlH,EAAK9M,gBAAkB+T,EAAMlU,IAAQiL,IACjDjL,GAAO,MACJA,EAPuBkX,CAAYjK,EAAMjN,IAC9C,MAAO1B,KASb,SAAS6Y,EAAsBC,EAASC,GACpC,IAAIC,EACAC,GACgB,IAAhBF,GACAD,EAAQI,EAAEnV,OAAO,EAAG,GACpB+U,EAAQI,EAAEtM,EAAQ/C,GAAK,GACvBoP,EAAWH,EAAQI,EAAE,GACrBC,EAAQL,EAAQR,GAAIW,EAASG,MAAOH,EAASI,SAAUJ,EAASK,OAAQL,EAASM,UAAU,KAG3FP,EAAQ5B,EAAQ0B,EAASnD,KACZ,GACTA,EAAY5R,OAAOiV,EAAO,GAItC,SAASQ,EAAkBlB,EAAI3J,EAAMtP,GAzMhB,eA0MbsP,GAzMY,cAyMeA,EAC3B2J,EAAG3J,GAAQtP,EAEXsZ,EAAUL,EAAI3J,EAAMtP,GAG5B,SAAS8Z,EAAQb,EAAIc,EAAOrC,EAASuC,EAAQC,EAAUE,GACnD,IAIIjC,EACAsB,EAEAY,EACArZ,EACAsZ,EACAN,EAVAO,EAAazC,EAAcJ,GAC3B5Q,EAAO,GACPrF,EAAK,GACLvC,EAAI,EAwBR,IAhBIqb,GACAN,EAASvC,EAAQuC,OACTvC,EAAQ8C,MAChBH,EAAW3C,EAAQ2C,SACnBrZ,EAAO0W,EAAQ1W,KACfsZ,EAAgB5C,EAAQ4C,cACxBJ,EAAWxC,EAAQwC,SACnBF,EAAWtC,EAAQsC,UAGnBA,EAAWtC,EACf4C,EAAgBA,GAAiB,GACjCN,EAAWA,GAAY,IACvBC,EAASA,GAAU,QACnBG,EAAiBA,IAAkB,EAE5Blb,EAAIoX,EAAY/I,EAAQ/C,GAAItL,IAC/B,GAAIoX,EAAYpX,GAAG+Z,KAAOA,EAAI,CAC1BQ,EAAUnD,EAAYpX,GACtB,MAYR,IAAKiZ,KARAsB,IACDA,EAAU,CACNR,GAAIA,EACJY,EAAG,IAEPvD,EAAYvW,KAAK0Z,IAGTM,EAEJjT,EAAKqR,GA7PI,eA4PTA,GA3PQ,cA2PkBA,EACdc,EAAGd,GAEHN,EAAWoB,GAAIwB,IAAItC,GAGvC,IAAKA,KAAOrR,EACJA,EAAKqR,KAAS4B,EAAM5B,IAAQ4B,EAAM5B,KAASzY,IAC3C+B,EAAG0W,GAAO4B,EAAM5B,IAGxB,GAAKD,EAAczW,GA4EV2Y,GACLZ,EAAsBC,OA7EF,CACpB,IAAIiB,EACAC,EACAnX,EACAoX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAOd,EAAiB,EAAIrC,EAAQoD,EAAM1B,EAAQI,GAClDsB,EAAO,CACPpB,MAAOtY,EACPuY,SAAUO,EAAa7C,EAAUsC,EACjCC,OAAQA,EACRC,SAAUA,GAOd,IALc,IAAVgB,IACAA,EAAOzB,EAAQI,EAAEtM,EAAQ/C,GACzBiP,EAAQI,EAAE9Z,KAAKob,IAGN,IAATD,EACA,GAAIlB,EAAW,EACXe,EAAYhL,EAAcuB,MAC1B0J,EAAQ,WAMJ,IAAK7C,KALLuC,EAAU3K,EAAcuB,MACxB2J,EAAWP,EAAUK,EACrBJ,EAAMQ,EAAKC,MAAQH,GAAWjB,EAC9BxW,EAAU,GAAM8P,EAAKxR,IAAI,EAAGiZ,EAAYf,EAAWU,GAAWV,GAAa,GAE/DvY,EACRmZ,EAAU3X,WAAW6D,EAAKqR,IAC1B0C,EAAQ5X,WAAWxB,EAAG0W,IACtB2C,GAAYD,EAAQD,GAAWnH,EAAO6G,EAAcnC,IAAQ8B,GAAQzW,EAASA,EAAUwW,EAAU,EAAG,EAAGA,GAAYY,EACnHT,EAAkBlB,EAAId,EAAK2C,GACvB7C,EAAWjX,IACXA,EAAK8Z,EAAU,CACXnC,KAAMM,EACN3J,KAAM6I,EACNqC,MAAOI,EACPtJ,IAAKwJ,EACLH,IAAKE,EACLQ,IAAK7X,EACLkU,QAAS,CACLuC,OAAQA,EACRqB,eAAgBhB,EAChBN,SAAUA,EACVE,SAAUA,EACVlZ,KAAMA,GAEVua,UAAWR,IAKnB9C,EAAWoC,IACXA,EAAS,GAAI7W,EAAS8P,EAAKxR,IAAI,EAAGkY,EAAWiB,IAE7CN,GACAnB,EAAsBC,GAClBxB,EAAWiC,IACXA,KAGJiB,EAAKH,MAAQjL,EAAckB,KAAdlB,CAAoBiL,IAEzCG,EAAKH,MAAQjL,EAAckB,KAAdlB,CAAoBiL,OAEhC,CACD,IAAK7C,KAAO1W,EACR0Y,EAAkBlB,EAAId,EAAK1W,EAAG0W,IAClCqB,EAAsBC,KAoCtC,SAAS+B,EAAiBvC,GACtB,SAAUA,EAAG1L,EAAQM,KAAOoL,EAAG1L,EAAQG,KAAOuL,EAAGwC,iBAAiBlO,EAAQ/C,IAG9E,SAASqN,EAAWe,GAChB,GAA6B,IAAzBrV,UAAUgK,EAAQ/C,GAClB,OAAO7C,KAEX,IAGI+T,EACAzC,EAJA0C,EAAO,IAAI9D,EACX+D,EAAWhD,EACX1Z,EAAI,EAIR,GAAIqX,EAAMqC,IAAatL,EAWnB,IAVAsO,EAAW,GACgB,MAAvBhD,EAASpK,OAAO,KAChByK,EAAK5L,EAAS2B,cAAc,QACzB6M,UAAYjD,EACf8C,EAAOzC,EAAG6C,UAGVJ,EAAOrO,EAAS0L,iBAAiBH,GAG9B1Z,EAAIwc,EAAKnO,EAAQ/C,GAAItL,IACxB0c,EAAS7b,KAAK2b,EAAKxc,IAG3B,GAAI0c,EAAU,CAIV,IAHIrF,EAAMqF,IAAatO,GAAakL,EAAYoD,IAAaA,IAAazO,GAAUyO,IAAaA,EAASnT,OACtGmT,EAAW,CAACA,IAEX1c,EAAI,EAAGA,EAAI0c,EAASrO,EAAQ/C,GAAItL,IACjCyc,EAAKzc,GAAK0c,EAAS1c,GAEvByc,EAAKpO,EAAQ/C,GAAKoR,EAASrO,EAAQ/C,GAGvC,OAAOmR,EAmeX,OAheA9D,EAAWtK,EAAQhB,GAAK,CAIpBwP,GAAI,SAAUC,EAAWC,GAGrB,IAEIhD,EAFAiD,GAFJF,GAAaA,GAnaL,IAma6BpZ,MAAMyT,IAAmB,CAnatD,KAqawB9I,EAAQ/C,GACpCtL,EAAI,EAER,OAAOyI,KAAK2Q,MAAK,WACbW,EAAKtR,KACL,IACI,GAAIsR,EAAGkD,iBACH,KAAOjd,EAAIgd,EAAiBhd,IACxB+Z,EAAGkD,iBAAiBH,EAAU9c,GAAI+c,QAErC,GAAIhD,EAAGmD,YACR,KAAOld,EAAIgd,EAAiBhd,IACxB+Z,EAAGoD,YAAY,KAAOL,EAAU9c,GAAI+c,GAE9C,MAAOtb,SAIjB2b,IAAK,SAAUN,EAAWC,GAGtB,IAEIhD,EAFAiD,GAFJF,GAAaA,GAxbL,IAwb6BpZ,MAAMyT,IAAmB,CAxbtD,KA0bwB9I,EAAQ/C,GACpCtL,EAAI,EAER,OAAOyI,KAAK2Q,MAAK,WACbW,EAAKtR,KACL,IACI,GAAIsR,EAAGsD,oBACH,KAAOrd,EAAIgd,EAAiBhd,IACxB+Z,EAAGsD,oBAAoBP,EAAU9c,GAAI+c,QAExC,GAAIhD,EAAGmD,YACR,KAAOld,EAAIgd,EAAiBhd,IACxB+Z,EAAGmD,YAAY,KAAOJ,EAAU9c,GAAI+c,GAE9C,MAAOtb,SAIjB6b,IAAK,SAAUR,EAAWC,GAEtB,OADAD,GAAaA,GA7cL,IA6c6BpZ,MAAMyT,IAAmB,CA7ctD,IA8cD1O,KAAK2Q,MAAK,WACb,IAAIW,EAAKpB,EAAWlQ,MACpBkQ,EAAWS,KAAK0D,GAAW,SAAU9c,EAAGud,GAKpCxD,EAAG8C,GAAGU,GAJW,SAAbC,EAAuB/b,GACvBsb,EAAQ3X,KAAKqD,KAAMhH,GACnBsY,EAAGqD,IAAIG,EAAcC,aAOrCC,QAAS,SAAUX,GACf,IAAI/C,EACAvH,EACJ,OAAO/J,KAAK2Q,MAAK,WACbW,EAAKtR,KACD0F,EAASuP,cACTlL,EAAQrE,EAASuP,YAAY,eACvBC,UAAUb,GAAW,GAAM,GACjC/C,EAAG6D,cAAcpL,IAGjBuH,EAAG8D,UAAU,KAAOf,OAOhCgB,OAAQ,SAAU7D,GACd,OAAOxR,KAAK2Q,MAAK,WAAcU,EAAsBrR,KAAM,YAAawR,OAG5E8D,QAAS,SAAU9D,GACf,OAAOxR,KAAK2Q,MAAK,WAAcU,EAAsBrR,KAAM,aAAcwR,OAG7E+D,OAAQ,SAAU/D,GACd,OAAOxR,KAAK2Q,MAAK,WAAcU,EAAsBrR,KAAM,cAAewR,OAG9EgE,MAAO,SAAUhE,GACb,OAAOxR,KAAK2Q,MAAK,WAAcU,EAAsBrR,KAAM,WAAYwR,OAG3EiE,OAAQ,WACJ,OAAOzV,KAAK2Q,MAAK,WACb,IACIQ,EADKnR,KACWmR,WACF,MAAdA,GACAA,EAAWuE,YAHN1V,UAOjB2V,OAAQ,WACJ,IACIpe,EACA+Z,EACA7S,EAHAmX,EAAU,GAWd,IANA5V,KAAK2Q,MAAK,YAE6B,IAA/BP,EADJ3R,EAASuB,KAAKmR,WACMyE,IAChBA,EAAQxd,KAAKqG,MAGhBlH,EAAI,EAAGA,EAAIqe,EAAQhQ,EAAQ/C,GAAItL,IAAK,CAGrC,IAFA+Z,EAAKsE,EAAQre,GACbkH,EAAS6S,EAAGH,WACLG,EAAGuE,YACNpX,EAAOqX,aAAaxE,EAAGuE,WAAYvE,GACvC7S,EAAOiX,YAAYpE,GAGvB,OAAOtR,MAGX+V,QAAS,SAAUC,GAOf,IANA,IAAIze,EAEA0e,EAAU/F,EAAW8F,GAAa,GAClCE,EAAUD,EACVxX,EAHQuB,KAGO,GAAGmR,WAClBgF,EAJQnW,KAIgB,GAAGmW,gBACxBD,EAAQE,WAAWxQ,EAAQ/C,GAAK,GACnCqT,EAAUA,EAAQE,WAAW,GAEjC,IAAK7e,EAAI,EARGyI,KAQM4F,EAAQ/C,GAAKtL,EAAG2e,EAAQL,aAR9B7V,KAQmD,IAAMzI,IACjE2e,EAAQG,YATArW,KASkBzI,IAE9B,IAAI+e,EAAcH,EAAkBA,EAAgBG,YAAc7X,EAAOoX,WAGzE,OAFApX,EAAOqX,aAAaG,EAASK,GAEtBtW,MAGXuW,UAAW,SAAUP,GACjB,OAAOhW,KAAK2Q,MAAK,WACb,IAAIW,EAAKpB,EAAWlQ,MAChBwW,EAAWlF,EAAGkF,WAEdA,EAAS5Q,EAAQ/C,GACjB2T,EAAST,QAAQC,GAEjB1E,EAAG+D,OAAOW,OAItBpZ,KAAM,SAAUoZ,GACZ,OAAOhW,KAAK2Q,MAAK,WAAcT,EAAWlQ,MAAM+V,QAAQC,OAM5DlD,IAAK,SAAU2D,EAAQ/b,GACnB,IAAI4W,EACAd,EACAkG,EACAC,EAAcnR,EAAOoR,iBACzB,OAAIhI,EAAM6H,IAAW9Q,EACbjL,IAAQ3C,GACRuZ,EAAKtR,KAAK,GACV0W,EAAWC,EAAcA,EAAYrF,EAAI,MAAQA,EAAGuF,aAAaJ,GAG1DE,EAA0B,MAAZD,EAAmBA,EAASI,iBAAiBL,GAAUnF,EAAG1L,EAAQ9M,GAAG2d,GAAUC,GAG7F1W,KAAK2Q,MAAK,WACbgB,EAAU3R,KAAMyW,EAAQ/b,MAKzBsF,KAAK2Q,MAAK,WACb,IAAKH,KAAOiG,EACR9E,EAAU3R,KAAMwQ,EAAKiG,EAAOjG,QAK5CuG,SAAU,SAAUC,GAKhB,IAJA,IAAIhG,EAEAiG,EAFM1f,EAAI,EACV2f,EAhmBI,IAgmB4BF,EAhmB5B,IAmmBAhG,EAAOhR,KAAKzI,MAAO,CAEvB,IADA0f,EAAYjG,EAAKiG,YACAA,EAAUE,SAASH,GAChC,OAAO,EACN,GAAsB,IAAlBhG,EAAKU,WAvmBV,IAumByCZ,EAAiBE,EAAKgG,UAtmB/D,IADA,KAumBmG1W,QAAQ4W,IAAsB,EACjI,OAAO,EAGf,OAAO,GAGXE,SAAU,SAAUJ,GAChB,IAAIK,EACArG,EACA1R,EACAgY,EACAC,EACAC,EACAC,EACAC,EACAngB,EAAI,EACJ+N,EAAI,EAER,GAAI0R,EAGA,IAFAK,EAAUL,EAAU/b,MAAMyT,IAAmB,GAErCsC,EAAOhR,KAAKzI,MAKhB,GAJAmgB,EAAe1G,EAAKiG,UAChBQ,IAAqB1f,IACrB0f,EAAmBC,IAAiB3f,GAEpC0f,EACA,KAAQF,EAAQF,EAAQ/R,MACpBoS,EAAaC,IAAIJ,QAMrB,GAHAD,EAAWtG,EAAKgG,UAtoBpB,GAuoBI1X,EAAwB,IAAlB0R,EAAKU,UAxoBf,IAwoB8CZ,EAAiBwG,GAxoB/D,IA0oBa,CACL,KAAQC,EAAQF,EAAQ/R,MAChBhG,EAAIgB,QA5oBpB,IA4oBwCiX,EA5oBxC,KA4oB6D,IAC7CjY,GAAOiY,EA7oBvB,KAgpBYD,KADJE,EAAa1G,EAAiBxR,MAE1B0R,EAAKgG,UAAYQ,GAMrC,OAAOxX,MAGX4X,YAAa,SAAUZ,GACnB,IAAIK,EACArG,EACA1R,EACAgY,EACAC,EACAC,EACAC,EACAC,EACAngB,EAAI,EACJ+N,EAAI,EAER,GAAI0R,EAGA,IAFAK,EAAUL,EAAU/b,MAAMyT,IAAmB,GAErCsC,EAAOhR,KAAKzI,MAKhB,GAJAmgB,EAAe1G,EAAKiG,UAChBQ,IAAqB1f,IACrB0f,EAAmBC,IAAiB3f,GAEpC0f,EACA,KAAQF,EAAQF,EAAQ/R,MACpBoS,EAAajC,OAAO8B,QAMxB,GAHAD,EAAWtG,EAAKgG,UAlrBpB,GAmrBI1X,EAAwB,IAAlB0R,EAAKU,UAprBf,IAorB8CZ,EAAiBwG,GAprB/D,IAsrBa,CACL,KAAQC,EAAQF,EAAQ/R,MACpB,KAAOhG,EAAIgB,QAxrBvB,IAwrB2CiX,EAxrB3C,MAwrBiE,GACjDjY,EAAMA,EAAIgI,QAzrB1B,IAyrB8CiQ,EAzrB9C,SA4rBYD,KADJE,EAAa1G,EAAiBxR,MAE1B0R,EAAKgG,UAAYQ,GAMrC,OAAOxX,MAGX6X,KAAM,WACF,OAAO7X,KAAK2Q,MAAK,WAAc3Q,KAAK4F,EAAQ9M,GAAGgf,QAAU,WAG7DC,KAAM,WACF,OAAO/X,KAAK2Q,MAAK,WAAc3Q,KAAK4F,EAAQ9M,GAAGgf,QAAU,YAG7DE,KAAM,SAAUC,EAAU5f,GAGtB,IAFA,IACIiZ,EADA/Z,EAAI,EAED+Z,EAAKtR,KAAKzI,MAAM,CACnB,GAAIc,IAAUN,EACV,OAAOuZ,EAAG4G,aAAaD,GAC3B3G,EAAG6G,aAAaF,EAAU5f,GAE9B,OAAO2H,MAGXoY,WAAY,SAAUH,GAClB,OAAOjY,KAAK2Q,MAAK,WAAc3Q,KAAKqY,gBAAgBJ,OAGxDK,OAAQ,WACJ,IACIC,EADKvY,KAAK,GACA4F,EAAQU,OAClByE,EAAavF,EAAOgT,aAAe9S,EAAS6C,gBAAT,WACnC0C,EAAYzF,EAAOiT,aAAe/S,EAAS6C,gBAAT,UACtC,MAAO,CACHmQ,IAAKH,EAAKG,IAAMzN,EAChB0N,KAAMJ,EAAKI,KAAO5N,IAI1B6N,SAAU,WACN,IAAItH,EAAKtR,KAAK,GACd,MAAO,CACH0Y,IAAKpH,EAAGuH,UACRF,KAAMrH,EAAGwH,aAIjB/N,WAAY,SAAU1S,GAGlB,IAFA,IACIiZ,EADA/Z,EAAI,EAED+Z,EAAKtR,KAAKzI,MAAM,CACnB,GAAIc,IAAUN,EACV,OAAOuZ,EAAE,WACbA,EAAE,WAAmBjZ,EAEzB,OAAO2H,MAGXiL,UAAW,SAAU5S,GAGjB,IAFA,IACIiZ,EADA/Z,EAAI,EAED+Z,EAAKtR,KAAKzI,MAAM,CACnB,GAAIc,IAAUN,EACV,OAAOuZ,EAAE,UACbA,EAAE,UAAkBjZ,EAExB,OAAO2H,MAGXtF,IAAK,SAAUrC,GACX,IAAIiZ,EAAKtR,KAAK,GACd,OAAK3H,GAELiZ,EAAGjZ,MAAQA,EACJ2H,MAFIsR,EAAGjZ,OAQlB0gB,MAAO,WACH,OAAO/Y,KAAKgZ,GAAG,IAGnBC,KAAM,WACF,OAAOjZ,KAAKgZ,IAAI,IAGpBA,GAAI,SAAUhH,GACV,OAAO9B,EAAWlQ,KAAKgS,GAAS,EAAIA,EAAQhS,KAAK4F,EAAQ/C,GAAKmP,KAGlEkH,KAAM,SAAUjI,GACZ,IACI1Z,EADA4c,EAAW,GAQf,OANAnU,KAAK2Q,MAAK,WACN,IACIwI,EADKnZ,KACGoR,iBAAiBH,GAC7B,IAAK1Z,EAAI,EAAGA,EAAI4hB,EAAGvT,EAAQ/C,GAAItL,IAC3B4c,EAAS/b,KAAK+gB,EAAG5hB,OAElB2Y,EAAWiE,IAGtBA,SAAU,SAAUlD,GAChB,IACIK,EACA6H,EACA5hB,EAHA4c,EAAW,GAiBf,OAZAnU,KAAK2Q,MAAK,WAEN,IADAwI,EAAKnZ,KAAKmU,SACL5c,EAAI,EAAGA,EAAI4hB,EAAGvT,EAAQ/C,GAAItL,IAC3B+Z,EAAK6H,EAAG5hB,GACJ0Z,GACKK,EAAGP,SAAWO,EAAGP,QAAQE,IAAcF,EAAQO,EAAIL,KACpDkD,EAAS/b,KAAKkZ,GAGlB6C,EAAS/b,KAAKkZ,MAGnBpB,EAAWiE,IAGtB1V,OAAQ,SAAUwS,GACd,IACIxS,EADAmX,EAAU,GAOd,OALA5V,KAAK2Q,MAAK,WACNlS,EAASuB,KAAKmR,WACVF,IAAWf,EAAWzR,GAAQ2a,GAAGnI,IACjC2E,EAAQxd,KAAKqG,MAEdyR,EAAW0F,IAGtBwD,GAAI,SAAUnI,GAEV,IAAIK,EACA/Z,EACJ,IAAKA,EAAI,EAAGA,EAAIyI,KAAK4F,EAAQ/C,GAAItL,IAAK,CAElC,GADA+Z,EAAKtR,KAAKzI,GACO,aAAb0Z,EACA,OAAO4C,EAAiBvC,GAC5B,GAAiB,YAAbL,EACA,OAAQ4C,EAAiBvC,GAC7B,GAAKA,EAAGP,SAAWO,EAAGP,QAAQE,IAAcF,EAAQO,EAAIL,GACpD,OAAO,EAEf,OAAO,GAGXuF,SAAU,WACN,IACI6C,EACA9hB,EAFAif,EAAW,GAUf,OANAxW,KAAK2Q,MAAK,WAEN,IADA0I,EAASrZ,KAAKoW,WACT7e,EAAI,EAAGA,EAAI8hB,EAAOzT,EAAQ/C,GAAItL,IAC/Bif,EAASpe,KAAKihB,EAAO9hB,OAGtB2Y,EAAWsG,IAGtB7F,KAAM,SAAUC,GACZ,OAAOD,EAAK3Q,KAAM4Q,IAMtBuB,QAAS,SAAUC,EAAOC,EAAUC,EAAQC,GACxC,OAAOvS,KAAK2Q,MAAK,WAAcwB,EAAQnS,KAAMoS,EAAOC,EAAUC,EAAQC,OAG1EkB,KAAM,SAAU6F,EAAQC,GACpB,OAAOvZ,KAAK2Q,MAAK,YA1hBzB,SAAcW,EAAIgI,EAAQE,GAKtB,IAJA,IAAI1H,EACA0B,EACAhD,EACAjZ,EAAI,EACDA,EAAIoX,EAAY/I,EAAQ/C,GAAItL,IAE/B,IADAua,EAAUnD,EAAYpX,IACV+Z,KAAOA,EAAI,CACnB,GAAIQ,EAAQI,EAAEtM,EAAQ/C,GAAK,EAAG,CAM1B,IALA2Q,EAAO1B,EAAQI,EAAE,IACZuB,MAAO,EACZrL,EAAcoB,KAAdpB,CAAoBoL,EAAKH,OACzBvB,EAAQI,EAAEnV,OAAO,EAAG,GAEhByc,EACA,IAAKhJ,KAAOgD,EAAKpB,MACbI,EAAkBlB,EAAId,EAAKgD,EAAKpB,MAAM5B,IAE1C8I,EACAxH,EAAQI,EAAI,GAEZL,EAAsBC,GAAS,GAEvC,OAmgB2B2B,CAAKzT,KAAMsZ,EAAQC,QAI1D5J,EAAOO,EAAY,CACfP,OAAQA,EACRS,QAASA,EACTG,cAAeA,EACfJ,cAAeA,EACfQ,KAAMA,IAGHT,EAj4BM,GAm4BbuJ,EAAa,WACb,IAAIC,EAAW,GAaf,OAAO,SAAUjP,EAAQkP,GACrB,IAAIC,EAAShe,UAAUgK,EAAQ/C,GAC/B,GAAI+W,EAAS,EAET,OAAOF,EAGP,GAAIC,EAEAlP,EAAM,sBAA4BkP,EAClCD,EAASthB,KAAKqS,OAEb,CACD,IAAIuH,EAAQ5J,EAAckD,IAAIb,EAAQiP,GACtC,GAAI1H,GAAS,EAAG,CACZ,KAAI4H,EAAS,GAOT,OAAOF,EAAS1H,GAAT,6BALAvH,EAAM,sBACbiP,EAAS3c,OAAOiV,EAAO,MAhC9B,GA2Cb6H,EAAU,WACV,IAAIC,EACAC,EACAC,EACAC,EAAqB,GACrBC,EAAmB,WACnB,IAAIxO,EAAOtD,EAAcsD,KACrByO,EAAwB,CACxBxU,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,GAOAyU,EAAsB,EAAC,EAAMzU,GAC7B0U,EAAuB,EAAC,EAAO1U,GAC/B2U,EAAmB,CAAC,KAAM,CAAC3U,EAASA,IAOpC4U,EAA6B,CAC7BvD,UAAW,CAAC,gBAba,CAACrR,EAASA,IAcnC6U,OAAQ,CAAC,OANa,yCAOtBC,gBAAiBL,EACjBM,WAAYN,EACZO,aAAcP,EACdQ,gBAAiBP,EACjBQ,WAAY,CAAC,KAjBc,CAAClV,EAASA,IAkBrCmV,mBAAoB,CAAC,GAnBCnV,GAoBtBoV,aAfuB,CAAC,CAAC,OAAQ,CAACpV,EAASA,EAASA,IAgBpDqV,yBAA0B,CACtBC,qBAAsBZ,EACtBa,WAAYd,GAEhBe,iBAAkB,CACdzY,EAAG,CAAC,SAlBwB,2DAmB5BC,EAAG,CAAC,SAnBwB,4DAqBhCyY,WAAY,CACRC,WAAY,CAAC,OArBmB,6BAsBhCC,SAAU,CAAC,QArBmB,mCAsB9BC,cAAe,CAAC,IAhCE5V,GAiClB6V,cAAepB,EACfqB,eAAgBpB,EAChBqB,aAActB,EACduB,WAAYtB,GAEhBuB,SAAU,CACNC,SAAUxB,EACVyB,UAAWzB,EACX0B,eAnCqB,CAAC,CAAC,QAAS,SAAU,CAACpW,EAASA,EAASA,KAqCjEqW,UAAW,CACPC,cAAe3B,EACf4B,0BAA2B5B,EAC3B6B,YAAa7B,EACb8B,cAAe9B,EACf+B,SAAU/B,EACVgC,aAAchC,EACdiC,kBAAmBjC,EACnBkC,wBAAyBlC,EACzBmC,mBAAoBnC,EACpBoC,qBAAsBpC,EACtBqC,kBAAmBrC,EACnBsC,UAAWtC,IAGfjd,EAAU,SAAUwf,GAiBpB,OAhBgB,SAAZC,EAAsBhgB,GACtB,IAAI0T,EACA9V,EACAqiB,EACJ,IAAKvM,KAAO1T,EACHA,EAAI8I,EAAQS,KAAKmK,KAEtB9V,EAAMoC,EAAI0T,IACVuM,EAAUrR,EAAKhR,KACAiL,EACX7I,EAAI0T,GAAO9V,EAAImiB,EAAW,EAAI,GACzBE,GAAWpX,IAChB7I,EAAI0T,GAAOsM,EAAUpiB,KAE7B,OAAOoC,EAEJggB,CAAUrO,EAAUkB,QAAO,EAAM,GAAI4K,KAGhD,MAAO,CACHyC,UAAW3f,IAEX4f,UAAW5f,GAAQ,GAUnB6f,UAAW,SAAUpgB,EAAK+f,EAAUM,EAAaC,GAC7C,IAAIC,EAAmB,GACnBC,EAA2B,GAC3BC,EAAa9O,EAAUkB,QAAO,EAAM,GAAI7S,GACxCsT,EAAU3B,EAAU2B,QACpBoN,EAAa/O,EAAU8B,cA4G3B,OA3GuB,SAAnBkN,EAA6BC,EAAMb,EAAUc,EAAUN,EAAkBC,EAA0BM,GACnG,IAAK,IAAIjW,KAAQkV,EACb,GAAIA,EAASjX,EAAQS,KAAKsB,IAAS+V,EAAK9X,EAAQS,KAAKsB,GAAO,CACxD,IAaIkW,EACAC,EACAC,EACAC,EACAC,EACA1mB,EACA+N,EACA4Y,EApBAC,GAAU,EACVC,GAAS,EACTC,EAAgBxB,EAASlV,GACzB2W,EAAoB5S,EAAK2S,GACzBE,EAAoBD,GAAqB3Y,EACzC6Y,EAAiBpW,EAAcoD,IAAI6S,GAAmCA,EAAlB,CAACA,GACrDI,EAAgBd,EAAShW,GACzB+W,EAAYhB,EAAK/V,GACjBgX,EAAgBjT,EAAKgT,GACrBE,EAAahB,EAAeA,EAAe,IAAM,GACjDiB,EAAQ,eAAkBD,EAAajX,EAAO,yBAC9CmX,EAAqB,GACrBC,EAAyB,GAa7B,GAHAN,EAAgBA,IAAkB1mB,EAAY,GAAK0mB,EAG/CF,GAAqBI,GAAiBhZ,EACtC0X,EAAiB1V,GAAQ,GACzB2V,EAAyB3V,GAAQ,GACjC8V,EAAiBiB,EAAWL,EAAeI,EAAepB,EAAiB1V,GAAO2V,EAAyB3V,GAAOiX,EAAajX,GAC/H8G,EAAUkC,KAAK,CAAC+M,EAAML,EAAkBC,IAA2B,SAAUtL,EAAO3Z,GAC5EmlB,EAAWnlB,EAAMsP,YACVtP,EAAMsP,WAIpB,IAAK4W,EAAmB,CACzB,IAAKhnB,EAAI,EAAGA,EAAIinB,EAAc5Y,EAAQ/C,GAAItL,IAKtC,GAJA0mB,EAAWO,EAAcjnB,GAGzBwmB,GAFAO,EAAoB5S,EAAKuS,KAEgBtY,IAAyD,IAA9CyK,EAAQ6N,EAAU9D,GAOlE,IALA2E,EAAmB1mB,KAAKuN,GAGxBkY,EAA8BI,EAASnW,MApJ1C,KAqJGiX,EAAyBA,EAAuBziB,OAAOuhB,GAClDvY,EAAI,EAAGA,EAAIuY,EAA4BjY,EAAQ/C,GAAIyC,IAAK,CAIzD,IADA0Y,GADAF,EAA2CD,EAA4BvY,GAAGwC,MAvJpE,MAwJqD,GACtDoW,EAAI,EAAGA,EAAIJ,EAAyClY,EAAQ/C,GAAIqb,IAEjE,GAAIQ,IAAcZ,EAAyCI,GAAI,CAC3DC,GAAU,EACV,MAGR,GAAIA,EACA,WAMR,GAFAW,EAAmB1mB,KAAK6lB,GAEpBU,IAAkBV,EAAU,CAC5BE,GAAU,EACV,MAKRA,IACAC,EAASM,IAAcD,KAGnBpB,EAAiB1V,GAAQ+W,IAEzBX,EAAoB3N,EAAQqO,EAAeX,GAA4C,EAAIM,KAC3Fd,EAAyB3V,GAAQoW,EAAoBC,EAAkBU,IAEtEvB,GACL6B,QAAQC,KAAKJ,EAAQ,iCAAmCF,EAAcnkB,cAAgB,yBAA4BkkB,EAArGG,+BACkBC,EAAmBlf,KAAK,MAAMpF,cAAgB,OACxEukB,EAAuBzmB,QAAU,EAAI,4BAA8BymB,EAAuBnf,KAAK,MAAMkI,MA1L5F,KA0LuIlI,KAAK,MAAQ,MAAQ,YAEvK8d,EAAK/V,KAK5B8V,CAAiBF,EAAYV,EAAUO,GAAW,GAAIC,EAAkBC,IAUnEE,EAAWD,IAAeJ,GAC3B6B,QAAQC,KAAK,6DAA+DzZ,EAAOhF,KAAKC,UAAU8c,EAAY,KAAM,IAEjH,CACH2B,SAAU7B,EACV8B,UAAW7B,KA5NJ,GAqOvB,SAAS8B,IACArF,IACDA,EAAkB,IAAIsF,EAAyBnF,EAAgB8C,YAC9DhD,IACDA,EAAyB,IAAIsF,EAAgCvF,IAQrE,SAASsF,EAAyBE,GAC9B,IAAIC,EAAQxf,KAIRyf,EAAchR,EAAU,QACxBiR,EAAwBjR,EAAU,uDAClCkR,EAAyBD,EAAsB,GAC/CE,EAAsBnR,EAAUiR,EAAsBvL,SAAS,OAAO6E,GAAG,IAE7EyG,EAAYpK,OAAOqK,GACnBA,EAAsB7H,OAAOE,OAE7B,IAAI8H,EAAsBC,EAAwBH,GAC9CI,EAA4B,CAC5Brd,EAA6B,IAA1Bmd,EAAoBnd,EACvBC,EAA6B,IAA1Bkd,EAAoBld,GAEvBqd,EAAQ,WACR,IAOIhiB,EAPAiiB,EAAKza,EAAO0a,UAAUC,UAGtBH,EAAOC,EAAE,QAAa,SACtBG,EAAUH,EAAE,QAAa,YACzBI,EAAOJ,EAAE,QAAa,SACtBK,EAAKL,EAAE,QAAa,OAEpBM,EAAenlB,SAenB,OAZI4kB,EAAO,EACPhiB,EAASuiB,EAAaN,EAAE,UAAeD,EAAO,EAAGC,EAAE,QAAa,IAAKD,IAAQ,IAGxEI,EAAU,EACfpiB,EAASuiB,EAAaN,EAAE,UAAeK,EAAK,EAAGL,EAAE,QAAa,IAAKK,IAAM,IAGpED,EAAO,IACZriB,EAASuiB,EAAaN,EAAE,UAAeI,EAAO,EAAGJ,EAAE,QAAa,IAAKI,IAAQ,KAG1EriB,EAxBC,GA2KZ,SAAS8hB,EAAwBU,GAC7B,MAAO,CACH9d,EAAG8d,EAAe5a,EAAQG,IAAMya,EAAe5a,EAAQI,IACvDrD,EAAG6d,EAAe5a,EAAQM,IAAMsa,EAAe5a,EAAQO,KAnJ/DsI,EAAUkB,OAAO6P,EAAO,CACpBD,eAAgBA,EAChBS,KAAMA,EACNS,gBAAgB,EAChBC,uBAAwBtY,EAAcgB,KACtCyW,oBAAqBA,EACrBE,0BAA2BA,EAC3BY,uBAAyB,WACrB,IAAI3iB,GAAS,EACb0hB,EAAsBtI,SAAS,2CAC/B,IACIpZ,EAA2D,SAAjD0hB,EAAsB5M,IAAI,qBAAkCkN,EAAO,IAAMA,IAAiH,SAAvGxa,EAAOoR,iBAAiB+I,EAAwB,uBAAuB7I,iBAAiB,WACvL,MAAO8J,IAOT,OAAO5iB,EAZc,GAczB6iB,0BAA2B,CAAEne,EAAG,GAAIC,EAAG,IACvCme,QAASva,EAAQgB,kBAAkB,QAAS,OAAQ,UAAY,KAChEwZ,oBAAsB,WAGlBrB,EAAsB5M,IArEZ,WACF,UAqER,IAAIkO,EACGrB,EAAuB/Z,EAAQQ,IADlC4a,EAEGrB,EAAuB/Z,EAAQK,IAEtCyZ,EAAsB5M,IA1EZ,WA0E6B,WACvC,IAAImO,EACGtB,EAAuB/Z,EAAQQ,IADlC6a,EAEGtB,EAAuB/Z,EAAQK,IAEtC,OAAQ+a,EAAeC,IAAmB,GAAMD,EAAeC,IAAmB,EAbhE,GAetBC,kBAAoB,WAChBxB,EAAsB5M,IAAI,CAAE,aAjFpB,SAiF6C,aAhF7C,SAgFsE,UAAa,QAAS/H,WAAW,GAC/G,IAAIoW,EAAuBzB,EAAsBpH,SAC7C8I,EAA4BxB,EAAoBtH,SAEpDoH,EAAsB3U,YAAY,KAClC,IAAIsW,EAAuCzB,EAAoBtH,SAC/D,MAAO,CAKH/gB,EAAG4pB,EAAqBxI,OAASyI,EAA0BzI,KAK3D5f,EAAGqoB,EAA0BzI,OAAS0I,EAAqC1I,MAjB/D,GAoBpB2I,mBAAoB/a,EAAQS,aAAa,aACzCua,oBAAqBhb,EAAQS,aAAa,cAC1Cwa,qBAAuB,WACnB,IAAIC,GAAkB,EACtB,IACIjc,EAAOgP,iBAAiB,OAAQ,KAAM9c,OAAO+F,eAAe,GAAI,UAAW,CACvE1D,IAAK,WACD0nB,GAAkB,MAG5B,MAAOzoB,IACT,OAAOyoB,EATY,GAWvBC,wBAAyBtZ,EAAciB,KACvCsY,0BAA2BvZ,EAAcgB,OAG7CsW,EAAsBtH,WAAWxS,EAAQ9M,GAAG2c,SAG5C,WACI,IAAIsK,EAA0Brd,IAAKqd,EAA0Bpd,EAA7D,CAGA,IAAI4J,EAAMZ,EAAKY,IACXqV,EAAcxZ,EAAcc,KAC5B2Y,EAAezZ,EAAce,KAC7B2Y,EAAYC,IAwDhBtT,EAAUjJ,GAAQ4O,GAAG,UAvDN,WACX,GAAIqF,IAAYnhB,OAAS,EAAG,CACxB,IAAI0pB,EAAO5Z,EAAcc,KACrB+Y,EAAO7Z,EAAce,KACrB+Y,EAASF,EAAOJ,EAChBO,EAASF,EAAOJ,EAEpB,GAAe,IAAXK,GAA2B,IAAXC,EAChB,OAEJ,IAaIC,EAbAC,EAAc1W,EAAKpQ,MAAMymB,GAAQJ,EAAc,MAC/CU,EAAc3W,EAAKpQ,MAAM0mB,GAAQJ,EAAe,MAChDU,EAAYhW,EAAI2V,GAChBM,EAAYjW,EAAI4V,GAChBM,EAAiBlW,EAAI8V,GACrBK,EAAiBnW,EAAI+V,GACrBK,EAASZ,IAETa,EAAgBL,EAAY,GAAKC,EAAY,EAC7CK,GAwBZ,SAAmCC,EAAQC,GACvC,IAAIC,EAAYzW,EAAIuW,GAChBG,EAAY1W,EAAIwW,GACpB,QAASC,IAAcC,GAAaD,EAAY,IAAMC,GAAaD,EAAY,IAAMC,GA3B/DC,CAA0BT,EAAgBC,GAExDS,EAASP,GAAiBC,GADbF,IAAWb,GAAaA,EAAY,EAEjDsB,EAAmB5D,EAAMK,oBAGzBsD,IACA1D,EAAYpK,OAAOqK,GACnB0C,EAAmB5C,EAAMK,oBAAsBC,EAAwBJ,EAAsB,IAC7FA,EAAsBjK,SAClB2N,EAAiB1gB,IAAM0f,EAAiB1f,GAAK0gB,EAAiBzgB,IAAMyf,EAAiBzf,GACrF8L,EAAUkC,KAAK8I,KAAa,WACpBA,EAAUzZ,OACVyZ,EAAUzZ,MAAMqjB,OAAO,YAKvCzB,EAAcI,EACdH,EAAeI,EACfH,EAAYa,MAUpB,SAASZ,IACL,IAAIuB,EAAO9d,EAAO+d,OAAOC,YAAc,EACnCC,EAAOje,EAAO+d,OAAOG,aAAe,EACxC,OAAOle,EAAOme,kBAAqBL,EAAOG,GA5DlD,GA8EJ,SAASnE,EAAgCsE,GACrC,IAYIC,EAXAC,EAAWrV,EAAU2B,QACrB2T,EAAU3b,EAAcuB,IAGxBqa,EAAape,EAAQ/C,EACrBohB,EAAoB,GACpBC,EAAiC,GACjCC,GAAgB,EAEhBC,EADuB,GAEvBC,EAAeN,IAXP/jB,KA8DN2X,IAAM,SAAUgC,IAC6B,IAA3CmK,EAASnK,EAAUsK,KACnBA,EAAkB7rB,KAAKuhB,GACvBuK,EAA+B9rB,KAAK2rB,KAChCE,EAAkBD,GAAc,IAAMG,IACtCA,GAAgB,EAChBP,EAAQnD,eAAiB0D,EAlD1B,SAAPG,IACA,GAAIL,EAAkBD,GAAc,GAAKG,EAAe,CACpDN,EAAUzb,EAAckB,KAAdlB,EAAoB,WAC1Bkc,OAEJ,IAEIC,EACA5K,EACA6K,EACAC,EACAC,EACA/a,EAPAgb,EAAUZ,IACVa,EAAYD,EAAUN,EAQ1B,GAAIO,EAAYR,EAAe,CAC3BC,EAAeM,EAAWC,EAAYR,EACtCG,EAzBe,GA0Bf,IAAK,IAAIhtB,EAAI,EAAGA,EAAI0sB,EAAkBD,GAAazsB,KAC/CoiB,EAAWsK,EAAkB1sB,MACZQ,IAEb0sB,GADAD,EAAkB7K,EAAS5J,WACgB,WAC3C2U,EAA6B/Y,EAAKxR,IAAI,EAAGqqB,EAAe,oBACxD7a,EAAMoa,MAE6B,IAA9BU,GAAoE,OAA9BA,IAAwC9a,EAAMua,EAA+B3sB,GAAMmtB,IAC1H/K,EAAS0J,OAAO,QAChBa,EAA+B3sB,GAAK,IAAIqS,KAAKD,GAAO+a,IAGxDH,EAAiB5Y,EAAKxR,IAAI,EAAGwR,EAAKzR,IAAIqqB,EAAgBG,KAG9DN,EAAgBG,QAGpBH,EA7CmB,GA4DfE,MArEAtkB,KA8ENyV,OAAS,SAAUkE,GACrB,IAAI3H,EAAQ8R,EAASnK,EAAUsK,GAC3BjS,GAAS,IAETkS,EAA+BnnB,OAAOiV,EAAO,GAC7CiS,EAAkBlnB,OAAOiV,EAAO,GAGM,IAAlCiS,EAAkBD,IAAqBG,IACvCA,GAAgB,EAChBP,EAAQnD,eAAiB0D,EACrBN,IAAY9rB,IACZqQ,EAAcoB,KAAdpB,CAAoByb,GACpBA,GAAW,MAiB/B,SAASgB,EAA0BC,EAAqB/U,EAASgV,EAAYnB,EAASnD,GAElF,IAAI/U,EAAOtD,EAAcsD,KACrB0E,EAAU3B,EAAU2B,QACpBO,EAAOlC,EAAUkC,KAGjB6O,EAAQ,IAAI1F,EACZkL,EAAkBvW,EAAU7I,EAAQhB,GAGxC,GAAKqgB,GAAcH,GAAnB,CAIA,GAAIrL,EAAUqL,GAAsB,CAChC,IAAII,EAAOzL,EAAUqL,GAErB,OADAI,EAAKnV,QAAQA,GACNmV,EAIX,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,GAgHAC,GACAC,GACAC,GAOAC,GAEAC,GAMAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAQAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GArOAC,GAAqB,GACrBC,GAAwB,GACxBC,GAAsB,GACtBC,GAAgB,GAChBC,GAA0B,GAsC1BC,GAAyB,mDAMzBC,GAAwBC,UACxBC,GAA+BF,GAAwB,WACvDG,GAAgCH,GAAwB,YACxDI,GAA0CJ,kCAC1CK,GAAwCL,gCACxCM,GAA2BN,GAAwB,cACnDO,GAAoBP,GAAwB,OAC5CQ,GAA+BR,GAAwB,mBACvDS,GAA0BT,GAAwB,aAClDU,GAAyBV,GAAwB,YAEjDW,IADAD,GAAyBV,GAAwB,aACE,KACnDY,GAA0BF,GAAyB,KACnDG,GAA4BZ,cAC5Ba,GAAiCD,GAA4B,SAG7DE,GAA8CC,0CAC9CC,GAA6CD,yCAQ7CE,GAAwBjB,kBAGxBkB,GAA8BC,yBAE9BC,GAA+BC,0BAC/BC,GAA8BC,wBAC9BC,GAAgCD,2BAEhCE,GAAkCC,6BAClCC,GAAmCF,GAAkC,QACrEG,GAAmCH,GAvDb,cAwDtBI,GAAmCJ,GAvDf,YA0DpBK,GAAqB9B,cACrB+B,GAAsB/B,gBACtBgC,GAA4B,CAC5BlB,GACAE,GACAE,GACAE,GACAE,GACAE,GACAC,GACAE,GACAC,GACAC,GACAC,IAAoBpvB,KA1ER,KA6EZuvB,GAAuB,GAGvBC,GAA2B,CAACxpB,EAAQE,IAQpCupB,GAAc,GAKdC,GAAwB,GAIxBC,GAAoB,GAwEpBC,GAAmB,GAQnBC,GAAiC,CAAC,OAAQ,OAAQ,QAClDC,GAA6B,CAAC9pB,EAAQrO,EAAGqO,EAAQC,EAAGD,EAAQ9M,EAAG,QAAQwD,OAAO8yB,IAG9EO,GAAiB,GAonIrB,OAj9BAnQ,EAAMoQ,MAAQ,WACV7I,IAAY,GAgBhBvH,EAAM6D,OAAS,SAAUwM,GAIrB,IAAIC,EACAC,EAEAC,EACAC,EACAC,EARJ,IAAIjK,EA+CJ,OA1Ceva,EAAKmkB,IAAUlqB,EAt3GnB,SA43GHkqB,GACAC,EAliFZ,WACI,IAAI/I,KAAa6E,GAAjB,CAGA,IAAI5a,EACAmf,EACAC,EACAC,EAAe,GACfC,EAAS,CACT,CACIC,MAAO7I,GACP8I,OAAQd,GAA2BpzB,OAAO,aAE9C,CACIi0B,MAAOrK,EAAcuB,GAAiB1vB,EACtCy4B,OAAQf,KAsBhB,OAlBA9e,EAAK2f,GAAQ,SAAUte,EAAOye,IAC1Bzf,EAAOyf,EAAMF,QAET5f,EAAK8f,EAAMD,QAAQ,SAAUxe,EAAOgG,GAChCmY,EAA0B,MAAnBnY,EAAKnR,OAAO,GAAamK,EAAKoI,GAAGpB,GAAQhH,EAAKgH,KAAKA,GAC1DoY,EAAQZ,GAAiBxX,GAErB0Y,GAAWP,EAAMC,IACjBC,EAAaj4B,KAAK4f,GAGtBwX,GAAiBxX,GAAQmY,QAKrCQ,GAA8BN,GAEvBA,EAAazqB,EAAQ/C,GAAK,GA6/EV+tB,GACfb,EA5kFZ,WACI,GAAIhJ,GACA,OAAO,EAEX,IAII8J,EACAC,EACAC,EACAC,EAPAC,EAAwBC,KACxBC,EAAsBjL,GAAesD,KAAoB0B,GAA6BzD,GAAe/sB,MAAMpC,OAAS,EACpH84B,GAAUxF,IAA+BpC,KAAoBtD,EAC7DpT,EAAM,GA2BV,OArBIse,IACAP,EAAQ9I,GAAgBjV,IAl0BhB,SAm0BRA,EAAG,MAAcgU,GA10BT,QAED,OAy0BPhU,EAAG,MAl0BI,OAm0BPiV,GAAgBjV,IAAIA,IAExBke,EAA2B,CACvBnsB,EAAGosB,EAAsBrrB,EAAQQ,IAAM+qB,EACvCE,EAAGJ,EAAsBrrB,EAAQK,IAAMkrB,GAEvCC,IACAte,EAAG,MAAc+d,EACjB/d,EAAG,MAx0Bc,OAy0BjBiV,GAAgBjV,IAAIA,IAGxBge,EAAeQ,KACfP,EAAUL,GAAWM,EAA0BxG,IAE/CA,GAA+CwG,EAExCD,GAAWD,EA0iFKS,IACfvB,EAAeF,GAAgBC,IAE3B1M,GAAO,CACHmO,oBAAqBzB,EACrB0B,gBAAiBzL,EAAejuB,EAAYmvB,MAl4GjD,SAs4GE2I,EACDjE,IACAqE,EAAUvE,GAA8BF,GAAsBkG,eAC9DxB,EAAavE,GAAiCF,GAAyBiG,gBAGvEzB,EAAUzQ,EAAM6D,OA74GjB,QAg5GY,SAAVwM,GACLxM,GAAO,CACHsO,kBAAkB,EAClBH,qBAAqB,KAK7B3B,EAAQ9I,IAAa8I,EACrB9I,IAAY,EACPvH,EAAM6D,OAz5GJ,UAy5GwBwM,GAC3BxM,GAAO,CAAEuO,OAAQ/B,KAGzBgC,KAEO7B,GAAgBC,GAAWC,GAStC1Q,EAAMzP,QAAU,SAAU+hB,EAAYz5B,GAClC,IACI05B,EADAC,EAAS,GAIb,GAAIvjB,EAAU8B,cAAcuhB,KAAgBrjB,EAAU0B,cAAc2hB,GAAa,CAC7E,GAAIpmB,EAAKomB,IAAensB,EASpB,OAAOshB,GARP,KAAIrrB,UAAUtD,OAAS,GAKnB,OAAO25B,GAAiBhL,GAAiB6K,GAJzCI,GAAiBF,EAAQF,EAAYz5B,GACrC05B,EAAaI,GAAWH,QAShCD,EAAaI,GAAWL,GAGvBrjB,EAAU8B,cAAcwhB,IACzB1O,GAAO,CAAEoO,gBAAiBM,KAOlCvS,EAAM4S,QAAU,WACZ,IAAInM,EAAJ,CAcA,IAAK,IAAIoM,KAVT5R,EAAehL,OAAO+J,GAGtB8S,KAGAC,GAAoB3K,IACpB2K,GAAoB5K,IAGA0H,GAChB7P,EAAMgT,UAAUH,GAGpB,KAAO1C,GAAe/pB,EAAQ/C,GAAK,GAC/B8sB,GAAe9wB,KAAf8wB,GAGJ8C,IAA0B,GAGtBxK,IACAxS,GAAOwS,IACPD,IACAvS,GAAOuS,IACPzB,GACA9Q,GAAOkS,IAGX+K,IAAmB,GACnBC,IAAwB,GACxBC,IAAkB,GAGlB,IAAK,IAAIr7B,EAAI,EAAGA,EAAIg4B,GAAkB3pB,EAAQ/C,GAAItL,IAC9CkX,EAAU8gB,GAAkBh4B,IAAIod,IAv4GX,OAu4GuCke,IAChEtD,GAAoBx3B,EAEpBkuB,GAAa,EACbc,IAAY,EAGZtN,EAAUqL,EAAqB,GAC/BgO,GAAiB,iBA6ErBtT,EAAMuT,OAAS,SAAUC,EAAa3gB,EAAUC,EAAQC,GACpD,GAAyB,IAArB3W,UAAUtD,QAAgB06B,IAAgBj7B,EAAW,CACrD,IAAIk7B,EAAQrG,GACRsG,EAAQrG,GACRsG,EAAkBpI,IAAsBjE,IAAUzB,EAAmB9tB,EACrE67B,EAAkBrI,IAAsBjE,IAAUzB,EAAmBtsB,EACrEs6B,EAAUJ,EAAMK,eAChBC,EAAeN,EAAMO,oBACrBC,EAAaR,EAAMS,WAMvB,OALAH,EAAeJ,EAAkB,EAAII,EAAeA,EACpDF,EAAUF,EAAkBM,EAAaJ,EAAUA,EAEnDI,GAAcL,GAAmB,EAAI,EAE9B,CACHxa,SAAU,CACNlW,EALR2wB,GAAWD,GAAmB,EAAI,EAM1BzwB,EAAGuwB,EAAMI,gBAEbzvB,MAAO,CACHnB,EAAG6wB,EACH5wB,EAAGuwB,EAAMM,qBAEbr5B,IAAK,CACDuI,EAAG+wB,EACH9wB,EAAGuwB,EAAMQ,YAEbC,aAAc,CACVjxB,EAAGuwB,EAAMW,cACTjxB,EAAGuwB,EAAMU,eAEbC,aAAc,CACVnxB,EAAGuwB,EAAMa,cACTnxB,EAAGuwB,EAAMY,eAEbC,kBAAmB,CACfrxB,EAAGuwB,EAAMe,mBACTrxB,EAAGuwB,EAAMc,oBAEbC,YAAa,CACTvxB,EAAGuwB,EAAMiB,aACTvxB,EAAGuwB,EAAMgB,cAEbC,oBAAqB,CACjBzxB,EAAGuwB,EAAMmB,qBACTzxB,EAAGuwB,EAAMkB,sBAEbC,MAAOvN,GACPwN,gBAAiBvJ,IAIzBvL,EAAM6D,OAtnHK,QAwnHX,IAMI9rB,EAGAg9B,EACAC,EACAC,EASAC,EACAC,EACAC,EACAC,EACAC,EAxBAna,EAAeoQ,GACfgK,EAAwB,CAtnHpB,IAXG,OAioHmC,KAC1CC,EAAwB,CAtnHpB,IAfE,MAqoHmC,KACzCC,EAAuB,CAAC,KAAM,KAAM,KAAM,MAC1CC,EAAmBxpB,EAAK2G,IAAa1M,EACrCwvB,EAAmBD,EAAmB7iB,EAASE,SAAWA,EAE1D6iB,EAAc,GACdziB,EAAgB,GAIhB0iB,EAAS,MACTC,EAAW,QACXC,EAAY,SACZC,EAAa,UACbC,EAAY,SACZC,EAAW,QACXC,EAAc,WACdC,EAAYhwB,EAAQ/C,EAMpBgzB,EAA+B,CA9oH3B,IACA,IA6oH0C,KAAM,MACpDC,GAAgC,CAACR,EAAUD,EAAQE,EAAWC,GAC9DO,GAAiC,CAACN,EAAWC,EAAUC,GACvDK,GAA0BhD,EAAYptB,EAAQS,KAAK,MACnD4vB,GAAkBD,GAA0BhD,EAAY1hB,GAAK0hB,EAC7DkD,MAA0BD,cAA2BxnB,GAAa7C,IAASqqB,cAA2BrqB,EACtGuqB,IAA+BD,IAAkCjR,GAAcgR,IAC/EG,GAAuB,WACnB7B,GACA8B,IAA6B,GAC7B7B,GACA6B,IAA6B,IAEjCC,GAAwB5qB,EAAKypB,IAAqBxvB,EAAU5N,EAAY,WACxEq+B,KACAjB,KAEJ,SAASoB,GAAyBC,EAAWC,GACzC,IAAKl/B,EAAI,EAAGA,EAAIk/B,EAAcb,GAAYr+B,IACtC,GAAIi/B,IAAcC,EAAcl/B,GAC5B,OAAO,EAEf,OAAO,EAEX,SAASm/B,GAAaC,EAAK3D,GACvB,IAAI4D,EAAkBD,EAAM5B,EAAwBC,EAGpD,GAFAhC,EAActnB,EAAKsnB,IAAgBrtB,GAAW+F,EAAKsnB,IAAgBrtB,EAAU,CAACqtB,EAAaA,GAAeA,EAEtG5qB,EAAcoD,IAAIwnB,GAClB,OAAO2D,EAAM3D,EAAY,GAAKA,EAAY,GACzC,GAAItnB,EAAKsnB,IAAgBrtB,EAG1B,IAAKpO,EAAI,EAAGA,EAAIq/B,EAAgBhB,GAAYr+B,IACxC,GAAIq/B,EAAgBr/B,KAAMy7B,EACtB,OAAOA,EAAY4D,EAAgBr/B,IAGnD,SAASs/B,GAAeF,EAAKG,GACzB,IACIC,EACAC,EAKAxf,EAKAyf,EAZAC,EAAWxrB,EAAKorB,IAAcnxB,EAG9BwxB,EAAaR,EAAM/J,GAAwBC,GAC3CuK,EAAaD,EAAW7D,eACxB+D,EAAYF,EAAWzD,WAGvB4D,EAAWxQ,IAAU6P,EACrBY,EAAqBD,GAAYjS,EAAmBtsB,IAAM4hB,EAE1D6c,EAAWC,KA2Bf,GAzBIP,GAEIJ,EAAUlB,GAAa,IACvBqB,EAAmBH,EAAUY,OAAO,EAAG,GACnCtnB,EAAQ6mB,EAAkBhC,IAAyB,IACnD8B,EAAWE,IAKnBH,GADAA,EAAYC,EAAWD,EAAUY,OAAO,GAAKZ,GACxB,QACR,OAAQ,GADT,QAEC,KAAM,GAFP,QAGC,QAASS,EAAqB,IAptHvC,IAIS,QA6sHD,QAIC,MAAOA,EAAqB,IArtHrC,IAIS,QA6sHD,QAKC,MAttHT,IAitHQ,QAMC,KAvBN,MAuBoBF,GAAaC,GAAYjS,EAAmBtsB,GAAK,EAAI,GAAK,KANzE,QAOC,MAxBN,MAwBoB+zB,GAAcjoB,GAP7B,QAQC,MAzBN,MAyBoBioB,GAAcuE,GACzC2F,EAASW,GAAoBl8B,MAAMq7B,GAAaa,GAAoBH,EAASV,IAAY,GAAMx1B,UAAYw1B,IAG3GE,EAASF,EAGTE,IAAWj/B,IAAc0D,MAAMu7B,IAAWtrB,EAAKsrB,IAAWrxB,EAAS,CACnE,IAAIiyB,EAAoBjd,GAAgB2c,EACpCO,EAAqBT,GAAcQ,GAAqBvS,EAAmBtsB,GAAK,EAAI,GACpF++B,EAASF,GAAqBvS,EAAmB9tB,EACjDoM,EAASi0B,GAAqBvS,EAAmBtsB,EAErD,OADA8+B,EAAqBC,EAAUT,EAAYQ,EAAsBA,EACzDd,GACJ,IAAK,KACDvf,EAAaqgB,EAAqBb,EAClC,MACJ,IAAK,KACDxf,EAAaqgB,EAAqBb,EAClC,MACJ,IAAK,KACDxf,EAAaqgB,EAAqBb,EAClC,MACJ,IAAK,KACDxf,EAAaqgB,EAAqBb,EAClC,MACJ,QACIxf,EAAawf,EAGrBxf,EAAasgB,EAAST,EAAY7f,EAAaA,EAC/CA,GAAc7T,GAAU,EAAI,EAC5B6T,EAAa8f,GAAYjS,EAAmBtsB,EAAI4S,EAAKzR,IAAI,EAAGyR,EAAKxR,IAAIk9B,EAAW7f,IAAe7L,EAAKxR,IAAI,EAAGwR,EAAKzR,IAAIm9B,EAAW7f,IAEnI,OAAOA,IAAe4f,EAAar/B,EAAYyf,EAEnD,SAASugB,GAAgB1/B,EAAO2/B,EAAmBC,EAAcxB,GAC7D,IAEIyB,EACAC,EAHAC,EAAgB,CAACH,EAAcA,GAC/BI,EAAY3sB,EAAKrT,GAKrB,GAAIggC,GAAaL,EACb3/B,EAAQ,CAACA,EAAOA,QAEf,GAAIggC,GAAa1yB,GAElB,IADAuyB,EAAiB7/B,EAAMu9B,IACF,GAAKsC,EAAiB,EACvC7/B,EAAQ+/B,OAIR,IAFuB,IAAnBF,IACA7/B,EAAM,GAAK4/B,GACV1gC,EAAI,EAAGA,EAAI2gC,EAAgB3gC,IAE5B,GADA4gC,EAAe9/B,EAAMd,GACjBmU,EAAKysB,IAAiBH,IAAsBzB,GAAyB4B,EAAc1B,GAAgB,CACnGp+B,EAAQ+/B,EACR,YAMZ//B,EADKggC,GAAa1yB,EACV,CAACtN,EAAK,GAAW4/B,EAAc5/B,EAAK,GAAW4/B,GAE/CG,EACZ,MAAO,CAAE11B,EAAGrK,EAAM,GAAIsK,EAAGtK,EAAM,IAEnC,SAASigC,GAAeC,GACpB,IACI/B,EACAgC,EAFAx6B,EAAS,GAGTy6B,EAAkB,CA1yHhB,MACE,QACC,SACF,QAwyHP,IAAKlhC,EAAI,EAAGA,EAAIghC,EAA8B3C,IACtCr+B,IAAMkhC,EAAgB7C,GAD4Br+B,IAGtDi/B,EAAY+B,EAA8BhhC,IAC1CihC,EAAgB9sB,EAAK8qB,KACA7wB,EACjB3H,EAAO5F,KAAKo+B,EAAYmB,GAAoB7C,EAAahiB,IApzHnD,UAozHyE2lB,EAAgBlhC,KAAO,GAEtGyG,EAAO5F,KAAKogC,GAAiB7yB,EAAU6wB,EAAY,GAE3D,OAAOx4B,EAGX,GAAIk4B,IAA2BC,GAA8B,CAEzD,IAMIuC,GANAC,GAAS3C,GAA0BhD,EAAY2F,OAAS,EACxDC,GAAO5C,GAA0BhD,EAAY4F,KAAO,EACpD7F,GAASiD,GAA0BhD,EAAYD,OAAS,EACxD8F,GAAQ7C,GAA0BhD,EAAY6F,MAAQ,EACtDC,GAAgB,CAAC,EAAG,EAAG,EAAG,GAC1BC,GAAartB,EAAKitB,IAItB,IAFA7D,EAAeoB,GAA0BD,GAAkBxnB,EAAUwnB,KAEpDL,GAAa,EAAG,CAGzB+C,GADAI,IAAcpzB,GAAWozB,IAAcpzB,EAC9B2yB,GAAe,CAACK,GAAQA,GAAQA,GAAQA,KAC5CI,IAAcpzB,EAEE,KADrB+yB,GAAeC,GAAO/C,IAET0C,GAAe,CAACK,GAAO,GAAIA,GAAO,GAAIA,GAAO,GAAIA,GAAO,KAC5DD,IAAgB,EACZJ,GAAeK,IAEfG,GAERC,IAAcpzB,EACV2yB,GAAe,CAACK,GAAM,IAAWA,GAAM,MAAaA,GAAM,OAAcA,GAAM,OAE9EG,GAGbpE,EAAe6B,GAAyBqC,GAAM/C,GAAgC+C,GAAO,KACrFjE,EAAiBoD,GAAgBhF,GAAQptB,EAAS8vB,EAAWM,IAC7DnB,EAAgBmD,GAAgBc,GAAOlzB,EAAS2vB,EAAUQ,IAC1DjB,EAAiB8D,GAEjB,IAAIK,GAAiB,CACjBn2B,EAAG+pB,GAAsB0G,eACzBlnB,EAAGygB,GAAoByG,gBAGvB2F,GAAiBpR,GAAgBvP,SAGjC4gB,GAAgBpE,EAAaxc,SAC7B6gB,GAAc,CACdz2B,EAAGiyB,EAAejyB,GAAKgzB,GAt1H3B,KAs1HuChB,EACnC/xB,EAAGgyB,EAAehyB,GAAK+yB,GAx1H3B,KAw1HuChB,GAEvCwE,GAAa,KAAarE,EAAe,GACzCqE,GAAa,MAAcrE,EAAe,GAC1C,IAAIuE,GAA2B,CAC3B12B,EAAGiJ,EAAKpQ,MAAM29B,GAAa,KAAaD,GAAc,KAAaD,GAAen2B,GAClFF,EAAGgJ,EAAKpQ,MAAM29B,GAAa,IAAYD,GAAc,IAAYD,GAAe5sB,IAYpF,GAVI0a,KACKzB,EAAmBtsB,GAAMssB,EAAmB9tB,IAC7C6hC,GAAyB12B,EAAIiJ,EAAKpQ,MAAM09B,GAAc,KAAaC,GAAa,KAAaF,GAAen2B,IAC5GwiB,EAAmBtsB,GAAK4hB,IACxBye,GAAyB12B,IAAM,GAC/B2iB,EAAmB9tB,GAAKojB,IACxBye,GAAyB12B,EAAIiJ,EAAKpQ,MAAM09B,GAAc,KAAaC,GAAa,MAActM,GAAsB8G,WAAasF,GAAen2B,MAIpJ+xB,EAAclyB,GAAK4yB,GAAYV,EAAcjyB,GAAK2yB,GAAYX,EAAejyB,GAAKizB,GAAehB,EAAehyB,GAAKgzB,GAAe7O,GAAQ,CAC5I,IAAIuS,GAAevE,EAAa,GAC5BwE,GAAiB1T,EAAoByT,GAAazzB,EAAQU,OAAS,CACnEizB,MAAOF,GAAazzB,EAAQM,IAC5BszB,OAAQH,GAAazzB,EAAQG,KAE7B0zB,GAAc,CACd50B,EAAGy0B,GAAc,MAAczE,EAAe,GAAKA,EAAe,GAClExD,EAAGiI,GAAc,OAAezE,EAAe,GAAKA,EAAe,IAEnE6E,GAAgB,SAAU/C,GAC1B,IAAIgD,EAAOC,GAAiBjD,GACxBkD,EAAKF,EAAKG,KACVC,EAAKJ,EAAKK,UACVC,EAAKN,EAAKO,KACVC,EAAavF,EAAcqF,KAAQtD,GAAM7P,GAASwO,EAAoBD,GACtE+E,EAAgBxF,EAAcqF,IAAO1E,EACrC8E,EAAiBzF,EAAcqF,IAAOzE,EACtC8E,EAAc3F,EAAesF,IAAOvE,EACpC6E,EAAiB5F,EAAesF,IAAOtE,EACvC6E,EAAS1N,GAAc+M,GACvBY,EAAWxB,GAAec,GAC1BW,EAASjB,GAAYI,GACrBc,EAAWzB,GAAca,GACzBa,EAASR,EAAgB,EAAI,EAC7BS,EAAsBF,EAAYD,EAAS,EAC3CI,EAAuBL,EAAYD,EAAS,EAC5CO,EACAL,GAAUF,GACPG,GAAYF,GACZE,EAAWD,GAAUD,EAAWD,EAEnCF,EACAnB,GAAYc,IAAM,EACZd,GAAYc,MACdI,GAAkBE,KAClBpB,GAAYc,KAAMM,GAAiBQ,EACnCZ,EAAaO,EAASF,EAASK,EAAsBC,EAAuBD,EAAsBC,GAEtG1B,GAAyBa,IAAOE,GAAcC,GAAkBI,EAASI,EAAWF,EAASE,IAAYjE,GAAO7P,IAAUnM,GAAgB,EAAI,GAAK,IAG3J+e,IAAc,GACdA,IAAc,GAGdP,GAAYx2B,UACLy2B,GAAyBz2B,EAChCw2B,GAAYz2B,UACL02B,GAAyB12B,EAEpCswB,EAAcoG,IAItBhE,EAAW,WAAmByB,IAAe,EAAMH,IAAa,EAAM1D,IACtEoC,EAAW,UAAkByB,IAAe,EAAOH,IAAa,EAAO1D,IACvEuB,EAAea,EAAW,aAAqBr9B,EAC/Cy8B,EAAcY,EAAW,YAAoBr9B,GAExCw8B,GAAgBC,KAAiBniB,EAAW,GAAK6iB,GAC9CA,GACA7iB,EAASE,SAAW+jB,GACpBxO,GAAiB3V,QAAQijB,EAAa/iB,KAGtCoiB,EAAmB,CACfpiB,SAAUA,EACVE,SAAU+jB,IAEVluB,EAAcoD,IAAI8G,IAAW7D,EAAU0B,cAAcmC,IACrDK,EAAa,WAAmBL,EAAO,IAAMA,EAAO5P,EACpDiQ,EAAa,UAAkBL,EAAO,IAAMA,EAAO3P,EACnD8xB,EAAiB9hB,cAAgBA,GAGjC8hB,EAAiBniB,OAASA,EAE9BwV,GAAiB3V,QAAQijB,EAAaX,KAItCF,GACAzM,GAAgB,WAAiBsN,EAAW,YAC5CZ,GACA1M,GAAgB,UAAgBsN,EAAW,WAC/CgB,OAQR5W,EAAMwb,WAAa,SAAUC,EAAQC,EAAQC,GAEzC,OADArT,GAAiBrU,KAAKwnB,EAAQC,EAAQC,GAC/B3b,GAQXA,EAAM4b,YAAc,SAAUC,GAC1B,IAAIv+B,EAAM,CACN2N,OAAQme,GACR0S,KAAMzS,GACN0S,QAASvS,GACTwS,SAAUvS,GACVwS,QAASvS,GACTwS,oBAAqB,CACjBC,UAAWvT,GAA4B,GACvCwT,MAAOvT,GAAiC,GACxCwT,OAAQvT,GAAkC,IAE9CwT,kBAAmB,CACfH,UAAWpT,GAA0B,GACrCqT,MAAOpT,GAA+B,GACtCqT,OAAQpT,GAAgC,IAE5CsT,gBAAiB5T,GAAwB,IAE7C,OAAOzc,EAAK2vB,IAAgB11B,EAAUssB,GAAiBn1B,EAAKu+B,GAAev+B,GAQ/E0iB,EAAMwc,SAAW,SAAUC,GACvB,SAASC,EAAQp/B,GACb,IAAK2R,EAAU0B,cAAcrT,GACzB,OAAOA,EACX,IAAIq/B,EAAWC,GAAW,GAAIt/B,GAC1Bu/B,EAAqB,SAAUl9B,EAAMrF,GACjCqiC,EAASv2B,EAAQS,KAAKlH,KACtBg9B,EAASriC,GAAMqiC,EAASh9B,UACjBg9B,EAASh9B,KAMxB,OAHAk9B,EAAmB,IAhgIX,SAigIRA,EAAmB,IAhgIV,iBAigIFF,EAASt2B,EACTs2B,EAEX,IAAIr/B,EAAM,CACNw/B,YAAaJ,EAAQjW,GACrBsW,WAAYL,EAAQnV,IACpBlM,WAAYqhB,GAAStQ,IACrB4Q,UAAWN,EAAQ1S,IACnBiT,WAAYP,EAAQzS,IACpB8R,QAASW,EAAQvS,IACjB+S,eAAgBR,EAAQ9R,IACxBuS,aAAcT,EAAQ3S,IACtBqT,YAAaV,EAAQ5S,IACrBuT,kBAAmBX,EAAQ9S,IAC3B0T,aAAcZ,EAAQpP,IACtBiQ,SAAUb,EAAQ/S,IAClB6T,cAAed,EAAQ9V,IAE3B,OAAO1a,EAAKuwB,IAAkBt2B,EAAUssB,GAAiBn1B,EAAKm/B,GAAiBn/B,GAQnF0iB,EAAMyd,IAAM,SAAU5K,GAClB,IAAIr0B,EACAk/B,EA17HwB,4BA07HmBp1B,MAAM,KACjDvQ,EAAI,EACR,GAAImU,EAAK2mB,IAAY1sB,GACjB,GAAI0pB,GAAYzpB,EAAQS,KAAKgsB,GAEzB,IADAr0B,EAASo+B,GAAW,GAAI/M,GAAYgD,IAC7B96B,EAAI2lC,EAAe5kC,OAAQf,WACvByG,EAAOk/B,EAAe3lC,SAKrC,IAAKA,KADLyG,EAAS,GACCqxB,GACNrxB,EAAOzG,GAAK6kC,GAAW,GAAI5c,EAAMyd,IAAI1lC,IAE7C,OAAOyG,GASXwhB,EAAM2d,OAAS,SAAU9K,EAAS+K,GAC9B,IACIzjB,EACA0jB,EACAC,EACAC,EAJAC,EAAyB1jB,EAAQ2jB,UAAUpL,GAK3CqL,GAAoB,EACxB,GAAIF,EAAwB,CACxB,GAAKnO,GAAYzpB,EAAQS,KAAKgsB,GAuB1B,OAAO7S,EAAMyd,IAAI5K,GAjBjB,IALA1Y,EAAW6jB,EAAuBG,iBAAiBhhC,KAAK6iB,EACpD4c,GAAW,GAAIoB,EAAuBje,gBACtC9Q,EACArG,MAGAk1B,EAAmB3jB,EAASikB,SACxBlyB,EAAK4xB,IAAqB33B,IAC1B43B,EAAiBD,EAAiB93B,GAClCk4B,EAAoBhyB,EAAK6xB,IAAmB53B,EAAU43B,EAAiBG,GAEvEA,GAMA,OALArO,GAAYgD,GAAW1Y,EACvB0jB,EAAgB1jB,EAASkkB,MACrBnyB,EAAK2xB,IAAkB13B,GACvB03B,EAAcD,GAEX5d,EAAMyd,IAAI5K,QAQ7BrT,QAAQC,KAAK,8BAAiCoT,EAAU,yBAQhE7S,EAAMgT,UAAY,SAAUH,GACxB,IACIyL,EADAnkB,EAAW0V,GAAYgD,GAE3B,QAAI1Y,WACO0V,GAAYgD,GAEnByL,EAAkBnkB,EAASokB,QACvBryB,EAAKoyB,IAAoBn4B,GACzBm4B,KAEG,IAuMXhkB,EAAQkkB,MA3LZ,SAAmBC,EAAeluB,EAASgV,GA+FvC,IAAImZ,EACAC,EAGJ,OAlGAnX,GAAkBpD,EAAQrE,eAC1BiG,EAA0B5B,EAAQjD,uBAClC+E,EAAuB0W,GAAW,GAAIxY,EAAQ/D,qBAC9CsF,EAA6BiX,GAAW,GAAIxY,EAAQ7D,2BACpDqF,EAA6BgX,GAAW,GAAIxY,EAAQ/C,2BACpDwE,EAAqB+W,GAAW,GAAIxY,EAAQ1C,mBAG5CiR,GAAWiK,GAAW,GAAIpV,GAAiBjX,IAE3C0V,EAAW7B,EAAQ9C,QACnByE,EAAe3B,EAAQ5D,KACvBsF,EAAyB1B,EAAQlD,sBACjCiF,EAAqB/B,EAAQrC,kBAC7BqE,EAAoBhC,EAAQtC,iBAC5BuE,EAAwBjC,EAAQpC,qBAChCsE,EAAyBlC,EAAQlC,sBACjCqE,EAA2BnC,EAAQjC,wBACZiC,EAAQ7C,oBAC/BuG,GAAmB7Y,EAAUwvB,EAActzB,eAC3Cge,GAAyBrB,GAAiB,GAC1CD,GAAiB5Y,EAAUka,GAAuByV,aAAezV,GAAuB0V,cACxF3V,GAAuBrB,GAAe,GACtCE,GAAe+W,GAAUhX,GAAkB,QAC3CE,GAAe8W,GAAU/W,GAAc,QACvCE,GAAiBhZ,EAAUwvB,GAC3BrV,GAAuBnB,GAAe,GACtCvB,EAAcuB,GAAerO,GAAG,YAChC+M,EAAUsB,GAAerO,GAAG,QAC5BgN,EAAiBuC,KAA2BjjB,EA6D5C2gB,EAAaH,EACPuB,GAAe1Q,SAAS+W,KAA8BrG,GAAehpB,SAASsY,SA/pIzDmW,cAgqIrBzF,GAAe1Q,SAASkW,KAA0BxF,GAAetT,SAASoqB,eAAoC34B,EAAQ/C,GAMxHsiB,EAA2BziB,GAAKyiB,EAA2BxiB,IAAMukB,GAAwBlM,yBAAyBE,YAClH4X,GAAiB,6BACbzM,IACAuM,IAAkB,GAClBF,IAAmB,GACnBC,IAAwB,IAG5B1M,GAAa,EACbc,IAAY,EAELvH,IAGP2G,KACA+X,EAAiB,IACFr7B,EAAI8I,EAAKxR,IAAIstB,GAAc,aAAoBF,GAAY,aAAoBF,GAAc,cAC5G6W,EAAe9xB,EAAIT,EAAKxR,IAAIstB,GAAc,YAAmBF,GAAY,YAAmBF,GAAc,aAE1G8W,EAA6B,WACzBrW,GAAiB1P,WAAWxS,EAAQE,IACpC04B,GAA6B1W,GA5tIX,uBA4tIsDqW,GAA4B,GAAM,KAKlHvL,KACAF,KACAC,KAGA8L,KACAC,IAAqB,GACrBA,IAAqB,GAl5CzB,WACI,IAIIC,EAJAC,EAAelW,GAAqBhQ,MAAQgQ,GAC5CmW,EAAoB,GACpBC,EAAgB,GAChBC,EAAyB,GAG7B,SAASC,EAAiBj1B,GACtB,GAAIk1B,EAAyBl1B,GAAQ,CACjC,IAAIm1B,EAAaC,EAAep1B,GAC5Bq1B,EAAiB,IACjB3S,IAAqBD,MACrB4S,EAAc,MAAeN,EAAcj6B,GAAKq6B,EAAWx8B,EAAIm8B,EAAkBn8B,GAAKq8B,EAAuBr8B,IAC7GgqB,IAAmBF,MACnB4S,EAAc,OAAgBN,EAAczN,GAAK6N,EAAWv8B,EAAIk8B,EAAkBl8B,GAAKo8B,EAAuBp8B,GAClH+kB,GAAa5U,IAAIssB,GACjBh3B,EAAc0B,KAAKC,QAGnBs1B,EAAqBt1B,GAG7B,SAASs1B,EAAqBt1B,GAC1B,IAAIu1B,EAAiBv1B,IAAUhS,EAE/BymC,GAA6BlX,GACzB,CAz2Fe,cALG,sBADF,gCAg3FhB,CAACiY,GAAuBP,EAAkBK,IAC1C,GAEJznB,GAAY4P,GAAcwH,IACtB7G,GAAwBqX,gBACxBrX,GAAwBqX,iBAExBF,IACIX,GACAc,KACJjgB,EAAM6D,OAx4FH,SA04FPsb,GAA4B,EAEhC,SAASM,EAAyBl1B,GAC9B,IACI21B,GADgB31B,EAAMS,eAAiBT,GACVc,UAAY9S,EAC7C,OAAOgvB,KAAad,IAAmD,IAA9B7d,EAAc+C,KAAKpB,IAAgB21B,GAEhF,SAASP,EAAep1B,GACpB,OAAOwb,GAAgBqZ,EAAe,CAAEl8B,EAAGqH,EAAM41B,QAASh9B,EAAGoH,EAAM61B,SAAYx3B,EAAckC,KAAKP,GAGtG81B,GAAwB1X,GAx4FE,wBAw4FgD,SAAUpe,GAC5Ek1B,EAAyBl1B,KAAWwiB,KAChCX,KACA+S,GAA4B,EAC5BrM,MAGJuM,EAAoBM,EAAep1B,GAEnC+0B,EAAcj6B,EAAIgkB,GAAmBjjB,EAAQM,KAAQogB,EAA2B,EAAZE,GACpEsY,EAAczN,EAAIxI,GAAmBjjB,EAAQG,KAAQugB,EAA2B,EAAZG,GACpEsY,EAAyBe,KAEzBtB,GAA6BlX,GACzB,CA/4FW,cALG,sBADF,gCAs5FZ,CAACiY,GAAuBP,EAAkBK,IAE9CjoB,GAASoQ,GAAcwH,IACnB7G,GAAwB4X,YACxB5X,GAAwB4X,aAE5B33B,EAAc8B,KAAKH,GACnB3B,EAAc0B,KAAKC,OA20C3Bi2B,GAGAC,KAGA1N,GAAoB3K,GAAsBsY,IAEtC/Z,IAEA2B,GAAgB,WAAiBoW,EAAer7B,GAAhD,UAAkEq7B,EAAe9xB,GAG7E1G,EAASy6B,eAAiBlC,GAAiBhV,GAAuBmX,QAElEtY,GAAiB9P,KAAKpS,EAAQE,GAAI,MAClCmjB,GAAuBmX,QAMvB5B,GAA6B1W,GA/vIX,uBA+vIsDqW,GAA4B,GAAO,KAKnH3e,EAAM6D,OAjxIK,QAoxIX2C,GAAe,EACf8M,GAAiB,iBAGjBniB,EAAKwe,IAAsB,SAAUnd,EAAO3Z,GAASy6B,GAAiBz6B,EAAMU,EAAGV,EAAM8D,MACrFgzB,GAAuB,GAGnBzjB,EAAKqZ,IAAepf,IACpBof,EAAa,CAACA,IACd3c,EAAcoD,IAAIuZ,GAClBpU,EAAKoU,GAAY,SAAU/S,EAAO3Z,GAASmnB,EAAM2d,OAAO9kC,MACnDoW,EAAU0B,cAAc4U,IAC7BpU,EAAKoU,GAAY,SAAUvU,EAAKnY,GAASmnB,EAAM2d,OAAO3sB,EAAKnY,MAG/DkR,YAAW,WACHoc,IAAuBM,GACvB7O,GAASsQ,GAAc6F,MAC5B,KAEI/N,GAGO6gB,CAAUvb,EAAqB/U,EAASgV,KACtDtL,EAAUqL,EAAqBtF,GAG5BA,EAnlIP,SAASgf,GAA6B8B,EAASC,EAAYC,EAAU/qB,EAAQgrB,GACzE,IAAIC,EAAYt4B,EAAcoD,IAAI+0B,IAAen4B,EAAcoD,IAAIg1B,GAC/DG,EAASlrB,EAAS,sBAAwB,mBAC1CmrB,EAAQnrB,EAAS,MAAQ,KACzBorB,GAASH,GAAoBH,EAAWz4B,MA1NhC,KA2NRvQ,EAAI,EAEJupC,EAAwBryB,EAAU0B,cAAcswB,GAChDM,EAAWlb,IAA0Bib,EAAyBL,EAAiBO,SAAYP,KAAsB,EACjHQ,EAAUH,IAA0BL,EAAiBS,WAAY,GACjEC,EAActb,EAAwB,CACtCkb,QAASA,EACTE,QAASA,GACTA,EAEJ,GAAIP,EACA,KAAOnpC,EAAIgpC,EAAW36B,EAAQ/C,GAAItL,IAC9BinC,GAA6B8B,EAASC,EAAWhpC,GAAIipC,EAASjpC,GAAIke,EAAQgrB,QAG9E,KAAOlpC,EAAIspC,EAAOj7B,EAAQ/C,GAAItL,IACvBsuB,EACCya,EAAQ,GAAGK,GAAQE,EAAOtpC,GAAIipC,EAAUW,GAGxCb,EAAQM,GAAOC,EAAOtpC,GAAIipC,GAO1C,SAASX,GAAwBS,EAASC,EAAYC,EAAUO,GAC5DvC,GAA6B8B,EAASC,EAAYC,GAAU,EAAOO,GACnEpR,GAAev3B,KAAKgQ,EAAcM,KAAK81B,GAA8B,EAAG8B,EAASC,EAAYC,GAAU,EAAMO,IAUjH,SAASxO,GAAoB0L,EAAemD,GACxC,GAAInD,EAAe,CACf,IAAIoD,EAAiBj5B,EAAciB,KAC/Bi4B,EAAyB,yEAGzB1wB,EAAW,WACXqtB,EAAa,UAFC,SAEd,WAA0DnX,GAASzB,EAAmBtsB,GAFxE,QAE2FssB,EAAmB9tB,EAAI,EAFlH,iBAGd6pC,KAGJ,GAAIA,EAA0B,CAC1B,GAAItb,IACIwa,EAAUrC,EAAc7mB,SAAS,YAAY/B,OAAOksB,GApOlCrU,uBAoOgF1W,WAAW,IAC3F,wBAA+B,IAAI6qB,EAAezwB,IAC/D4wB,QAAQlB,QAGjB,GAAI/a,EAAe,IAAMD,EAAwB,CAC7C2Y,EAAc3oB,QACVisB,GA3OcrU,qBA4OVqU,GAAY,CAAE17B,EA3OAqnB,0BA2OwCuU,IAAK,OACvDF,GA5OUrU,0BA6ONqU,GA5OWG,kCA8OfH,GA/OUrU,0BAgPNqU,GAAY,CAAE17B,EA/OH67B,gCA+OgDC,MAAO,kCAMlF,IAMIC,EACAC,EACAC,EACAC,EATAC,EAAkB/D,EAAc,GAAd,WAAgC,GAAhC,WAAkD,GACpEgE,EAAgBxzB,EAAUuzB,EAAe,WAAgB,IACzDE,EAAgBzzB,EAAUuzB,EAAe,WAAgB,IACzDG,EAAqB1zB,EAAUyzB,EAAc,GAAd,WAAgC,IAC/DE,EAAaJ,EAAgBp8B,EAAQM,IACrCm8B,EAAcL,EAAgBp8B,EAAQG,IAMtC8Z,EAAsB+D,EAAQ/D,oBAC9ByiB,EAAQ,WAaRJ,EAAa,WApDX,SAoDF,UApDE,SAqDFD,EAAa,WArDX,SAqDF,UArDE,UAuDFM,EAAY,WACZV,EAAQ,EACHD,IAGLQ,EAAaN,EACbO,EAAcN,EACdnxB,MAEAyL,EAAW,SAAUtS,GAiBrB,OAhBA+3B,EAAYE,EAAgBp8B,EAAQM,IACpC67B,EAAaC,EAAgBp8B,EAAQG,IACrC67B,EAAUE,GAAaM,GAAcL,GAAcM,EAE/Ct4B,GAAS63B,IAAYC,GACrBz5B,EAAcoB,KAAdpB,CAAoBy5B,GACpBA,EAAQz5B,EAAckB,KAAdlB,CAAoBm6B,IAEtBx4B,GACNw4B,IAEJD,IACIv4B,IACA3B,EAAc8B,KAAKH,GACnB3B,EAAc0B,KAAKC,KAEhB,GAEPy4B,EAAiB,GACjBC,EAAqB,GAEzBC,GAAsBD,EArW1B,GAqWyD,EAjDxC,GAkDN5iB,EAAoBld,EAAI,IAlDlB,EAmDTkd,EAAoBnd,GAnDX,EAoDTmd,EAAoBld,GApDX,GAqDNkd,EAAoBnd,EAAI,KAG/B+L,EAAUuzB,GAAiBlvB,IAAI2vB,GAC/BP,EAAc9tB,GA1WjB,SA0WgCiI,GAC7B4lB,EAAc7tB,GA3WjB,SA2WgCiI,GAC7B4hB,EAAc7pB,GAAGktB,GAAwB,WACrCjlB,GAAS,MAGbmmB,EAAc,MApGR,QAqGNA,EAAc,OArGR,QAsGNL,EAAmBrvB,IAAI0vB,GAEvBF,QAEC,CACD,IAAI5tB,EAAciU,GAAuBjU,YACrCiuB,EAAOpd,IAAiBxtB,EAC5B,GAAI2c,EACAupB,EAAc3oB,QAAQisB,GA1URrU,uBA2UdoR,GAAUL,EAAeM,uBAA2C,GAAG7pB,YAAY,WAAY9D,OAE9F,CACD,IAAI9T,EAAM6rB,GAAuBthB,cAAc1B,GAC/C7I,EAAIqb,aAAavS,EAAQE,GAAI,MAC7BhJ,EAAIqb,aAAavS,EAAQC,EAhVXqnB,sBAiVdpwB,EAAI8lC,OAAS,WACT,IAAIC,EAAM7iC,KAAK8iC,gBAAgB1E,YAC/ByE,EAAIruB,iBAAiB,SAAU5D,GAC/BiyB,EAAIn9B,SAAS6C,gBAAgBo5B,MAAM7pB,QAAU,QAEjDhb,EAAI4O,KAAO,YACPi3B,GACA1E,EAAc3oB,QAAQxY,GAC1BA,EAAI4gB,KAAO,cACNilB,GACD1E,EAAc3oB,QAAQxY,GAC1BmhC,EAAc7pB,GAAGktB,EAAwB1wB,IAKrD,GAAIqtB,EAAc,KAAOlV,GAA4B,CACjD,IAAIga,EAAmB,WACnB,IAAItB,EAAM/Z,GAAa5U,IAAI,aACvBA,EAAM,GACNkwB,EAAkB,EAClBhlC,GAAS,EAkBb,OAjBIyjC,IAAQ1X,KACI,QAAR0X,GACA3uB,EAAG,KAAa,EAChBA,EAAG,MA5ZhB,OA6ZakwB,EA/IF,UAkJElwB,EAAG,KAhahB,OAiaaA,EAAG,MAAc,EACjBkwB,EAAkB3d,EAAmBtsB,GApJvC,QAoJ0DssB,EAAmB9tB,EAAI,EApJjF,SAuJFqwB,GAAqBzT,WAAW6E,GAAG,GAAGlG,IAAIA,GAC1C8U,GAAoB,WAAiBob,GAArC,UAxJE,SAyJFjZ,GAA6B0X,EAC7BzjC,GAAS,GAENA,GAEX+kC,IACAlD,GAAwB5B,EA3avB,UA2akD,SAAUl0B,GAKzD,OAJIg5B,KACA1f,KACJjb,EAAc8B,KAAKH,GACnB3B,EAAc0B,KAAKC,IACZ,WAMf,GAAI+b,EAAwB,CACxB,IAAIwa,EACA2C,GADA3C,EAAUrC,EAAcznB,WAAW,IACR,wBAC3BysB,IACAA,EAAkBC,oBACX5C,EAAO,8BAIlB7qB,GAAOwoB,EAAc9pB,SAASoqB,uBAA2CvlB,GAAG,KAkD5F,SAASinB,KACL,GAAIla,EAA0B,CAC1B,IAGIod,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA95B,EACA+5B,EACAC,EAXAC,EAAmBx7B,EAAcgB,KACjCy6B,EAAoBz7B,EAAcuB,MAyDtCgiB,GAAmC,SAAUmY,GACzC,IAAIC,GAAW,EAkCf,OA/BI/d,IAAiBe,KACjBpW,EAAKmzB,GAAW,WAGZ,QADAC,EA+NpB,SAA2BC,GACvB,IAAIC,EAAgBD,EAASC,cACzBd,EAAiBa,EAASv5B,OAC1By5B,EAAeF,EAASt4B,KAG5B,GAAIy3B,IAAmBja,GACnB,OAAyB,OAAlB+a,EACX,GAAqB,eAAjBC,IAAkCD,IAAkBr+B,EAAQC,GAAKo+B,IAAkBr+B,EAAQ9M,KAAOotB,EAAa,CAE/G,GAAI+d,IAAkBr+B,EAAQC,GAAK4I,EAAU00B,GAAgBpsB,SAASkW,IAClE,OAAOkX,GAAsBH,EAASI,SAAUjB,EAAensB,WAGnE,UAAWmsB,EAAc,SAAgBx9B,EACrC,OAAO,EACX,GAA8E,OAA1Ew9B,EAAc,QAAa5E,wBACmC,OAA9D4E,EAAc,QAAa5E,kBACyC,OAApE4E,EAAc,QAAa5E,wBAC3B,OAAO,EAEf,OAAO,EApPoB8F,CADArkC,UAKX+jC,IACAp6B,EAAMvB,EAAcuB,MACpB+5B,EAAYja,IAAoBD,GAChCma,EAAS,WACA1d,IACD4d,EAAoBl6B,EAGhBuc,GACAoe,KAEAZ,EACArgB,KAEA7D,EAAM6D,OAzkBvB,UA4kBK3Z,aAAa+5B,GAC0B95B,EAAMk6B,EAxFxB,KAwF2EH,EAC5FC,IAEAF,EAAiBl6B,WAAWo6B,EA3FX,MA8FtBI,GAGXvY,GAAwB,IAAIoY,EAnF5BlY,GAAgC,SAAUoY,GAEtC,IAEIE,EAFAD,GAAW,EACXQ,GAAgB,EAEhBC,EAAe,GAsCnB,OApCIxe,IAAiBe,KACjBpW,EAAKmzB,GAAW,WAEZX,GADAa,EAAWhkC,MACeyK,OAC1B24B,EAAmBY,EAASC,cAC5BZ,EAAkBD,IAAqBx9B,EAAQC,EAC/Cy9B,EAAiBU,EAASI,SAC1Bb,EAAcJ,EAAensB,UAEzBqP,GAAcgd,IAAoBkB,GAE9BjB,EAAehjC,QAAQ6sB,KAAiC,GAAKoW,EAAYjjC,QAAQ6sB,IAAgC,IACjHqW,EAAqBiB,IAA0B,GAC/C5b,GAAmB7R,UAAYusB,EAAYz7B,MAhhBvD,KAghBwExL,OAAOgnC,EAAex7B,MAhhB9F,KAghB+G48B,QAAO,SAAU/qC,GAChH,OAAOA,EAAKsB,MAAMuoC,OAClB5jC,KAlhBhB,KAmhBYmkC,EAAWQ,GAAgB,GAI9BR,IACDA,EAAWV,EACLc,GAAsBb,EAAgBC,GACtCH,IAAqBx9B,EAAQ9M,GACzBwqC,IAAmBH,EAAev9B,EAAQ9M,GAAGkP,SAI3Dw8B,EAAapsC,KAAKgrC,MAGtBzS,GAA8B6T,GAE1BT,GACAvkB,EAAM6D,OAAOkhB,GA5iBlB,SA8iBIR,IAyCXtY,GAA2B,IAAImY,EAAiBjY,KAOxD,SAAS8T,KACD1Z,IAA6B6F,KAC7BJ,GAAsBgW,QAAQ3Y,GAAoB,CAC9C8b,YAAY,EACZC,mBAAmB,EACnBC,gBAAiBnV,KAGrBjE,GAAyB+V,QAAQtb,EAAc0C,GAAuBM,GAAuB,CACzFyb,YAAY,EACZC,mBAAmB,EACnBE,SAAU5e,EACV6e,WAAY7e,EACZ8e,eAAgB9e,EAChB2e,gBAAiB3e,EAAcuJ,GAAiCC,KAGpE9D,IAA8B,GAOtC,SAAS0G,KACDvM,GAA4B6F,KAC5BJ,GAAsB0X,aACtBzX,GAAyByX,aAEzBtX,IAA8B,GAYtC,SAASsU,KACL,IAAKnZ,GAAW,CACZ,IAAIgK,EACAgM,EAAW,CACXl4B,EAAGkkB,GAA2BnjB,EAAQQ,IACtCirB,EAAGtI,GAA2BnjB,EAAQK,KAG1C8qB,EAAUL,GAAWqM,EAAUtS,IAC/BA,GAAsCsS,EAClChM,GACA1N,GAAO,CAAEsO,kBAAkB,KAOvC,SAASsT,KACD7Y,IACA8Y,IAA0B,GAMlC,SAASC,KACD/Y,KAA6B5E,GAAazQ,SAASiY,KACnDkW,IAA0B,GAMlC,SAASE,KACDjZ,KACA+Y,IAA0B,GAC1Bx7B,aAAaqiB,IACbA,GAAmCxiB,YAAW,WACtC4iB,KAA4BlG,GAC5Bif,IAA0B,KAC/B,MAQX,SAAS3F,GAAsBx1B,GAE3B,OADA3B,EAAc8B,KAAKH,IACZ,EAMX,SAAS8oB,GAAqB9oB,GAC1B,IAAIs7B,EAAM52B,EAAU1E,EAAMU,QAE1B66B,IAAiB,SAAU/tC,EAAGguC,GACtBF,EAAIjsB,GAAGmsB,IACPliB,GAAO,CAAEmO,qBAAqB,OAS1C,SAASiB,GAA0BL,GAC1BA,GACDK,IAA0B,GAE9B+L,GAA6B9W,GAnsBH,sBAosBE5f,MA5sBhB,KA4sBiC,GACzCs9B,IACEjZ,IAA2BiG,GAAU,GAC3CoM,GAA6B9W,GACzB,CAvsBa,aACA,cAusBb,CAACud,GAAkBE,KACjB/Y,IAA4BgG,GAAU,GAGvCpM,GAAiBoM,GAClB1K,GAAa7S,IAAI,YAAaowB,IAUtC,SAAS3T,KACL,IAAIkU,EAAc,GAQlB,OAPIrf,GAAW6B,KACXwd,EAAY3gC,EAAI8yB,GAAoB3P,GAAuBlV,IAAI2yB,cAC/DD,EAAYnU,EAAIsG,GAAoB3P,GAAuBlV,IAAI2yB,eAC/DD,EAAY3/B,EAAI6qB,GAAW8U,EAAaja,IACxCia,EAAYvsC,GAAI,GAEpBsyB,GAAoBia,IACXA,EAAY3/B,EASzB,SAASs+B,GAAsBuB,EAAeC,GAC1C,IAMIpuC,EACAquC,EAPAC,SAAqBF,GAAiBhgC,EAAUggC,EAAc79B,MAnvBtD,KAmvByE,GAEjFg+B,EA01ER,SAA6BC,EAAIC,GAC7B,IAEIzuC,EACA0uC,EAHA9pC,EAAI,GACJ2pC,EAAO,GAGX,IAAKvuC,EAAI,EAAGA,EAAIwuC,EAAGztC,OAAQf,IACvB4E,EAAE4pC,EAAGxuC,KAAM,EACf,IAAKA,EAAI,EAAGA,EAAIyuC,EAAG1tC,OAAQf,IACnB4E,EAAE6pC,EAAGzuC,WACE4E,EAAE6pC,EAAGzuC,IAEZ4E,EAAE6pC,EAAGzuC,KAAM,EAEnB,IAAK0uC,KAAK9pC,EACN2pC,EAAK1tC,KAAK6tC,GACd,OAAOH,EAz2EII,QADaR,GAAiB//B,EAAU+/B,EAAc59B,MApvBrD,KAovBwE,GACzC+9B,GAGvCM,EAAM/1B,EAAQ6e,GAAqB6W,GAOvC,GAHIK,GAAO,GACPL,EAAK/oC,OAAOopC,EAAK,GAEjBL,EAAKlgC,EAAQ/C,GAAK,EAElB,IADA+iC,EAAQnB,IAA0B,GAAM,GACnCltC,EAAI,EAAGA,EAAIuuC,EAAKxtC,OAAQf,IACzB,IAAKuuC,EAAKvuC,GAAG0D,MAAM2qC,GACf,OAAO,EAInB,OAAO,EAyMX,SAASjV,GAA8ByV,GAEnCz1B,EADAy1B,EAAQA,GAAShX,IACL,SAAUpd,EAAOgG,GACzB,GAAI5P,EAAckD,IAAI0M,EAAMoX,KAA6B,EAAG,CACxD,IAAIiX,EAAa5e,GAAezP,KAAKA,GACjCtM,EAAK26B,IAAe1gC,EACpBmiB,GAAiB9P,KAAKA,EAAMquB,GAG5Bve,GAAiB1P,WAAWJ,OAS5C,SAASssB,KACL,IAAKvd,GAAW,CACZ,IAKIuf,EACA/M,EACAgN,EACA/M,EARAgN,GAAetb,GACfub,EAAW3Z,GAAcjoB,EACzB6hC,EAAY5Z,GAAcuE,EAC1Bve,EAAM,GACN6zB,EAAYnd,IAAmBgd,EAyCnC,OAlCA1zB,EAAI2yB,aAv/BI,GAw/BR3yB,EAAI2yB,cAx/BI,GA2/BR3yB,EAAG,MA1/BI,OA2/BP2U,GAAe3U,IAAIA,GAGnBwzB,EAAY1d,GAAqBhjB,EAAQM,IACzCqzB,EAAQoN,EAAYh7B,EAAKxR,IAAImsC,EAAW1d,GAAqBhjB,EAAQQ,IAAM,GAAK,EAIhF0M,EAAG,MAAc0W,GAngCV,OAGU,OAigCjB1W,EAAI2yB,aAjgCa,OAogCjB3yB,EAAG,OAvgCI,OAwgCP2U,GAAe3U,IAAIA,GAGnByzB,EAAa3d,GAAqBhjB,EAAQG,IAC1CyzB,EAAS7tB,EAAKxR,IAAIosC,EAAY3d,GAAqBhjB,EAAQK,IAAM,GAGjE6M,EAAG,MAAcymB,EACjBzmB,EAAG,OAAe0mB,EAClBtR,GAAsBpV,IAAIA,GAG1BA,EAAI2yB,aAA4BgB,EAChC3zB,EAAI2yB,cAA6BiB,EACjCjf,GAAe3U,IAAIA,GAEZ,CACH8zB,eAAgBN,EAChBO,gBAAiBN,EACjBO,cAAevN,EACfwN,eAAgBvN,IAgB5B,SAASnW,GAAO2jB,GACZt9B,aAAa0d,IACb4f,EAAcA,GAAe,GAC7B1X,GAAsBqC,kBAAoBqV,EAAYrV,iBACtDrC,GAAsBkC,qBAAuBwV,EAAYxV,oBACzDlC,GAAsBsC,QAAUoV,EAAYpV,OAE5C,IAMIqV,EANAt9B,EAAMvB,EAAcuB,MACpBu9B,IAAoB5X,GAAsBqC,iBAC1CwV,IAAuB7X,GAAsBkC,oBAC7C3B,IAAUP,GAAsBsC,OAChCwV,EAAiBJ,EAAYvV,gBAC7B4V,EAAmCrhB,IAAiBC,IAAe4J,IAAUuX,GAAmBz9B,EAAMwd,GAl9BtF,KAk9BgIsC,KAAqBD,GAWzK,GARI6d,IACAjgB,GAA0B7d,WAAW8Z,GAt9BrB,OA69BhB4C,GAAcohB,GAAYtgB,KAAcqgB,GAAoBphB,IAAiB6J,IAAUoX,EAAkBvf,GAAatO,GAAG,aAAgD,WAAhCsO,GAAa5U,IAAI,YAA9J,CAGAqU,GAAkBxd,EAClB2lB,GAAwB,IAGpB9J,GAA6BL,EAA2BziB,GAAKyiB,EAA2BxiB,EAOxF+iB,EAAuB0W,GAAW,GAAIxY,EAAQ/D,sBAL9C6F,EAAqBhjB,EAAI,EACzBgjB,EAAqB/iB,EAAI,GAW7BoqB,GAA0B,CACtBrqB,EAAuE,GAAnEgjB,EAAqBhjB,GAAKyiB,EAA2BziB,EAAI,EAAI,IACjEC,EAAuE,GAAnE+iB,EAAqB/iB,GAAKwiB,EAA2BxiB,EAAI,EAAI,KAGrEykC,EAAiBA,GAAkB,GAInC,IAAIE,EAAsB,WACtB,OAAO5W,GAAWznB,MAAMjJ,KAAM,GAAG3E,MAAMsB,KAAKf,WAAWU,OAAO,CAACuzB,MAI/DuH,EAAa,CACb10B,EAAGolB,GAAgB,aACnBnlB,EAAGmlB,GAAgB,aAGnByf,EAAmCrgB,GAAwB9L,WAC3DosB,EAAiCtgB,GAAwBtL,SAGzD6rB,EAAuBF,EAAiClsB,WACxDqsB,EAA8BJ,EAAoBG,EAAsB/c,IAGxEid,EAAqBJ,EAAiCjsB,SACtDssB,EAA4BN,EAAoBK,EAAoBhd,IAGpEkd,EAA2BN,EAAiC9rB,eAC5DqsB,EAAkCR,EAAoBO,EAA0Bjd,IAGhFmd,EAA0BR,EAAiC/rB,cAC3DwsB,EAAiCV,EAAoBS,EAAyBld,IAG9E7T,EAAYkQ,GAAwBlQ,UACpCixB,EAAmBX,EAAoBtwB,EAAWgU,IAGlDxQ,EAAS0M,GAAwB1M,OACjC0tB,EAAgBZ,EAAoB9sB,EAAQsQ,MAAkB3E,EAG9DvL,EAAkBsM,GAAwBtM,gBAC1CutB,EAAyBb,EAAoB1sB,EAAiBoP,IAG9DtP,EAAawM,GAAwBxM,WACrC0tB,EAAoBd,EAAoB5sB,EAAYuP,IAGpDxP,GAAkByM,GAAwBzM,kBAAoB0L,EAC9DkiB,GAAyBf,EAAoB7sB,GAAiB8P,IAG9D+d,GAA+BphB,GAAwBlM,yBAAyBC,qBAChFstB,GAAsCjB,EAAoBgB,GAA8Bje,IAGxFxP,GAAaqM,GAAwBrM,WACrC2tB,GAAoBlB,EAAoBzsB,GAAYyP,IAGpDnP,GAAmB+L,GAAwB/L,iBAC3CstB,GAA0BnB,EAAoBnsB,GAAkBgP,GAAwB0F,GAGxF6Y,GAAmBlB,EAA+B3rB,SAClD8sB,GAA0BrB,EAAoBhc,GAAwBod,IAGtEE,GAAoBpB,EAA+B1rB,UACnD+sB,GAA2BvB,EAAoBjc,GAAyBud,IA8D5E,GA3DA3c,GAAkD,MAAvB0b,EAC3Bzb,GAAmD,MAAvByb,EAC5Bxb,GAAiD,MAAvBwb,EAC1Bvb,GAAkD,MAAvBub,EAG3B3b,GAA2Bub,EAAiChsB,cAG5D0P,GAAgBD,GAGhBuB,GAAyB,MAAX/R,EACdgS,GAAyB,MAAXhS,EACdiS,GAA+B,MAAXjS,EACpBkS,GAA6B,MAAXlS,EAGlBuQ,GAAqB7D,GAAwBvM,aAG7C2tB,GAA+BA,IAAiCnjB,EAA2BziB,GAAKyiB,EAA2BxiB,EAG3H+nB,GAA6B+c,EAC7B9c,GAA2Bgd,EAC3B/c,GAAiCid,EACjChd,GAAgCkd,EAChC/c,GAAkBhU,EAClB8T,GAAetQ,EACfwP,GAAwBpP,EACxBqP,GAAmBvP,EACnB6P,GAAwB9P,GACxB4P,GAAqCie,GACrChe,GAAmBzP,GACnBsP,GAAyBiS,GAAW,GAAIjhB,IACxCmQ,GAAyBod,GACzBrd,GAA0Bud,GAC1Btf,GAAoBA,IAAqB,CAAE5mB,GAAG,EAAOC,GAAG,GAGpDslC,IACArwB,GAAY8P,GAAcuD,GA1sClB,IA0sC8CgE,IACtD7X,GAASsQ,GAAc1Q,IAAcjf,GAA2B,OAAdif,GAAsBA,EAAU1e,OAAS,EAAI0e,EAAYiY,KAI3GuZ,MACmB,IAAf3tB,IAAuC,OAAfA,IAAuByK,GAC/CgN,KACA7R,EAAe9I,IAAI6H,KAGnBiB,EAAehL,OAAO+J,GACtBigB,OAKJ4I,GACA,GAAI5tB,GAQA,GAPIwN,GACAA,GAAoBlQ,QAGpBkQ,GAAsBxZ,EAAU8yB,GAxrCbrU,oBAyrCnBrF,GAAgBtS,OAAO0S,KAEvB1B,EACAoB,GAAyB5P,WAExB,CACD4P,GAA2BlZ,EAAU8yB,GA9rCbrU,0BA+rCxBpE,GAAiCnB,GAAyB,GAE1DM,GAAoB1S,OAAOoS,IAC3B,IAAImhB,GAAU,CAAEjkC,GAAI,EAAGwsB,GAAI,GAC3BkB,GAAoB5K,IAA0B,WAC1C,IAAIohB,EAAU,CACVlkC,EAAGikB,GAA+BljB,EAAQM,IAC1CmrB,EAAGvI,GAA+BljB,EAAQG,KAE1C2qB,GAAWqY,EAASD,MAChB9iB,GAAiByD,IAAoBsf,EAAQ1X,EAAI,GAAO7H,IAAmBuf,EAAQlkC,EAAI,GAGlFmhB,IAAkByD,IAAkC,IAAdsf,EAAQ1X,IAAc7H,IAAiC,IAAduf,EAAQlkC,IAF5Fwe,KAMRylB,GAAUC,KAEdxiB,GAAyB,EAGR,OAAbd,GACAkC,GAAyB7U,IA1wC5B,SA0wC4C2S,EAAW,qBAIxDc,GACAoB,GAAyB9P,OACzBoQ,IACAA,GAAoBpQ,OAK5BgY,IACAjI,GAAqB1O,KAAK,KAAKlE,QAlxCtB,UAmxCLuR,GACAoB,GAAyBzO,KAAK,KAAKlE,QApxC9B,WAwxCbiyB,EAAkBA,IAAoBlvC,EAAY2vB,GAAatO,GAAG,WAAa6tB,EAG/E,IAeI+B,GAfAC,KAAuB/iB,GAA8C,QAAhCuB,GAAezP,KAAK,QACzDkxB,GAA8B5B,EAAoB2B,GAAsB/d,IAGxEie,GAAezhB,GAAa5U,IAAI,aAChCs2B,GAAsB9B,EAAoB6B,GAAcrf,IAGxDuf,GAAY3hB,GAAa5U,IAAI,cAC7Bw2B,GAAmBhC,EAAoB+B,GAAW3f,IAGlD6R,GAAUgO,GArzCK,YA0zCnB,IACIP,GAAgCziB,EAAyBuC,GAA+BljB,EAAQU,OAAS,KAC3G,MAAOsa,IACL,OAIJ0F,EAA8B,eAAd+iB,GAChB,IAAIG,IAFJ1iB,GAA0B,QAAjBqiB,IA3zCE,OAFC,QAg0CRM,GAAa3iB,GAh0CL,QAED,OAi0CP4iB,IAA2B,EAC3BC,MAA8BpjB,GAA2D,SAAhCmB,GAAa5U,IA7zC9D,WA6zC0M,IAAzFnH,EAAKpQ,MAAMytC,GAA8BY,MAAQZ,GAA8BrwB,UAAkBiC,GAAmBiO,GAAmBjjB,EAAQO,IAAMqgB,EAAa,GAC/R,GAAI/L,KAAoBkvB,GAA4B,CAChD,IAAIE,GAAmBhhB,GAAmBjjB,EAAQM,IAC9C4jC,GAA0B7hB,GAAoBnV,IAl0C1C,SAm0CRmV,GAAoBnV,IAn0CZ,QAID,QAi0CP,IAAIi3B,GAAkBlhB,GAAmBjjB,EAAQM,IACjD+hB,GAAoBnV,IAt0CZ,QAs0C2Bg3B,KACnCJ,GAA2BG,KAAqBE,MAE5C9hB,GAAoBnV,IAz0ChB,QAy0C+B+2B,GAAmB,GACtDE,GAAkBlhB,GAAmBjjB,EAAQM,IAC7C+hB,GAAoBnV,IA30ChB,QA20C+Bg3B,IACnCJ,GAA2BG,KAAqBE,IAGxD,IAAIvN,IAAamN,IAA8BD,KAA6BjvB,KAAoBwsB,EAC5F+C,GAAmB1C,EAAoB9K,GAAWhT,IAClDygB,IAAgBzN,IAAahT,GAG7BiT,MAAalW,IAA0B9L,IAAoBwsB,IAA4G,IAAzFt7B,EAAKpQ,MAAMytC,GAA8BkB,OAASlB,GAA8BtwB,KAC9JyxB,GAAoB7C,EAAoB7K,GAAYhT,IACpD2gB,IAAiB3N,IAAchT,GAM/B4gB,GAASd,GAn2CK,UAm2CsC,WAFnC/M,IAAalW,IAAkBA,KAC/BmW,IAAcnW,IAAkBA,IAIjDqS,GAAS4Q,GAx2CK,WA22Cde,GAAoB,GACpBC,GAAwB,GAGxBC,GAAc,WAEd,MAAO,CACH3lC,EAAGgkB,GAAmBjjB,EAAQO,IAC9BkrB,EAAGxI,GAAmBjjB,EAAQI,MAGlCykC,GAAkB,WAIlB,MAAO,CACH5lC,EAAGmkB,GAAsBpjB,EAAQM,IAAMyF,EAAKxR,IAAI,EAAG+uB,GAAsBtjB,EAAQO,IAAM+iB,GAAsBtjB,EAAQQ,KACrHirB,EAAGrI,GAAsBpjB,EAAQG,IAAM4F,EAAKxR,IAAI,EAAG+uB,GAAsBtjB,EAAQI,IAAMkjB,GAAsBtjB,EAAQK,OAKzHykC,GAAmBlkB,EAAY+U,GAAQ14B,EAAI04B,GAAQz/B,EACnD6uC,GAAmBlkB,EAAY8U,GAAQnvB,EAAImvB,GAAQv/B,EA8BvD,GA7BA0uC,IAAoB9vB,EAAkB,EAAI,EAC1C+vB,IAAoB/vB,EAAkB,EAAI,EAC1C2gB,GAAQ11B,EAAIyhC,EAAoB/L,GAAS5R,IAGzCjD,EAAW2jB,GAAOxnC,EAAIwnC,GAAOvuC,EAC7B6qB,EAAW0jB,GAAOj+B,EAAIi+B,GAAOruC,EAC7BquC,GAAOxkC,EAAIyhC,EAAoB+C,GAAQzgB,IAGvChD,GAAW+R,GAAO91B,EAAI81B,GAAO78B,EAC7B+qB,GAAW8R,GAAOvsB,EAAIusB,GAAO38B,EAC7B28B,GAAO9yB,EAAIyhC,EAAoB3O,GAAQ9O,IAGvCqB,GAA6B+d,GAC7Bnf,GAAqBqf,GACrBzf,GAAqB2f,GACrB7f,GAAkBgT,GAClB/S,GAAmBgT,GACnB9S,GAAmB4R,GACnB3R,GAAkBygB,GAClBxgB,GAAkB8O,GAGdyQ,IAAuB7iB,GACvBoB,GAAyB7U,IAl5CjB,QAk5CgC22B,IAGxClO,GAAQ11B,GAAKujC,IAAuBjB,GAA0B6B,IAAoBG,IAAqBb,IAAoBjB,GAAwB,CACnJ,IAAIuC,GAAoB,GACpBC,GAAc,GACdC,GAAgB,CAACvP,GAAQnvB,EAAGmvB,GAAQz/B,EAAGy/B,GAAQv/B,EAAGu/B,GAAQ14B,GAE9D6/B,GAAsB6H,GAr6CR,UAq6CgD,EAAEhP,GAAQnvB,GAAImvB,GAAQz/B,GAAIy/B,GAAQv/B,GAAIu/B,GAAQ14B,IACxG+X,GACA8nB,GAAsBkI,GA35ClB,GA25CgDE,IACpDpI,GAAsBxc,EAAc2kB,GAAcP,GAv6CvC,cA06CX5H,GAAsBkI,GA/5ClB,IAg6CJlI,GAAsBxc,EAAc2kB,GAAcP,GA36CvC,WA26C4EQ,KAG3FjjB,GAAgB/U,IAAI83B,IACpBnjB,GAAe3U,IAAI+3B,IAIvB/d,GAAgB2d,KAGhB,IAAIM,KAAe7kB,GAAcoe,KAC7B0G,GAAsB9kB,GAAeohB,EAAoByD,GAAc3f,IACvE6f,GAAsB/kB,GAAe6kB,GAAe,CACpDlmC,EAAG6jC,GAAmBqC,GAAajE,cAAgBiE,GAAanE,eAChEvV,EAAGuX,GAAoBmC,GAAahE,eAAiBgE,GAAalE,iBAClE,GA6CJ,GA5CAzb,GAAqB2f,GAGjBtO,KAAe0N,IAAqBhC,GAA0BmB,IAAoB/N,GAAQ11B,GAAKwkC,GAAOxkC,GACtGykC,GAAiB,OAp7CV,QAs7CFH,IAAqBhC,KAC1BmC,GAAiB,OAp7CA,QAs7CjB9N,KAAcwN,IAAoB7B,GAA0BmB,IAAoB/N,GAAQ11B,GAAKwkC,GAAOxkC,GAAKujC,KACzGkB,GAAiB,MA17CV,OA27CPC,GAAsBW,aAx7CL,SA07CZlB,IAAoB7B,KACzBmC,GAAiB,MA37CA,OA47CjBA,GAAiB,MAh8CT,GAi8CRC,GAAsBW,aAj8Cd,IAm8CR1O,IAEA+N,GAAqB,MAp8Cd,OAs8CPD,GAAiB,MAAc/jC,EAAQgB,kBA18C/B,QA08C4D,0BAt8C7D,OAu8CP+iC,GAAiB,MAAcb,IAG/Bc,GAAqB,MA38Cb,GA+8CRA,GAAqB,OAFrB9N,GAEoCwO,GAAoB5Z,GAAKnI,GAAsBtjB,EAAQI,IA/8CnF,GAo9CRyU,IACAwN,GAAoBnV,IAAIy3B,IAC5BxiB,GAAgBjV,IAAIw3B,IAGpBA,GAAoB,GACpBC,GAAwB,GAGpBrD,GAAmBC,GAAsB6D,IAAuB5B,IAAuBE,IAAoBnB,GAA0B6B,IAAoBxN,IAAa2N,IAAqB1N,IAAc8L,IAAuCE,IAA2BL,GAAqBF,GAAiBR,GAA+BE,GAA6BI,GAAkCF,GAAmCa,IAA2BE,IAA4BK,GAA6B,CAStgB,IAAK1jB,EAAyB,CAC1B,IAAI2lB,GAA0B,GAC1BC,GAAY9hB,GAAkB3mB,GAAK4mB,GAAmB8hB,KAAO/C,GAAgCnjB,EAA2BxiB,EAAImlB,GAAiBhV,IAAI02B,KAAc9jB,EAAqB/iB,EAAK,EACzL2oC,GAAiBhiB,GAAkB5mB,GAAK6mB,GAAmBgiB,KAAOjD,GAAgCnjB,EAA2BziB,EAAIolB,GAAiBhV,IAh/CjJ,WAg/CoK4S,EAAqBhjB,EAAK,EACnMggC,GAAsByI,GA1+ClB,IA2+CJrjB,GAAiBhV,IAAIq4B,IAIzB,IAAIla,GAAwBC,KAExBsa,GAAc,CAEd3mC,EAAGomC,GAAoBpmC,GAAKosB,GAAsBrrB,EAAQO,IAC1DkrB,EAAG4Z,GAAoB5Z,GAAKJ,GAAsBrrB,EAAQI,KAE1Dgb,GAAa,CACbnc,EAAGosB,GAAsBrrB,EAAQQ,IACjCirB,EAAGJ,GAAsBrrB,EAAQK,KAIhCuf,IACD2lB,GAAuB,OAAef,GA7/ClC,GA6/C8DkB,GAClEH,GAAwB3B,IAAaS,GA9/CjC,GA8/C4DmB,GAChEtjB,GAAiBhV,IAAIq4B,KAEzBre,GAAgB2d,KAGhB,IAAI1N,GAAWyN,KACXiB,GAAuB,CACvB5mC,EAAGk4B,GAASl4B,EAAI+hB,GAAWF,GAAYJ,EAAe,EAAIE,GAC1D6K,EAAG0L,GAAS1L,EAAIxK,GAAWF,GAAYL,EAAe,EAAIG,IAE1DilB,GAAkB,CAGlB7mC,EAAG8G,EAAKxR,KAAKqiC,GAAYgP,GAAY3mC,EAAImc,GAAWnc,GAAK6lC,GAAkBe,GAAqB5mC,GAChGwsB,EAAG1lB,EAAKxR,KAAKsiC,GAAa+O,GAAYna,EAAIrQ,GAAWqQ,GAAKsZ,GAAkBc,GAAqBpa,IAMrG,GAJAqa,GAAgB7lC,EAAIyhC,EAAoBoE,GAAiBxhB,IACzDA,GAAwBwhB,GAGpBjxB,GAAiB,EAEbixB,GAAgB7lC,GAAM42B,IAAcD,MACpC+N,GAAqB,MAAcmB,GAAgB7mC,EACnD0lC,GAAqB,OAAemB,GAAgBra,EAG/CnL,IACDslB,GAAc,CAEV3mC,EAAGosB,GAAsBrrB,EAAQO,IACjCkrB,EAAGJ,GAAsBrrB,EAAQI,OAI7C,IAAI2lC,GAAmB,GACnBC,GAAmC,SAAUC,GAC7C,IAAIC,EAAgBlS,GAAiBiS,GACjChS,EAAKiS,EAAchS,KACnBiS,EAAQD,EAAcE,cACtBC,EAAWJ,EAAarP,GAAYC,GACpCyP,EAAaL,EAAanlB,EAAWC,EACrCwlB,EAAcN,EAAarlB,EAAYC,EACvC2lB,EAAaP,EAAajlB,GAAWC,GACrCiW,EAAehQ,GAAc+M,GAAMqS,EAAaE,GAAc9lB,EAAe,EAAI6lB,KAGhFF,IAAcA,GAAY5B,GAAOxkC,KAClC0kC,GAAsBwB,GAASN,GAAqB5R,GAAM,KAG1DoS,GAAaT,GAAY3R,GAAMiD,IAAkB+O,GAAc3lB,GAAe+iB,KAC1E/iB,IACAylB,GAAiBI,GAASpU,GAAoBzP,GAAsBpV,IAAIi5B,IAAU,GACtFxB,GAAsBwB,IAAU,GAIhCP,GAAY3R,GAAM,IAClB0Q,GAAsBwB,GAASpgC,EAAKxR,IAAI,EAAGowC,GAAsBwB,MAEzEH,IAAiC,GACjCA,IAAiC,GAE7B1lB,GACAgC,GAAsBpV,IAAI64B,IAC9B1jB,GAAoBnV,IAAIy3B,IAExB/N,KACA8N,GAAiB,MAhkDJ,SAikDb9N,IAAclW,GAAiBsF,KAC/B0e,GAAiB,MAAc,QAGnCviB,GAAgBjV,IAAIw3B,IACpBA,GAAoB,GAGpB,IAAIzN,GAAoB,CACpBh4B,EAAGosB,GAAsBrrB,EAAQQ,IACjCirB,EAAGJ,GAAsBrrB,EAAQK,KAErC42B,GAAkBh3B,EAAIshC,EAAqBG,EAAoBzK,GAAmBzT,IAClFA,GAA0ByT,GAG1B/P,GAAgB2d,KAGhBvD,EAAkBI,EADlBvK,GAAWyN,KACqCrhB,IAChDA,GAAiB4T,GAEjB,IAAIsP,GAA4BnmB,IAAoC,IAApB4G,GAAcjoB,GAA+B,IAApBioB,GAAcuE,GACnFib,GAAyBliB,GACzBmiB,GAAuB,GACvBC,GAAuB,GACvBC,GAAsB,GACtB/P,GAAiB,GACjBE,GAAc,GACdD,GAAe,GACf+P,GAAY,GACZC,GAAe3jB,GAAsBpjB,EAAQU,OAC7CsmC,GAAuB,SAAUf,GACjC,IAAIC,EAAgBlS,GAAiBiS,GAEjCgB,EADwBjT,IAAkBiS,GACd3R,KAC5BD,EAAK6R,EAAc5R,KACnBL,EAAKiS,EAAchS,KACnBgT,EAAchB,EAAcE,cAC5Be,EAzmDC,SAymDwBjB,EAAckB,UAAY,MACnDC,EAA2BN,GAAaG,GAAenhC,EAAKY,IAAIogC,GAAaG,GAAehgB,GAAc+M,IAAO,EACjHqT,EAAgCZ,IAA0BA,GAAuBrS,GAAM,GAA2C,IAAtChR,GAAuB8jB,GACvHR,GAAqBtS,GAA+B,QAAzB9e,GAAiB8e,GAC5CuS,GAAqBvS,GAA+B,QAAzB9e,GAAiB8e,GAC5CwS,GAAoBxS,GAA+B,MAAzB9e,GAAiB8e,GAC3CyC,GAAezC,GAAMtuB,EAAKxR,IAAI,EAAGwR,EAAKpQ,MAAoD,KAA7CshC,GAAkBhD,GAAM/M,GAAc+M,KAAc,KACjG6C,GAAezC,IAAQoS,IAA8Ba,GAAiCD,EAA2B,GAAKA,EAA2B,EAAM,EAAI,EAC3JrQ,GAAY3C,GAAMyC,GAAezC,GAAM,EAKvC0C,GAAa1C,GAAMsS,GAAqBtS,IAAOuS,GAAqBvS,GAAO2C,GAAYiQ,KAASN,GAAqBM,KAASL,GAAqBK,GAAQjQ,GAAY3C,GACvK0C,GAAa1C,EAAK,OAAO0C,GAAa1C,KAAOwS,GAAoBxS,IAAOsS,GAAqBtS,IAE7FyS,GAAUzS,GAAM2C,GAAY3C,IAAO0C,GAAa1C,EAAK,MAazD,GAXA2S,IAAqB,GACrBA,IAAqB,GAErBlQ,GAAe72B,EAAIyhC,EAAoB5K,GAAgBtS,IACvDA,GAAuBsS,GACvBE,GAAY/2B,EAAIyhC,EAAoB1K,GAAatT,IACjDA,GAAoBsT,GACpBD,GAAa92B,EAAIyhC,EAAoB3K,GAAcpT,IACnDA,GAAqBoT,GAGjBxX,EAA2BziB,GAAKyiB,EAA2BxiB,EAAG,CAC9D,IAIIwqC,GAHAC,GAA2B,GAC3BC,GAAiB,GACjBC,GAAiBzd,GAGjB+M,GAAYl6B,GAAKk6B,GAAYj6B,KAC7B0qC,GAAexoC,EAAIsgB,EAA2BxiB,GAAKi6B,GAAYj6B,EAAIk6B,GAAkBh4B,EAAIugB,EAA2BziB,EAjpDpH,GAkpDA0qC,GAAehc,EAAIlM,EAA2BziB,GAAKk6B,GAAYl6B,EAAIm6B,GAAkBxL,EAAIjM,EAA2B1iB,EAlpDpH,GAmpDA4qC,GAAiBhG,EAAoB+F,GAAgBhkB,IACrDA,GAA2BgkB,KAG3BzQ,GAAY/2B,GAAK82B,GAAa92B,GAAKg3B,GAAkBh3B,GAAKujC,IAAuBY,IAAoBG,IAAqB3N,IAAaC,IAAc8L,MACrJ+B,GApqDM,UAoqD8Bb,IAAca,GAlqD5C,UAkqDgFb,IAxpDtF,GAypDA0D,GAAuB,SAAUtB,GAC7B,IAAIC,EAAgBlS,GAAiBiS,GACjC0B,EAAwB3T,IAAkBiS,GAC1C5R,EAAK6R,EAAc5R,KACnBsT,EAAe3B,EApqDtB,SAoqDgDrC,GACzCiE,EAAmB5B,EAAapP,GAAaD,GAE7CrX,EAA2B8U,IAAO2C,GAAY3C,IAAO0C,GAAa1C,EAAK,MACvEqQ,GA7qDF,UA6qDsCkD,GAAgBC,EAAoBnF,GAjqDhF,GAiqD2HljB,EAA2B6U,GAjqDtJ,GAkqDQqQ,GA5qDF,UA4qDsCkD,GAAkB3B,GAAc4B,GAA6BnF,GAlqDzG,GAkqD0IljB,EAA2B6U,GAxBtJ,yBA2BPoT,GAAeE,EAAsBzT,MACjCwQ,GAlrDN,UAkrD0CkD,GACpClD,GAjrDN,UAirD0CkD,GAvqDhD,GAwqDQF,IAAiB,IAIrB9nB,EACAkoB,GAAe5lB,GAAkBkG,IAA8Csa,KAG/E6E,IAAqB,GACrBA,IAAqB,KAGzB7E,KACA+E,GAAexoC,EAAIwoC,GAAehc,EArrDlC,GAsrDAic,IAAiB,GAEjBA,KAAmB9nB,IACnB4nB,GAAwB,MAAczQ,GAAah6B,EAAI0qC,GAAexoC,EAzrDtE,GA0rDAuoC,GAAwB,OAAezQ,GAAaj6B,EAAI2qC,GAAehc,EA1rDvE,GA4rDKrJ,KACDA,GAAyBvZ,EAAU8yB,GA7oDjBrU,uBA8oDlBpF,GAAiBxS,QAAQ0S,KAE7BA,GAAuBlV,IAAIs6B,KAE/BrlB,GAAgBjV,IAAIw3B,IAGxB,IAEIqD,GAFAC,GAAqB,GAGzB,GAFIhD,GAAoB,IAEpB1D,GAAmBtK,GAAY/2B,GAAK82B,GAAa92B,GAAKg3B,GAAkBh3B,GAAK4iC,IAA2Ba,IAAoBf,IAAuCa,IAAuBhB,GAAqB+B,MAC/MyD,GAAmBnE,IAzsDf,IA0sDJkE,GAAiB,SAAU9B,GACvB,IAAIC,EAAgBlS,GAAiBiS,GACjC0B,EAAwB3T,IAAkBiS,GAC1C5R,EAAK6R,EAAc5R,KACnB2T,EAAK/B,EAAcgC,KACnBN,EAAe3B,EAttDlB,SAstD4CrC,GAEzClH,EAAQ,WACRsL,GAAmBJ,GAltDvB,GAmtDI7gB,GAAmB4gB,EAAsBzT,MAAQ,GAEjD8C,GAAY3C,IAAO0C,GAAa1C,EAAK,MACrC2T,GAxPM,WAwP2BC,GAntDpC,SAotDOvF,IAAgC9iB,EAChC8c,KAGAsL,GAAmBJ,KAAkBroB,EAA2B8U,GAAM7U,EAA2B6U,GAAMvU,EAAqBuU,IAC5HtN,GAAmB4gB,EAAsBzT,MAAQ3U,EAA2B8U,GAAM7U,EAA2BmoB,EAAsBrT,MAAQ,KAG/I0T,GAjQM,WAiQ2BC,GA/tDrC,GAguDIvL,QAGO,GACfqL,IAAe,IAOVnoB,IACGsH,GAAcuE,EAAItE,GAAwBrqB,GAAKoqB,GAAcjoB,EAAIkoB,GAAwBpqB,KACxFi6B,GAAYl6B,GAAKi6B,GAAaj6B,IAAMyiB,EAA2BziB,GAAOk6B,GAAYj6B,GAAKg6B,GAAah6B,IAAMwiB,EAA2BxiB,IAC1IirC,GAAmBG,eAA8BhhB,GAAwBrqB,EACzEkrC,GAAmBI,eAA8BjhB,GAAwBrqB,EAEzEkrC,GA5vDO,WA4vD+BnE,IAAc1c,GAAwBpqB,EAC5EirC,GA9vDM,UA8vD+BnE,KAAe1c,GAAwBpqB,GAG5EirC,GAAmBG,eACfH,GAAmBI,cACnBJ,GAlwDG,WAkwDmCnE,IACtCmE,GApwDE,UAowDmCnE,IAxvDzC,GA0vDJmE,GArwDW,WAqwD2BpE,IAClCoE,GAvwDM,UAuwD+BpE,IA3vDrC,GA8vDC5M,GAAYl6B,GAAKi6B,GAAaj6B,GAAOk6B,GAAYj6B,GAAKg6B,GAAah6B,GAAM0pC,GAEtEnmB,GAAemmB,KACfzB,GAlSOqD,cAmSHrD,GAlSGqD,cACH,YAqSHvzB,GAAe8xB,GAAqB9pC,GAAK6pC,GAAqB7pC,GAAK8pC,GAAqB7pC,GAAK4pC,GAAqB5pC,KAE/GujB,IACA0kB,GA1SGqD,cA2SCrD,GA1SDqD,cAh+CX,IA4wDIL,GA7SOK,cA8SHL,GA7SGK,cAEF,WA+SbpmB,GAAgB/U,IAAI83B,IACpB9iB,GAAiBhV,IAAI86B,IACrBA,GAAqB,IAGhBhR,GAAY/2B,GAAKyjC,IAAoBU,IAAoBG,OAAwBhlB,EAA2BziB,IAAKyiB,EAA2BxiB,IAAI,CACjJ,IAAIurC,GAAehlB,GAAsBtjB,EAAQ9M,GAEjDo1C,GAAaC,gBAAkB,WAC/BD,GAAap2B,QAAU,SAChBoR,GAAsBtjB,EAAQG,IACrCmoC,GAAap2B,QA5xDb,GA6xDAo2B,GAAaC,gBA7xDb,GA4yDR,GADA7D,GAAoB,GAChBlB,IAAuBY,IAAoBG,GAC3C,GAAIrjB,IAAU0V,GAAW,CACrB,IAAI4R,GAAWrmB,GAAgBjV,IA/yD/B,SAgzDIu7B,GAAsB1iC,EAAKpQ,MAAMwsB,GAAgBjV,IAhzDrD,QACA,IA+yD+EA,IArzDhF,OAMC,IA+yDwG8F,WAAWD,MACnHoP,GAAgBjV,IAjzDhB,QAizD+Bs7B,IAG3BC,KAFmB1iC,EAAKpQ,MAAMwsB,GAAgBnP,WAAWD,QAGzD2xB,GAAiB,KAAa+D,SAGlC/D,GAAiB,KAvzDjB,GA6zDR,GAHAviB,GAAgBjV,IAAIw3B,IAGhBpkB,GAAeihB,EAAoB,CACnC,IAAImH,GAyzChB,WAEI,IAAIC,EAAyB3lB,GAAqB4lB,eAClD,GAAID,IAA2Bx2C,EAA/B,CAGA,IASI02C,EACAl3C,EAVAm3C,EAAgBjnB,GAAe/sB,MAC/Bi0C,EAAiBD,EAAc9oC,EAAQ/C,GACvC+rC,EAAmBF,EAAc5mC,MAAM,MACvC+mC,EAAkBD,EAAiBhpC,EAAQ/C,GAC3CisC,EAAgCJ,EAAchX,OAAO,EAAG6W,GAAwBzmC,MAAM,MACtFinC,EAAY,EACZC,EAAkB,EAClBC,EAAYH,EAA8BlpC,EAAQ/C,GAClDqsC,EAAYJ,EAA8BA,EAA8BlpC,EAAQ/C,GAAK,GAAG+C,EAAQ/C,GAKpG,IAAKtL,EAAI,EAAGA,EAAIq3C,EAAiBhpC,EAAQ/C,GAAItL,KACzCk3C,EAAUG,EAAiBr3C,GAAGqO,EAAQ/C,IACxBmsC,IACVD,EAAYx3C,EAAI,EAChBy3C,EAAkBP,GAI1B,MAAO,CACHU,WAAYF,EACZG,cAAeF,EACfG,MAAOR,EACPS,SAAUN,EACVO,WAAYR,EACZS,gBAAiBjB,EACjBkB,WAAYd,IA31CWe,GACnB,GAAIpB,GAAc,CACd,IAAIqB,GAAsBxkB,KAAuBpzB,GAAmBu2C,GAAae,QAAUlkB,GAAmBkkB,MAC1GJ,GAAYX,GAAaa,WACzBD,GAAYZ,GAAac,cACzBL,GAAYT,GAAaiB,WACzBK,GAAUtB,GAAae,MACvBQ,GAAUvB,GAAagB,SAGvBQ,GAFYxB,GAAakB,iBACblB,GAAamB,YACyB5jB,GAClDkkB,GAAuB,CACvBrtC,EAAKumC,IAAyBiG,KAAcW,IAAWZ,KAAcF,IAAwC,EAA1B3kB,GAAqB1nB,EACxGC,GAAIsmC,GAAuB6G,IAAwBH,IAAwBrD,IAA0BlV,EAAWz0B,IAAM2pC,GAAuB3pC,GAAemtC,IAAwBH,KAAwBV,KAAcW,IAAWxlB,GAAqBznB,GAAK,GAEnQy0B,EAAW10B,EAAIqtC,GAAqBrtC,GAAK,EAAKokB,IAAUiE,IAAsB1F,EAAmB9tB,EAAI,EAAIw4C,GAAqBrtC,EAAK00B,EAAW10B,EAC9I00B,EAAWz0B,EAAIotC,GAAqBptC,GAAK,EAAIotC,GAAqBptC,EAAIy0B,EAAWz0B,EAErFwoB,GAAqBmjB,GAErBxnB,IAAUzB,EAAmB9tB,GAAK4tB,EAA2BxiB,GAAKi6B,GAAYl6B,GAAKqoB,KACnFqM,EAAW10B,GAAKiqB,GAAmB9nB,GAAK,GACxC23B,IACA9U,GAAY,WAAiB,GAC7B+U,IACA/U,GAAY,UAAgB,GAChCI,GAAgB,WAAiBsP,EAAW10B,GAA5C,UAA8D00B,EAAWz0B,GAGzE,IAAIqtC,GAAuD,MAAzBvI,EAC9BwI,GAAsD,MAAzBxI,EAC7ByI,GAAoD,MAAzBzI,EAC3B0I,GAA8B,SAAUC,EAAOC,GAC/CA,EAAQA,IAAUt4C,EAAYq4C,EAAQC,EACtCC,IAA2B,EAAMF,EAAO1D,GAAUhqC,GAClD4tC,IAA2B,EAAOD,EAAO3D,GAAU/pC,IAIvD+qC,GAAehmB,GAAciG,GAAwBgP,GAAaj6B,GAAKi6B,GAAah6B,GACpF+qC,GAAehmB,GAAckG,GAAyB+O,GAAaj6B,GACnEgrC,GAAehmB,GAAcmG,GAAyB8O,GAAah6B,GAG/DymC,KAAwBjjB,GACxBunB,GAAehmB,GAAc8F,GAAmB1G,IAIhDX,GACA/O,GAASsQ,GAAc+F,IACvBya,IACAwF,GAAehmB,GAAc+F,GAA8BlB,IAC3DmhB,GAAevlB,GAAyBwG,IAAkCpC,IAC1EmhB,GAAevlB,GAAyB0G,GAAkCrC,IAC1EkhB,GAAevlB,GAAyB2G,GAAkCrC,IAC1EihB,GAAevlB,GAAyB4G,GAAkCrC,MAI1Egb,GAA+Be,IAA2B9L,GAAa92B,GAAK+2B,GAAY/2B,GAAK0iC,MACzFD,GACIC,KACA3wB,GAAY8P,GAAcgG,IACtB4a,IACA6H,IAA4B,IAI/BD,GACLC,GAA4BzD,GAAUhqC,EAAGgqC,GAAU/pC,GAE9CqtC,GACLG,IAA4B,GAEvBF,IACLE,IAA4B,KAKhCvI,GAA6BW,MAC7B9V,IAA2BrG,KAA6BD,IACxD+Y,GAA0BjZ,IAA2BA,MAIrDib,GAAmBxK,GAAe72B,GAAKskC,IAAqBH,IAAoB9B,GAAiBoB,IAAoBnB,GAA0BI,IAAuCa,MACtLmH,IAA6B,GAC7Bla,IAA6B,GAC7Bka,IAA6B,GAC7Bla,IAA6B,IAI7ByR,GACA0I,IAA6B,EAAM3I,GACnCG,GACAwI,IAA6B,EAAOzI,GAGxCjV,GAAiB,qBAAsB,CACnCuB,MAAOvN,GACP2a,IAAK0H,IACNC,IACHtW,GAAiB,oBAAqB,CAClCyG,MAAOpQ,GAAetkB,EACtB20B,OAAQrQ,GAAekI,GACxB6V,GACHpU,GAAiB,uBAAwB,CACrCyG,MAAOnQ,GAAwBvkB,EAC/B20B,OAAQpQ,GAAwBiI,GACjC8V,GACHrU,GAAiB,oBAAqB,CAClCpwB,EAAGk6B,GAAYl6B,EACfC,EAAGi6B,GAAYj6B,EACf8tC,YAAa9T,GAAa4O,GAC1BmF,YAAa/T,GAAa0O,GAC1BsF,QAAShU,GAAaj6B,GAAKi6B,GAAah6B,GACzCi6B,GAAY/2B,GAAK82B,GAAa92B,GACjCitB,GAAiB,0BAA2B,CACxCpwB,EAAGg6B,GAAeh6B,EAClBC,EAAG+5B,GAAe/5B,GACnB+5B,GAAe72B,GAIlBsgB,GAAWoF,KAAsBjC,GAAkBzjB,GAAK0lB,GAAkB1lB,KAErE0lB,GAAkBtyB,GACnBq4B,KACAnM,EAA2BxiB,GAAK2mB,GAAkB5mB,GAClDqlB,GAAgBjV,IAAI2yB,YAA0Bla,GAAkB1mB,EAAIugB,EAA2BziB,GAC/FwiB,EAA2BziB,GAAK4mB,GAAkB3mB,GAClDolB,GAAgBjV,IAAI2yB,aAA2Bla,GAAkB8F,EAAIjM,EAA2B1iB,GACpG6oB,GAAkB1lB,GAAI,GAGtBmgB,GAAgBohB,EAAersB,cAC/B8W,KAMJiB,GAAiB,YAAa,CAAE8d,OAAQ/gB,KAM5C,SAASgC,KACA3L,GACDof,IAAiB,SAAU/tC,EAAGguC,GAC1Bxd,GAAgB7O,KAAKqsB,GAAsB50B,MAAK,SAAUpZ,EAAG+Z,GAErDlJ,EAAckD,IAAIgG,EAAIie,IAAqB,IAC3CA,GAAkBn3B,KAAKkZ,GACvB7C,EAAU6C,GACLqD,IAr3DI,OAq3DwBke,IAC5Bze,GAt3DI,OAs3DuBye,WAcpD,SAASV,GAAWL,GAChB,IAAI+e,EAAgB32B,EAAgBgD,UAAU4U,EAAY5X,EAAgB+C,WAAW,EAAMgK,IAK3F,OAHAA,GAAkBmV,GAAW,GAAInV,GAAiB4pB,EAAc3xB,UAChEgI,GAA0BkV,GAAW,GAAIlV,GAAyB2pB,EAAc1xB,WAEzE0xB,EAAc1xB,UAczB,SAASyT,GAAkBR,GACvB,IAEI0e,EAA+BhjB,GA3/DvB,IA2/D+DK,GACvE4iB,EAAgB7qB,EA5/DR,IA4/DkCiI,GApgElC,GAqgER6iB,EAAa9pB,GAAwBtL,SAASG,eAC9Ck1B,EAAgB,GAChBC,EAAoB,WACpB,IAAIC,EAAuB/e,EAAU3K,GAAiBC,GACtD/W,EAAKsgC,GAAe,SAAUzgC,EAAKnY,GAC3BqT,EAAKrT,IAAUsN,IACX6K,GAAO5K,EAAQC,EACfsrC,EAAqB/5B,SAAS/e,GAE9B84C,EAAqBn5B,KAAKxH,EAAKnY,QAI3C+4C,EAAwB,CACxBnkB,GACAE,GACAC,GACAK,GACAD,GACAH,GACAC,GACAC,GACAG,GACAC,GACAC,GACAC,GACAoB,GACAnB,GACAK,GACAnD,IAAiBprB,KA1hET,KA2hERw/B,EAAiB,GAGrB1X,GAAeA,KAAiBxB,EAAeG,EAAaoB,GAAc,SAAd,2BAAqEhZ,EAAU8yB,GAAYnU,KAAmC3F,IAC1LM,GAAkBA,IAAmBspB,GAx/DVnkB,aAw/DgE6jB,GAC3FjpB,GAAmBA,IAAoBupB,GA5/DXnkB,cA4/DkE6jB,GAC9FlpB,GAAkBA,IAAmBwpB,GA9/DVnkB,aA8/DgE6jB,GAC3FnpB,GAAuBA,IAAwBypB,GAxCb,2BAyClCnpB,GAAwBA,KAA0BhC,EAAcmrB,GAA2BtjB,IAAkCh2B,GAGzHsuB,GACAjP,GAASsQ,GAAcyF,IAIvBiF,GACAxa,GAAY8P,GAAc0pB,GAG9BJ,EAAatlC,EAAKslC,IAAerrC,EAAUqrC,EAAWlpC,MA/iE1C,KA+iE6DkpC,EACrE5oC,EAAcoD,IAAIwlC,IAAe9qB,GACjCvV,EAAKqgC,GAAY,SAAUz5C,EAAG+N,GACtBoG,EAAKpG,IAAMK,IACXsrC,EAAc3rC,GAAK8sB,EAAU1K,GAAa1P,KAAK1S,GAAKmiB,GAAezP,KAAK1S,OAK/E8sB,GAmDG/L,GAAcL,GAEd4B,GAAqBzT,WAAWsB,SAGhC9E,EAAK,CAACkX,GAAiBC,GAAkBC,GAAiBG,KAAwB,SAAU3wB,EAAG8tC,GACvFA,GACAztB,GAAYytB,EAAIjtB,WAAWxS,EAAQ9M,GAAIo2B,OAK/C9X,GAASsQ,GAAcxB,EAAckH,GAAgCH,MAIrExX,GAAOmS,IAGPG,GAAgBvR,WACXb,SACAA,SACAA,SAEDuQ,IACAuB,GAAe9R,SACfF,GAAOiS,IACPjS,GAAOyS,IACPgpB,MAIJhrB,GACAuB,GAAerP,WAAWxS,EAAQ9M,GAElCqtB,GACAvO,GAAY2P,GA5nEI2F,aAsiEhBhH,IACKgB,GAAwBzM,kBACzB2kB,EAAc,MAAc3X,GAAe3U,IAtkE3C,SAukEAssB,EAAc,OAAe3X,GAAe3U,IAtkE3C,WAykEAuT,GACDoB,GAAerQ,SAAS+W,IAAuBvxB,KAAK8qB,IAGxDA,GAAeD,GAAc,SAAc3U,IAAIssB,IAG9C/Y,IAEDjP,GAASqQ,GAAgBvB,EAAc4qB,EAA+B7jB,IAGtEvF,GAAanR,UAAUwR,IAClBxR,UAAUuR,IACVvR,UAAUsR,IACVvS,QAAQsS,IAGbG,GAAkBuW,GAAU5W,GAAc6W,eAC1CzW,GAAmBwW,GAAU5W,GAAc6W,gBAC3C1W,GAAkByW,GAAU5W,GAAc6W,eAEtCrY,IACA6B,GAAgBzS,QAAQ4S,IACxBgpB,MAIJ1rB,GACApO,GAAS0Q,GAAkBkG,IAC3B7I,EAA2BziB,GAAKyiB,EAA2BxiB,GAC3DyU,GAAS0Q,GAAkBoG,IAC3B/H,GACA/O,GAASmQ,GA7kEO2F,WA+kEpBnE,GAA6BnB,GAAqB,GAClDiB,GAAqBnB,GAAa,GAClCsB,GAAwBnB,GAAgB,GACxCoB,GAAyBnB,GAAiB,GAC1CoB,GAAwBnB,GAAgB,GAExC4I,MA+CR,SAAS8N,KACL,IAOI6S,EACAC,EARAC,EAAoC,CACpC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClD,GAAI,GACJ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpBC,EAA8B,GAMlC,SAASC,EAAeC,GACpBrN,KACA9kB,EAAM6D,OA7qEC,QA8qEHsuB,GAAmBrsB,GACnBssB,cAAcN,GAiGlBprB,GACIX,EAAe,IAAMD,EACrBua,GAAwBpY,GAAgB,QAASiqB,GAGjD7R,GAAwBpY,GACpB,CApwEO,UACF,SAowEL,CA/EZ,SAA2B1d,GACvB,IAAI8nC,EAAU9nC,EAAM8nC,QAEhBzhC,EAAQyhC,EAASL,GAAqC,IACjDC,EAA4B7rC,EAAQ/C,KACrC6uC,IACAJ,EAA2BQ,YAAYJ,EAAgB,IAAO,KAE9DthC,EAAQyhC,EAASJ,GAA+B,GAChDA,EAA4Br5C,KAAKy5C,KAG7C,SAAyB9nC,GACrB,IAAI8nC,EAAU9nC,EAAM8nC,QAChB7/B,EAAQ5B,EAAQyhC,EAASJ,GAEzBrhC,EAAQyhC,EAASL,GAAqC,IAClDx/B,GAAS,GACTy/B,EAA4B10C,OAAOiV,EAAO,GACzCy/B,EAA4B7rC,EAAQ/C,IACrC6uC,GAAe,OA8DvB7R,GAAwBpY,GACpB,CAzxEK,SAyxEQ,OAlHN,QAkHwBsqB,YAC/B,CA3GR,SAA0BhoC,GAKtB,OAJA0d,GAAc,WAAiBpC,EAAmB9tB,GAAKwzB,GAAqB,QAAU,GACtFtD,GAAc,UAAgB,GAC9Brf,EAAc8B,KAAKH,GACnB3B,EAAc0B,KAAKC,IACZ,GAEX,SAAwBA,GACpBR,YAAW,WACF0c,GACDyrB,MACL,KAEP,WACI7lB,IAAoB,EACpBzU,GAASsQ,GAvBE,UAyBf,WACImE,IAAoB,EACpB4lB,EAA8B,GAC9B75B,GAAY8P,GA5BD,SA6BXgqB,GAAe,OAyFf7R,GAAwB9X,GAAiBiF,IAhE7C,SAAgCjjB,IACH,IAArBugB,IAx1CZ,SAAoC0nB,GAChC,IAAKhsB,EACD,OAAO,EACX,IAGIisB,EAAkB,CAl5BV,QAo5BRxM,YACAyF,YACA8C,cACAA,eA15BO,OAFC,QA+5BR,cACA,eAZW,YACE,cACD,cAeZkE,EAA4B,CAC5BnE,eACAA,gBACAoE,mBACAA,qBAEAC,EAAkB,CAr6BT,SAu6BT3M,aACAyF,aACA8C,aACAA,gBAj7BM,MAEG,SAk7BT,cA/BW,YACE,cACD,cAkCZqE,EAA4B,CAC5BtE,cACAA,iBACAoE,kBACAA,sBAIAG,EAFQ,MAECnoB,GAAuBznB,GADvB,QACsCynB,GAAuBznB,EAEtE6vC,GAAiB,EACjBC,EAAoB,SAAUp7C,EAAKuC,GACnC,IAAK,IAAIpC,EAAI,EAAGA,EAAIH,EAAIwO,EAAQ/C,GAAItL,IAChC,GAAIH,EAAIG,KAAOoC,EACX,OAAO,EAEf,OAAO,GAaX,OAvBY,MAGCwwB,GAAuBxnB,GAFvB,QAEsCwnB,GAAuBxnB,MAWtE4vC,EAAiBC,EAAkBJ,EAAiBJ,KAC5B1rB,IACpBisB,EAAiBC,EAAkBH,EAA2BL,KAElEM,IAAWC,KACXA,EAAiBC,EAAkBP,EAAiBD,KAC5B1rB,IACpBisB,EAAiBC,EAAkBN,EAA2BF,KAE/DO,EAuxCCE,EADJ1oC,EAAQA,EAAMS,eAAiBT,GACMioC,eACjCxyB,EAAM6D,OApuEH,WAiyEXwc,GAAwB/X,GA/xEX,UAouEb,SAA0B/d,GACjBgd,KACGwqB,IAAwBx5C,EACxB2R,aAAa6nC,KAETrlB,IAA6BC,KAC7B+Y,IAA0B,GAEzBwN,MACDt7B,GAASsQ,GAAcgG,IAE3BoF,GAAiB,gBAAiB/oB,IAMjCuiB,KACD+J,IAA6B,GAC7BA,IAA6B,IAEjCvD,GAAiB,WAAY/oB,GAE7BwnC,EAAsBhoC,YAAW,WACxB0c,IAEDvc,aAAa6nC,GACbA,EAAsBx5C,GAElBm0B,IAA6BC,KAC7B+Y,IAA0B,GAEzBwN,MACD96B,GAAY8P,GAAcgG,IAE9BoF,GAAiB,eAAgB/oB,MAjG3B,SAyHkD,GAU5E,SAAS2oB,GAAmBN,GACxB,IAgCIugB,EACAC,EAjCAC,EAA+B,SAAUC,GACzC,IACInX,EAAY0V,GAA2B5iB,iBADlBqkB,EA3uEGrkB,0BACFA,0BA2uEuE,GAC7FmN,EAAQyV,GAxvEW5iB,qBAwvE0CkN,GAC7DE,EAASwV,GAvvEW5iB,sBAuvE2CkN,GAOnE,OALKtV,GAAe+L,IAChBuJ,EAAUtmB,OAAOumB,GACjBA,EAAMvmB,OAAOwmB,IAGV,CACHkX,WAAYpX,EACZqX,OAAQpX,EACRqX,QAASpX,IAGjB,SAASqX,EAAkBJ,GACvB,IAAIhH,EAAgBlS,GAAiBkZ,GACjCnX,EAAYmQ,EAAciH,WAC1BnX,EAAQkQ,EAAckH,OACtBnX,EAASiQ,EAAcmH,QAEvB5sB,GAAcL,EACdrV,EAAK,CAACgrB,EAAWC,EAAOC,IAAS,SAAUtkC,EAAG8tC,GAC1CztB,GAAYytB,EAAIjtB,WAAWxS,EAAQ9M,GAAIo2B,OAI3CzZ,GAAOkmB,GAAakX,EAA6BC,GAAcC,YAMlE3gB,GAiBD8gB,GAAkB,GAClBA,MAjBAP,EAAqBE,GAA6B,GAClDD,EAAmBC,IAEnBzqB,GAA8BuqB,EAAmBI,WACjD1qB,GAAmCsqB,EAAmBK,OACtD1qB,GAAoCqqB,EAAmBM,QACvD1qB,GAA4BqqB,EAAiBG,WAC7CvqB,GAAiCoqB,EAAiBI,OAClDvqB,GAAkCmqB,EAAiBK,QAE9C5sB,IACDwB,GAAgBrS,MAAM+S,IACtBV,GAAgBrS,MAAM4S,MAalC,SAASsW,GAAqBoU,GAC1B,IAWIK,EACAC,EACAC,EACAtU,EAdA+M,EAAgBlS,GAAiBkZ,GACjCQ,EAAoBxH,EAAcyH,MAClC3U,EAAelW,GAAqBhQ,MAAQgQ,GAC5CuR,EAAK6R,EAAc5R,KACnB2T,EAAK/B,EAAcgC,KACnB/a,EA72ES,SA62Ea+Y,EAAckB,UAIpCwG,EAAuB,EACvBC,EAAuC,CAAC,GAAI,IAMhD,SAASC,EAAmB3pC,GACxB,OAAOwb,GAAgBqZ,EAAe70B,EAAM,SAAW8jC,GAAMzlC,EAAckC,KAAKP,GAAOkwB,GAE3F,SAAS0Z,EAA4Bh6C,GACjC,OAAOutB,GAAwB9L,WAAWzhB,GAE9C,SAASi6C,IACLJ,EAAuB,GAE3B,SAASK,IACLL,EAAuB,EAE3B,SAASM,EAA0B/pC,GAC/B3B,EAAc0B,KAAKC,GAEvB,SAASgqC,EAAgBhqC,GACjBqG,EAAQrG,EAAM8nC,QAAS4B,IAAyC,GAChEG,IAER,SAASI,EAAcjqC,GACfqG,EAAQrG,EAAM8nC,QAAS4B,IAAyC,GAChEI,IAER,SAAS5U,EAAyBl1B,GAC9B,IACI21B,GADgB31B,EAAMS,eAAiBT,GACVc,UAAY9S,EAC7C,QAAOgvB,IAAad,GAAcysB,OAAuC7nB,IAAkC6U,IAAiBiU,EAA4B,mBAAyD,IAA9BvrC,EAAc+C,KAAKpB,IAAgB21B,GAE1N,SAASV,EAAiBj1B,GACtB,GAAIk1B,EAAyBl1B,GAAQ,CACjC,IAAIkqB,EAAcqf,EAAkBpf,aAChCL,EAAeyf,EAAkBxf,cAIjCmgB,EAHcX,EAAkB5f,aACnBggB,EAAmB3pC,GAASspC,GAAmBtU,GAC1B9K,EAAcJ,IAEpDogB,EAAcC,SAASD,GAAeA,EAAc,EAChDntB,IAAUgsB,IAAiBztB,EAAmB9tB,IAC9C08C,IAAgB,GAEpBnsB,GAAiBiL,GAAQpnB,EAAKpQ,MAAM63C,EAAkBa,IAElD3nB,IACA+J,GAA6Byc,EAAcM,EAAkBa,GAE5DpuB,GACDzd,EAAc8B,KAAKH,QAGvBs1B,EAAqBt1B,GAE7B,SAASs1B,EAAqBt1B,GAiC1B,GAhCAA,EAAQA,GAASA,EAAMS,cAEvBg0B,GAA6BlX,GACzB,CAl6EkB,sBADF,+BAIL,UACF,QACM,eA85Ef,CAAC0X,EAAkBK,EAAsB0U,EAAiBC,EAAezU,KACzE,GACJn3B,EAAckB,KAAdlB,EAAoB,WAChBo2B,GAA6BlX,GAnEjB,QAmEkDwsB,GAA2B,EAAM,CAAE5S,UAAU,OAI3G5U,IACA+J,GAA6Byc,GAAc,GAE/CxmB,IAAoC,EACpC1U,GAAY4P,GAAcwH,IAC1BpX,GAAYk0B,EAAcmH,QA9Ed,UA+EZr7B,GAAYk0B,EAAckH,OA/Ed,UAgFZp7B,GAAYk0B,EAAciH,WAhFd,UAkFZK,EAAkBr7C,EAClBs7C,EAAkBt7C,EAClBgnC,EAAyB,EAEzB8U,IAEIV,IAAiBp7C,IACjBynB,EAAMwb,aACNtxB,aAAaypC,GACbA,EAAep7C,GAGfgS,EAAO,CACP,IAAIwO,EAAOsQ,GAAmBjjB,EAAQU,OAChByD,EAAMoqC,SAAW57B,EAAKI,MAAQ5O,EAAMoqC,SAAW57B,EAAKqxB,OAAS7/B,EAAMqqC,SAAW77B,EAAKG,KAAO3O,EAAMqqC,SAAW77B,EAAK2xB,QAIlI/E,MAEAjZ,IAA6BC,KAC7B+Y,IAA0B,IAOtC,SAASmP,EAA6BtqC,GAClCqpC,EAAkBtrB,GAAiBiL,KACnCqgB,EAAkB33C,MAAM23C,GAAmB,EAAIA,GAC3CtsB,IAAUgsB,IAAiBztB,EAAmBtsB,IAAM+tB,MACpDssB,EAAkBA,EAAkB,EAAI,EAAIA,GAEhDrU,EAAyBe,KAA8B7F,GACvDoZ,EAAkBK,EAAmB3pC,GAErCuiB,IAAqCqnB,EAtHrB,cAuHhBv8B,GAASoQ,GAAcwH,IACvB5X,GAAS00B,EAAcmH,QAzHX,UA0HZ77B,GAAS00B,EAAciH,WA1HX,UA4HZvU,GAA6BlX,GACzB,CA99EkB,sBADF,+BAMD,eA09Ef,CAAC0X,EAAkBK,EAAsBE,KAC7Cn3B,EAAckB,KAAdlB,EAAoB,WAChBo2B,GAA6BlX,GA9HjB,QA8HkDwsB,GAA2B,EAAO,CAAE5S,UAAU,QAI5G3b,GAAiBa,GACjBhe,EAAc8B,KAAKH,GACvB3B,EAAc0B,KAAKC,GAoIvB81B,GAAwBiM,EAAcmH,QA7mFZ,wBA68E1B,SAAgClpC,GACxBk1B,EAAyBl1B,IACzBsqC,EAA6BtqC,MAiKrC81B,GAAwBiM,EAAckH,OAClC,CAjnFsB,uBAGT,aACA,cA8mFb,CAvIJ,SAA+BjpC,GAC3B,GAAIk1B,EAAyBl1B,GAAQ,CACjC,IAUIuqC,EAVAC,EAAwBzI,EAAcyH,MAAMzf,cAAgB15B,KAAKmB,MAAMoQ,EAAKzR,IAAI,EAAG4yB,GAAcgf,EAAchS,MAAQ1Q,GAAwB0iB,EAAchS,OAASgS,EAAcyH,MAAMrf,cAC1LsgB,EAAiB7oC,EAAKpQ,MAAMuxB,GAAcgf,EAAchS,MAAQya,GAChEE,EAAqB,IAAMF,EAC3BG,EAA4B,IAAMH,EAClCI,EAAc7I,EAAckH,OAAO16B,SAASwzB,EAAc9R,WAC1D4a,EAAU7qC,EAAM6qC,QAChBC,EAAgB9qC,EAAM+qC,SACtBC,EAA0BF,GAAiBD,EAC3CI,GAAmB,EAInBC,EAAwB,SAAUC,GAC9B5oB,IACA+J,GAA6Byc,EAAcoC,IAE/CC,EAA8B,WAC9BF,IACAZ,EAA6BtqC,IA2E7B6qC,GACAhB,IAEJ7U,EAAyBe,KAA8B7F,GACvDoZ,EAAkBjrC,EAAckC,KAAKP,GAAOkwB,GAE5C3N,IAAqCqnB,EA5OzB,cA6OZv8B,GAASoQ,GAAcwH,IACvB5X,GAAS00B,EAAckH,OA/Of,UAgPR57B,GAAS00B,EAAciH,WAhPf,UAkPRvU,GAA6BlX,GACzB,CArlFY,+BAIL,UACF,QACM,eAglFX,CAAC+X,EAAsB0U,EAAiBC,EAAezU,KAtFxC,SAAf6V,IACA,IAAKnvB,EAAY,CACb,IAAIovB,GAAehC,EAAkBsB,GAAe5V,EAChDpL,EAAe2f,EAAkB1f,cACjCK,EAAcqf,EAAkBpf,aAChCL,EAAeyf,EAAkBxf,cACjCwhB,EAAchC,EAAkB5f,WAChC0D,EAAakc,EAAkBhgB,eAC/BiiB,EAAiBd,EAAqBjB,EACtCgC,EAAeR,EAAmBrpC,EAAKxR,IAAIu6C,EAA2Ba,GAAkBA,EACxFE,EAAwBH,IAAgBD,EAAexhB,EAAe,IAAOI,EAAcJ,IAC3F6hB,EAAc5uB,IAAUgsB,KAAmBztB,EAAmB9tB,IAAM8tB,EAAmBtsB,GAAMgyB,IAC7F4qB,EAA0BD,EAAc/hB,EAAe0hB,EAAc1hB,EAAe0hB,EACpFO,EAAY,GACZC,EAAe,CACfvjC,OA1BC,SA2BDjZ,KAAM,SAAUsQ,GACR2iB,KACAxE,GAAiBiL,GAAQppB,GACzB0sB,GAA6Byc,EAAcnpC,MAIvD8rC,EAAwBvB,SAASuB,GAAyBA,EAAwB,EAClFA,EAAwB3uB,IAAUgsB,IAAiBztB,EAAmB9tB,EAAK+9C,EAAcG,EAAyBA,EAI9GZ,GACA/sB,GAAiBiL,GAAQ0iB,GACrBV,GAGAU,EAAwB3tB,GAAiBiL,KAEzCjL,GAAiBiL,GAAQqE,GAEzBqe,EAAwBC,GAAerwB,EAAmB9tB,EAAK+9C,EAAcG,EAAyBA,EACtGA,EAAwBC,GAAerwB,EAAmBtsB,GAAK08C,EAAwBA,EAEvFG,EAAU3b,GAAMwb,EAChBj2B,EAAMuT,OAAO6iB,EAAWxZ,GAAWyZ,EAAc,CAC7CxjC,SAAU,IACVE,SAAU4iC,MAIdA,MAGJb,EAAiBU,EAAmBW,EAA0BrB,GAC1CoB,EACbpB,EAAiB3gB,EAAeE,GAAgBwhB,EAAc1hB,GAAgB0hB,EAC9Ef,EAAiB3gB,GAAgB0hB,EAAc1hB,EAAeE,GAAgBwhB,IAGjF3rC,aAAaypC,GACb3zB,EAAMwb,aACNmY,EAAep7C,EACfk9C,GAAsB,KAGtB9B,EAAe5pC,WAAW6rC,EAAcI,GAExCI,EAAU3b,IAAOqa,EAAiB,KAAO,MAAQE,EACjDh1B,EAAMuT,OAAO6iB,EAAWxZ,GAAWyZ,EAAc,CAC7CxjC,SAAUkjC,MAGlBP,GAAmB,IAmB/BI,GACAhtC,EAAc8B,KAAKH,GACnB3B,EAAc0B,KAAKC,KAG3B,SAAgCA,GAE5BsiB,IAA2B,GACvBH,IAA6BC,KAC7B+Y,IAA0B,IAElC,SAAgCn7B,GAC5BsiB,IAA2B,GACvBH,IAA6BC,KAC7B+Y,IAA0B,MAYlCrF,GAAwBiM,EAAciH,WAnnFZ,wBAymF1B,SAAmChpC,GAC/B3B,EAAc0B,KAAKC,MAanB4b,GACAka,GAAwBiM,EAAciH,WAAY/lB,IAAwB,SAAUjjB,GAC5EA,EAAMU,SAAWqhC,EAAciH,WAAW,KAE9CxC,GAA6BuC,GAC7Bzc,GAA6Byc,OAWzC,SAASxC,GAA2BwC,EAAcgD,EAAgBpJ,GAC9D,IACIqJ,EAAmBjD,EAAe1qB,GAA8BG,GAEpEmlB,GAAehmB,GAHgBorB,EAAezlB,GAA0CC,IAGhCwoB,GACxDpI,GAAeqI,EAAkBvnB,IAA8Bke,GAQnE,SAASxH,GAA0B4Q,EAAgBE,GAE/C,GADAtsC,aAAaoiB,IACTgqB,EAEAl+B,GAAYwQ,GAA6BsG,IAEzC9W,GAAY2Q,GAA2BmG,QAEtC,CACD,IAAIunB,EAEAp+B,EAAO,WACFwU,IAA6BpG,MAC9BgwB,EAAY3tB,GAAkCvR,SAHtC,WAG6D0R,GAAgC1R,SAH7F,aAIWmV,IAA6BC,IAA2BC,KACvEhV,GAASgR,GAA6BsG,KACrCunB,IAAc/pB,IAA6BC,IAA2BC,KACvEhV,GAASmR,GAA2BmG,MAG5C1C,GAA2B,IAAmB,IAAdgqB,EAChClqB,GAA+BviB,WAAWsO,EAAMmU,IAEhDnU,KAQZ,SAAS04B,GAA6BuC,GAClC,IAAIoD,EAAY,GACZpK,EAAgBlS,GAAiBkZ,GACjCQ,EAAoBxH,EAAcyH,MAGlC4C,EAAcxqC,EAAKzR,IAAI,EAAG4yB,GAAcgf,EAAchS,MAAQ1Q,GAAwB0iB,EAAchS,OACxGoc,EAAUpK,EAAcE,eAAkBrgC,EAAKyqC,MAAoB,IAAdD,EAHzC,SAG+E,IAEtFzD,MACD5G,EAAcmH,QAAQngC,IAAIojC,GAG9B5C,EAAkBxf,cAAgBgY,EAAcmH,QAAQ,GAAG,SAAWnH,EAAcuK,eACpF/C,EAAkBtf,mBAAqBmiB,EAQ3C,SAAS9f,GAA6Byc,EAAcwD,GAChD,IAgBIC,EACAC,EAjBAtB,EAAaxpC,EAAK4qC,IAAuB3wC,EAEzC8wC,EAAoB3vB,IAAUgsB,EAC9BhH,EAAgBlS,GAAiBkZ,GACjCQ,EAAoBxH,EAAcyH,MAElCmD,EAAenwC,EAAQS,aAAa,aACpC2vC,EAAgBpwC,EAAQS,aAAa,cACrC4vC,EAAe9D,EAAehrB,GAAgB,aAAqBA,GAAgB,YACnF+uB,EAAgBP,IAAuBv+C,GAAam9C,EAAa0B,EAAeN,EAGhFziB,EAAeyf,EAAkBxf,cACjCG,EAAc6X,EAAckH,OAAO,GAAG,SAAWlH,EAAcuK,eAC/DS,EAAkB7iB,EAAcJ,EAChCqiB,EAAY,GAOZ7e,GAAapO,GA3uFJ,SA2uFwC6iB,EAAcuK,eAAiBptB,GAAuB,SAAW6iB,EAAcuK,iBAAmBhxB,EAAmBtsB,GAAK09C,GAAqB,EAAI,GACpMM,EAAiB,SAAU/iC,GAC3B,OAAOvY,MAAMuY,EAAOqjB,GAAa,EAAI1rB,EAAKxR,IAAI,EAAGwR,EAAKzR,IAAI,EAAG8Z,EAAOqjB,KAEpE2f,EAAkB,SAAUC,GAC5B,IAAI3+B,EAASw+B,EAAkBG,EAI/B,OAHA3+B,EAAS7c,MAAM6c,GAAU,EAAIA,EAC7BA,EAAUm+B,IAAsBpxB,EAAmB9tB,EAAM08B,EAAcJ,EAAevb,EAAUA,EAChGA,EAAS3M,EAAKxR,IAAI,EAAGme,IAGrB2+B,EAAcF,EAAeH,GAE7BjjB,EAAeqjB,EADQD,EAAeF,IAEtC1iB,EAAsB6iB,EAAgBC,GAE1C3D,EAAkB5f,WAAa2D,EAC/Bic,EAAkBhgB,eAAiBsjB,EACnCtD,EAAkB9f,oBAAsByjB,EAEpCrxB,GACA2wB,EAAkBE,IAAsBxiB,EAAcJ,EAAeF,GAAgBA,EAErF6iB,EAAiB1D,EAxCG,aAwCgCyD,EAAkB,SAAWW,gBAA4BX,EAAkB,MAE/HL,EAAUQ,GAAgBF,EAGtB7wB,IACAuwB,EAAUS,GAAiBzB,GAAcvpC,EAAKY,IAAIonB,EAAe2f,EAAkB1f,eAAiB,EAgPhH,SAAgC0M,GAC5B,IAAI6W,EAAgB5wC,EAAQS,aAAa,cACrCowC,EAAiB9W,EAAQxtB,IAAIqkC,GACjC,GAAIC,EACA,OAAOA,EAqBX,IApBA,IAKIC,EACAC,EAEAp5B,EAPAq5B,EAAa,IAAIC,OADF,sCAEfC,EAAiB,IAAID,OAAO,2CAC5BE,EAAa,0CAA0C5vC,MAAM,KAC7D9J,EAAS,GAGTzG,EAAI,EAEJogD,EAAuB,SAAUr9C,GAEjC,GADA+8C,EAAY,IACP/8C,EAAIW,MAAMw8C,GACX,OAAOn9C,EACX,KAAOA,EAAIW,MAAMs8C,IACbF,EAAUj/C,KAAKo/C,OAAOI,IACtBt9C,EAAMA,EAAIgN,QAAQiwC,EA/gGd,IAkhGR,OAAOF,GAEJ9/C,EAAImgD,EAAW9xC,EAAQ/C,GAAItL,IAE9B,IADA+/C,EAAaK,EAAqBrX,EAAQxtB,IAAIqkC,EAAgB,IAAMO,EAAWngD,KAC1E2mB,EAAI,EAAGA,EAAIo5B,EAAW1xC,EAAQ/C,GAAIqb,IACnClgB,EAAOkgB,IAAMlgB,EAAOkgB,GAAKlgB,EAAOkgB,GA/gG5B,IARA,IAuhG0Do5B,EAAWp5B,GAEjF,OAAOlgB,EAAO4B,KAAK,MA9Q6Fi4C,CAAuB/L,EAAcmH,SAAW,KAAQyD,EAAxD,SA3wFpG,KA8wFRR,EAAUpK,EAAc9R,WAAarG,EAIpC+e,OACD5G,EAAcmH,QAAQngC,IAAIojC,GAGtBtwB,GAAqBD,GAAsBuvB,GAC3CpJ,EAAcmH,QAAQp+B,IAAImY,IAAwB,WACzC/G,GACD6lB,EAAcmH,QAAQngC,IAAI6jC,EAzxF9B,QA8xFZrD,EAAkB1f,cAAgBD,EAClC2f,EAAkBlf,qBAAuBD,EACzCmf,EAAkBpf,aAAeD,EAQrC,SAASuc,GAA6BsH,EAASz/C,GAC3C,IAAIsrC,EAAStrC,EAAQ,cAAgB,WAEjC0/C,EAAWD,EAAUtvB,GAAiCC,GACtDzR,EAAY8gC,EAAU1pB,GAA8BE,IAFzCwpB,EAAUzvB,GAAmCC,IAInDqb,GAAQ3sB,GACjB+gC,EAASpU,GAAQ3sB,GAQrB,SAAS4iB,GAAiBkZ,GACtB,MAAO,CACH9G,cAAe8G,EA5zFP,QACC,SA4zFTuD,cAAevD,EAAe,QAAU,SACxC9Y,UAAW8Y,EAj0FJ,OAHD,MAq0FN9F,UAAW8F,EAAe,OAAS,MACnC5Y,KAAM4Y,EAxzFF,IACA,IAwzFJhF,KAAMgF,EAAe,IAAM,IAC3BhZ,KAAMgZ,EAAe,IAAM,IAC3BkF,KAAMlF,EAAe,IAAM,IAC3BE,OAAQF,EAAezqB,GAAmCG,GAC1DyqB,QAASH,EAAexqB,GAAoCG,GAC5DsqB,WAAYD,EAAe1qB,GAA8BG,GACzDgrB,MAAOT,EAAelmB,GAAwBC,IAWtD,SAAS8F,GAAwBP,GAC7BjK,GAA0BA,IAA2BkpB,GAlxFzB5iB,uBAkxF+E,GAEtG2D,EAMG/L,GAAcL,EACdpO,GAAYuQ,GAAwB/P,WAAWxS,EAAQ9M,GAAIo2B,IAG3DzZ,GAAO0S,IATN9B,GACDqB,GAAarS,OAAO8S,IAsGhC,SAAS2K,GAAiBn5B,EAAM6C,EAAMy7C,GAClC,IAAkB,IAAdA,EAEJ,GAAIjyB,EAAc,CACd,IAEIiX,EAFArsB,EAAWsW,GAAwBlL,UAAUriB,GAC7Cu+C,EAAkBv+C,EAGe,OAAjCu+C,EAAgBxgB,OAAO,EAAG,KAC1BwgB,EAAkBA,EAAgBxgB,OAAO,EAAG,GAAG78B,cAAgBq9C,EAAgBxgB,OAAO,IAEtFhsB,EAAKkF,IAAajL,GAClBiL,EAASjU,KAAK6iB,EAAOhjB,GAEzBmU,EAAK0e,IAAa,WAEV3jB,GADJuxB,EAAMj9B,MACOoU,KAAOzO,GAChBs3B,EAAI7oB,GAAG8jC,EAAiB17C,WAG1BypB,GACNkJ,GAAqB/2B,KAAK,CAAEW,EAAGY,EAAMwC,EAAGK,IAUhD,SAASkmC,GAAsByV,EAAiBC,EAAQ3wC,GAEpDA,EAASA,GAAU,CA39FP,aA69FZ0wC,GAHAC,EAASA,GA19FG,IATF,OAs+F0B3wC,EAAO,GAC3C0wC,EAAgBC,EAt+FJ,SAs+F0B3wC,EAAO,GAC7C0wC,EAAgBC,EAt+FH,UAs+F0B3wC,EAAO,GAC9C0wC,EAAgBC,EAt+FL,QAs+F0B3wC,EAAO,GAWhD,SAAS8hC,GAA0B6O,EAAQ1wC,EAAQ2wC,EAAOC,GAGtD,OAFA5wC,EAASA,GA5+FG,GA6+FZ0wC,EAASA,GA7+FG,GA8+FL,CACHhsC,EAAGksC,EAAQ,EAAI3gB,GAAoBjQ,GAAa5U,IAAIslC,EAx/F9C,MAw/FiE1wC,IACvE5L,EAAGu8C,EAAQ,EAAI1gB,GAAoBjQ,GAAa5U,IAAIslC,EAx/F5C,QAw/FiE1wC,IACzE1L,EAAGs8C,EAAQ,EAAI3gB,GAAoBjQ,GAAa5U,IAAIslC,EAx/F3C,SAw/FiE1wC,IAC1E7E,EAAGw1C,EAAQ,EAAI1gB,GAAoBjQ,GAAa5U,IAAIslC,EAx/F7C,OAw/FiE1wC,KA+ChF,SAAS+8B,GAA0B8T,EAAyBC,GACxD,IAAIjhD,EACAuQ,EACA2wC,EACAC,EAAgB,SAAUrhC,EAASshC,GAEnC,GADAF,EAAW,GACPE,UAAoBthC,GAAW1R,EAE/B,IADAmC,EAAQuP,EAAQvP,MAhiGZ,KAiiGCvQ,EAAI,EAAGA,EAAIuQ,EAAMlC,EAAQ/C,GAAItL,IAC9BkhD,GAAY,IAAM3wC,EAAMvQ,GAAK,IAGrC,OAAOkhD,GAGX,OAAO,IAAIjB,OACP,KAAOvqB,GAAwB,cAC/ByrB,EAAc1tB,GAAiButB,GAC/BG,EAAcztB,GAAeutB,GAAyB,KAO9D,SAAS1Y,KACL,IAAIvnB,EAAOyQ,GAAsBpjB,EAAQU,OACzC,MAAO,CACH5D,EAAGkjB,GAAoB,GAAKja,EAAKpQ,MAAMgd,EAAKghB,OAASvQ,GAAsBpjB,EAAQM,MAAY,EAC/FvD,EAAGijB,GAAoB,GAAKja,EAAKpQ,MAAMgd,EAAKihB,QAAUxQ,GAAsBpjB,EAAQG,MAAY,GASxG,SAASkf,GAAcrsB,GACnB,IAEIiqC,EAAMjqC,GAAKA,EAAC,eAAsBA,EAAC,cAAmBylC,cAA0B74B,EACpF,cACWq9B,EAAG,aAAoBl9B,EAAU/M,aAAaiqC,EAAG,YACpDjqC,UAAYA,GAAK+M,GAAiB,OAAN/M,GAA6B,IAAfA,EAAE8Y,iBAAyB9Y,EAAEggD,UAAYjzC,EAiC/F,SAASgyB,GAAoBt/B,EAAOwgD,GAChC,IAAI5+C,EAAM4+C,EAAUv9C,WAAWjD,GAAS+C,SAAS/C,EAAO,IACxD,OAAOoD,MAAMxB,GAAO,EAAIA,EAiD5B,SAASy4C,KACL,OAAQroB,IAAuClF,EAA2BziB,GAAKyiB,EAA2BxiB,EAO9G,SAASuuB,KACL,OAAOhL,EAAcgC,GAAsB,GAAKgB,GASpD,SAASqY,GAAYuX,EAAgBrd,GACjC,MAAO,SAAWqd,EAAiBptC,EAAKotC,IAAmBnzC,EACvD,UAAYmzC,EAAiB,IAC5B,WACG,IAAItoC,EACA41B,EAxrGA,GAyrGJ,GAAI33B,EAAU0B,cAAc2oC,GACxB,IAAKtoC,KAAOsoC,EACR1S,IAAkB,MAAR51B,EAAc,QAAUA,GAAO,KAAOsoC,EAAetoC,GAAO,KAE9E,OAAO41B,EAPV,GAtrGO,IAgsGR,KACC3K,GAjsGO,IAksGR,SAUR,SAAS4V,GAA2Br6B,EAAW+hC,GAC3C,IAAIC,EAAettC,EAAKqtC,IAA+BpzC,EACnDszC,EAAeD,EAAetxB,GAAgBqxB,GAA8BrxB,GAEhF,OAAQrB,IAAe4yB,EAAarzC,EAAQ/C,GACtC,KACAwjB,EACI4yB,EAAaD,EAAe,WAAa,QA5sGzC,IA4sG2DhiC,EAAU1P,QAAQ,MA5sG7E,MA4sG8F0R,GAAG,GACjGvK,EAAU8yB,GAAYvqB,IASpC,SAASib,GAAiBn1B,EAAKuC,GAI3B,IAHA,IAEI3E,EAFAw+C,EAAS75C,EAAKyI,MAvtGR,KAwtGNvQ,EAAI,EAEDA,EAAI2hD,EAAO5gD,OAAQf,IAAK,CAC3B,IAAKuF,EAAI8I,EAAQS,KAAK6yC,EAAO3hD,IACzB,OACJmD,EAAMoC,EAAIo8C,EAAO3hD,IACbA,EAAI2hD,EAAO5gD,QAAUoT,EAAKhR,IAAQiL,IAClC7I,EAAMpC,GAEd,OAAOA,EASX,SAASw3B,GAAiBp1B,EAAKuC,EAAM3E,GAMjC,IALA,IAAIw+C,EAAS75C,EAAKyI,MA3uGR,KA4uGNqxC,EAAeD,EAAO5gD,OACtBf,EAAI,EACJ6hD,EAAY,GACZC,EAAgBD,EACb7hD,EAAI4hD,EAAc5hD,IACrB6hD,EAAYA,EAAUF,EAAO3hD,IAAMA,EAAI,EAAI4hD,EAAe,GAAKz+C,EACnE+T,EAAUkB,OAAO7S,EAAKu8C,GAAe,GAOzC,SAAS/T,GAAiB3B,GACtB,IAAI5oB,EAAemM,GAAwBnM,aAC3CA,EAAerP,EAAKqP,IAAiBpV,EAAUoV,EAAajT,MA1vGhD,KA0vGmEiT,EAE3E3S,EAAcoD,IAAIuP,KAAkBkL,GACpCtV,EAAKoK,EAAc4oB,GAc3B,SAASjT,GAAW9xB,EAASwxB,EAAOP,GAChC,GAAIA,EACA,OAAOA,EACX,GAAInkB,EAAK9M,IAAY+G,GAAW+F,EAAK0kB,IAAUzqB,EAc3C,OAAO/G,IAAYwxB,EAbnB,IAAK,IAAIzoB,KAAQ/I,EACb,GAAa,MAAT+I,EAAc,CACd,IAAI/I,EAAQgH,EAAQS,KAAKsB,KAASyoB,EAAMxqB,EAAQS,KAAKsB,GAKjD,OAAO,EAJP,GAAI+oB,GAAW9xB,EAAQ+I,GAAOyoB,EAAMzoB,IAChC,OAAO,EAW3B,OAAO,EASX,SAASy0B,KACL,OAAO3tB,EAAUkB,OAAO1G,MAAMjJ,KAAM,EAAC,GAAM1D,OAAO,GAAGjB,MAAMsB,KAAKf,aAMpE,SAASwb,GAAS9F,EAAI+F,GAClB,OAAO2N,EAAgB5N,SAASza,KAAK2U,EAAI+F,GAM7C,SAASO,GAAYtG,EAAI+F,GACrB,OAAO2N,EAAgBpN,YAAYjb,KAAK2U,EAAI+F,GAMhD,SAASq2B,GAAep8B,EAAI+F,EAASiiC,GACjC,OAAOA,EAAQliC,GAAS9F,EAAI+F,GAAWO,GAAYtG,EAAI+F,GAM3D,SAAS5B,GAAOnE,GACZ,OAAO0T,EAAgBvP,OAAO9Y,KAAK2U,GASvC,SAASgtB,GAAUhtB,EAAIL,GACnB,OAAO+T,EAAgB9L,KAAKvc,KAAK2U,EAAIL,GAAU+H,GAAG,IA4lC1D,OAvHAc,EAAUtU,EAAM,kBAAe,SAAU+zC,EAAsBxpC,EAASgV,GACpE,GAA6B,IAAzBnpB,UAAUgK,EAAQ/C,GAClB,OAAO7C,KAEX,IAEIklB,EACAlnB,EAHA5G,EAAM,GACNoiD,EAAiB/qC,EAAU0B,cAAcJ,GAK7C,OAAKwpC,GAULA,EAAuBA,EAAqB3zC,EAAQ/C,IAAM9K,EAAYwhD,EAAuB,CAACA,EAAqB,IAAMA,GACzHn6B,IAEIm6B,EAAqB3zC,EAAQ/C,GAAK,IAC9B22C,EACA/qC,EAAUkC,KAAK4oC,GAAsB,SAAUhiD,EAAG+N,IAC9C4f,EAAO5f,KACMvN,GACTX,EAAIgB,KAAKysB,EAA0BK,EAAMnV,EAASgV,EAAYhL,EAAiBC,OAIvFvL,EAAUkC,KAAK4oC,GAAsB,SAAUhiD,EAAG+N,GAC9C4f,EAAOzL,EAAUnU,IACA,MAAZyK,GAAmB+J,EAAQkkB,MAAM9Y,IAAW9c,EAAcsD,KAAKqE,IAAYpK,GAAWoK,EAAQzK,EAAG4f,IAE7FnV,IAAYhY,IADjBX,EAAIgB,KAAK8sB,MAKrBlnB,EAA4B,IAAnB5G,EAAIwO,EAAQ/C,GAAWzL,EAAI,GAAKA,GAEtC4G,GA/BIw7C,IAAmBzpC,EAAU/R,EAAS5G,IAsC7CwsB,QAAU,WACdxE,IACA,IAAIwE,EAAUnV,EAAUkB,QAAO,EAAM,GAAIoK,GAEzC,cADO6J,EAAO,KACPA,GAOX9J,EAAQyF,eAAiB,SAAUk6B,GAC/Br6B,IACA,IAAIs6B,EAAqB3/B,EAAgBwF,eACzC,GAAIk6B,IAAsB1hD,EACtB,OAAO0W,EAAUkB,QAAO,EAAM,GAAI+pC,GAGtC3/B,EAAgBwF,eAAiB9Q,EAAUkB,QAAO,EAAM,GAAI+pC,EAAoBx/B,EAAgBgD,UAAUu8B,EAAmBv/B,EAAgB+C,WAAW,EAAMy8B,GAAoBx6B,WAQtLpF,EAAQkkB,MAAQ,SAAU2b,GACtB,OAAOA,aAAsB7/B,IAAY6/B,EAAW3d,WAAWM,WAanExiB,EAAQ2jB,UAAY,SAAUmc,EAAenc,EAAWle,GACpD,IAAIs6B,EAAoBzxC,EAAcsD,KAAKkuC,IAAkBj0C,EACzDiU,EAAShe,UAAUgK,EAAQ/C,GAC3BtL,EAAI,EACR,GAAIqiB,EAAS,IAAMigC,EAEf,OAAOprC,EAAUkB,QAAO,EAAM,CAAErX,OAAQ2hB,EAAmBrU,EAAQ/C,IAAMoX,GAExE,GAAI4/B,EACL,GAAIzxC,EAAcsD,KAAK+xB,IAAc93B,EAEjCsU,EAAmB7hB,KAAK,CACpBuB,KAAMigD,EACNjc,iBAAkBF,EAClBle,eAAgBA,SAIpB,KAAOhoB,EAAI0iB,EAAmBrU,EAAQ/C,GAAItL,IACtC,GAAI0iB,EAAmB1iB,GAAGoC,OAASigD,EAAe,CAC9C,KAAIhgC,EAAS,GAGT,OAAOnL,EAAUkB,QAAO,EAAM,GAAIsK,EAAmB1iB,IAFrD0iB,EAAmBld,OAAOxF,EAAG,KAS9CuiB,EA1iKG,GA8jKd,OAjBIlO,GAAUA,EAAO/O,KAOjB+O,EAAO/O,GAAGi9C,kBAAoB,SAAU/pC,EAASgV,GAE7C,OAAInZ,EAAOuE,cAAcJ,IACrBnE,EAAO+E,KAFK3Q,MAEW,WAAc6Z,EAAO7Z,KAAM+P,EAASgV,MAF/C/kB,MAML6Z,EANK7Z,KAMa+P,KAG9B8J,EAn/MqBkgC,CAAQx0C,EAAQA,EAAOG,cAAU3N,IAAvD,+B,mBCfd,IAAIiiD,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BthD,EAA6B,EAAQ,IAErCuhD,EAAkB,EAAQ,KAM9BhjD,EAAOC,QAJP,SAAwBC,EAAKG,GAC3B,OAAOyiD,EAAe5iD,IAAQ6iD,EAAqB7iD,EAAKG,IAAMoB,EAA2BvB,EAAKG,IAAM2iD,M,mBCTtG,IAAIC,EAAmB,EAAQ,KAW/BjjD,EAAOC,QATP,SAAqCyB,EAAGwhD,GACtC,GAAKxhD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOuhD,EAAiBvhD,EAAGwhD,GACtD,IAAIrhD,EAAIrB,OAAO6E,UAAUhC,SAASoC,KAAK/D,GAAGyC,MAAM,GAAI,GAEpD,MADU,WAANtC,GAAkBH,EAAEsE,cAAanE,EAAIH,EAAEsE,YAAYvD,MAC7C,QAANZ,GAAqB,QAANA,EAAoB1B,MAAM8H,KAAKpG,GACxC,cAANA,GAAqB,2CAA2CshD,KAAKthD,GAAWohD,EAAiBvhD,EAAGwhD,QAAxG,K,gCCNFljD,EAAOC,QAAU,CAChB,UAAa,CAAC,IAAK,IAAK,KACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,KAAQ,CAAC,EAAG,IAAK,KACjB,WAAc,CAAC,IAAK,IAAK,KACzB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,EAAG,EAAG,GAChB,eAAkB,CAAC,IAAK,IAAK,KAC7B,KAAQ,CAAC,EAAG,EAAG,KACf,WAAc,CAAC,IAAK,GAAI,KACxB,MAAS,CAAC,IAAK,GAAI,IACnB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,WAAc,CAAC,IAAK,IAAK,GACzB,UAAa,CAAC,IAAK,IAAK,IACxB,MAAS,CAAC,IAAK,IAAK,IACpB,eAAkB,CAAC,IAAK,IAAK,KAC7B,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,GAAI,IACrB,KAAQ,CAAC,EAAG,IAAK,KACjB,SAAY,CAAC,EAAG,EAAG,KACnB,SAAY,CAAC,EAAG,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,IAC5B,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,EAAG,IAAK,GACtB,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,EAAG,KACxB,eAAkB,CAAC,GAAI,IAAK,IAC5B,WAAc,CAAC,IAAK,IAAK,GACzB,WAAc,CAAC,IAAK,GAAI,KACxB,QAAW,CAAC,IAAK,EAAG,GACpB,WAAc,CAAC,IAAK,IAAK,KACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,cAAiB,CAAC,GAAI,GAAI,KAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,EAAG,IAAK,KAC1B,WAAc,CAAC,IAAK,EAAG,KACvB,SAAY,CAAC,IAAK,GAAI,KACtB,YAAe,CAAC,EAAG,IAAK,KACxB,QAAW,CAAC,IAAK,IAAK,KACtB,QAAW,CAAC,IAAK,IAAK,KACtB,WAAc,CAAC,GAAI,IAAK,KACxB,UAAa,CAAC,IAAK,GAAI,IACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,YAAe,CAAC,GAAI,IAAK,IACzB,QAAW,CAAC,IAAK,EAAG,KACpB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,KAAQ,CAAC,IAAK,IAAK,GACnB,UAAa,CAAC,IAAK,IAAK,IACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,MAAS,CAAC,EAAG,IAAK,GAClB,YAAe,CAAC,IAAK,IAAK,IAC1B,KAAQ,CAAC,IAAK,IAAK,KACnB,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,IACvB,OAAU,CAAC,GAAI,EAAG,KAClB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,SAAY,CAAC,IAAK,IAAK,KACvB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,GACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,qBAAwB,CAAC,IAAK,IAAK,KACnC,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,KAC1B,cAAiB,CAAC,GAAI,IAAK,KAC3B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,IAAK,GACjB,UAAa,CAAC,GAAI,IAAK,IACvB,MAAS,CAAC,IAAK,IAAK,KACpB,QAAW,CAAC,IAAK,EAAG,KACpB,OAAU,CAAC,IAAK,EAAG,GACnB,iBAAoB,CAAC,IAAK,IAAK,KAC/B,WAAc,CAAC,EAAG,EAAG,KACrB,aAAgB,CAAC,IAAK,GAAI,KAC1B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,GAAI,IAAK,KAC5B,gBAAmB,CAAC,IAAK,IAAK,KAC9B,kBAAqB,CAAC,EAAG,IAAK,KAC9B,gBAAmB,CAAC,GAAI,IAAK,KAC7B,gBAAmB,CAAC,IAAK,GAAI,KAC7B,aAAgB,CAAC,GAAI,GAAI,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,EAAG,KACf,QAAW,CAAC,IAAK,IAAK,KACtB,MAAS,CAAC,IAAK,IAAK,GACpB,UAAa,CAAC,IAAK,IAAK,IACxB,OAAU,CAAC,IAAK,IAAK,GACrB,UAAa,CAAC,IAAK,GAAI,GACvB,OAAU,CAAC,IAAK,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,KACxB,cAAiB,CAAC,IAAK,IAAK,KAC5B,cAAiB,CAAC,IAAK,IAAK,KAC5B,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,IACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,EAAG,KACnB,cAAiB,CAAC,IAAK,GAAI,KAC3B,IAAO,CAAC,IAAK,EAAG,GAChB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,YAAe,CAAC,IAAK,GAAI,IACzB,OAAU,CAAC,IAAK,IAAK,KACrB,WAAc,CAAC,IAAK,IAAK,IACzB,SAAY,CAAC,GAAI,IAAK,IACtB,SAAY,CAAC,IAAK,IAAK,KACvB,OAAU,CAAC,IAAK,GAAI,IACpB,OAAU,CAAC,IAAK,IAAK,KACrB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,YAAe,CAAC,EAAG,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,IAAO,CAAC,IAAK,IAAK,KAClB,KAAQ,CAAC,EAAG,IAAK,KACjB,QAAW,CAAC,IAAK,IAAK,KACtB,OAAU,CAAC,IAAK,GAAI,IACpB,UAAa,CAAC,GAAI,IAAK,KACvB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,GACrB,YAAe,CAAC,IAAK,IAAK,M,mBC7I3B,I,YAPMmjD,EAAc9gD,EAAQ,IAMtB+gD,EAAkB,GACxB,MAAkB7iD,OAAO4F,KAAKg9C,GAA9B,eAA4C,CAAvC,IAAM9pC,EAAG,KACb+pC,EAAgBD,EAAY9pC,IAAQA,EAGrC,IAAMnT,EAAU,CACfrC,IAAK,CAAC0C,SAAU,EAAGC,OAAQ,OAC3B7C,IAAK,CAAC4C,SAAU,EAAGC,OAAQ,OAC3B68C,IAAK,CAAC98C,SAAU,EAAGC,OAAQ,OAC3B5C,IAAK,CAAC2C,SAAU,EAAGC,OAAQ,OAC3B88C,KAAM,CAAC/8C,SAAU,EAAGC,OAAQ,QAC5B+8C,IAAK,CAACh9C,SAAU,EAAGC,OAAQ,OAC3Bg9C,IAAK,CAACj9C,SAAU,EAAGC,OAAQ,OAC3Bi9C,IAAK,CAACl9C,SAAU,EAAGC,OAAQ,OAC3BjC,IAAK,CAACgC,SAAU,EAAGC,OAAQ,CAAC,QAC5BvB,QAAS,CAACsB,SAAU,EAAGC,OAAQ,CAAC,YAChCk9C,OAAQ,CAACn9C,SAAU,EAAGC,OAAQ,CAAC,WAC/Bm9C,QAAS,CAACp9C,SAAU,EAAGC,OAAQ,CAAC,YAChCo9C,IAAK,CAACr9C,SAAU,EAAGC,OAAQ,CAAC,IAAK,IAAK,MACtCq9C,MAAO,CAACt9C,SAAU,EAAGC,OAAQ,CAAC,MAAO,MAAO,QAC5CwE,KAAM,CAACzE,SAAU,EAAGC,OAAQ,CAAC,UAG9BzG,EAAOC,QAAUkG,EAGjB,IAAK,IAAL,MAAoB3F,OAAO4F,KAAKD,GAAhC,eAA0C,CAArC,IAAM1C,EAAK,KACf,KAAM,aAAc0C,EAAQ1C,IAC3B,MAAM,IAAIsF,MAAM,8BAAgCtF,GAGjD,KAAM,WAAY0C,EAAQ1C,IACzB,MAAM,IAAIsF,MAAM,oCAAsCtF,GAGvD,GAAI0C,EAAQ1C,GAAOgD,OAAOrF,SAAW+E,EAAQ1C,GAAO+C,SACnD,MAAM,IAAIuC,MAAM,sCAAwCtF,GAVhB,MAad0C,EAAQ1C,GAA5B+C,EAbkC,EAalCA,SAAUC,EAbwB,EAaxBA,cACVN,EAAQ1C,GAAO+C,gBACfL,EAAQ1C,GAAOgD,OACtBjG,OAAO+F,eAAeJ,EAAQ1C,GAAQ,WAAY,CAACtC,MAAOqF,IAC1DhG,OAAO+F,eAAeJ,EAAQ1C,GAAQ,SAAU,CAACtC,MAAOsF,IAGzDN,EAAQrC,IAAIF,IAAM,SAAUE,GAC3B,IAMIq2B,EANEv1B,EAAId,EAAI,GAAK,IACbe,EAAIf,EAAI,GAAK,IACbgB,EAAIhB,EAAI,GAAK,IACbd,EAAME,KAAKF,IAAI4B,EAAGC,EAAGC,GACrB7B,EAAMC,KAAKD,IAAI2B,EAAGC,EAAGC,GACrBi/C,EAAQ9gD,EAAMD,EAIhBC,IAAQD,EACXm3B,EAAI,EACMv1B,IAAM3B,EAChBk3B,GAAKt1B,EAAIC,GAAKi/C,EACJl/C,IAAM5B,EAChBk3B,EAAI,GAAKr1B,EAAIF,GAAKm/C,EACRj/C,IAAM7B,IAChBk3B,EAAI,GAAKv1B,EAAIC,GAAKk/C,IAGnB5pB,EAAIj3B,KAAKF,IAAQ,GAAJm3B,EAAQ,MAEb,IACPA,GAAK,KAGN,IAAMxuB,GAAK3I,EAAMC,GAAO,EAUxB,MAAO,CAACk3B,EAAO,KARXl3B,IAAQD,EACP,EACM2I,GAAK,GACXo4C,GAAS9gD,EAAMD,GAEf+gD,GAAS,EAAI9gD,EAAMD,IAGA,IAAJ2I,IAGrBxF,EAAQrC,IAAIw/C,IAAM,SAAUx/C,GAC3B,IAAIkgD,EACAC,EACAC,EACA/pB,EACAv4B,EAEEgD,EAAId,EAAI,GAAK,IACbe,EAAIf,EAAI,GAAK,IACbgB,EAAIhB,EAAI,GAAK,IACbsK,EAAIlL,KAAKD,IAAI2B,EAAGC,EAAGC,GACnB8pC,EAAOxgC,EAAIlL,KAAKF,IAAI4B,EAAGC,EAAGC,GAC1Bq/C,EAAQ,SAAUx1C,GACvB,OAAQP,EAAIO,GAAK,EAAIigC,EAAO,IA2B7B,OAxBa,IAATA,GACHzU,EAAI,EACJv4B,EAAI,IAEJA,EAAIgtC,EAAOxgC,EACX41C,EAAOG,EAAMv/C,GACbq/C,EAAOE,EAAMt/C,GACbq/C,EAAOC,EAAMr/C,GAETF,IAAMwJ,EACT+rB,EAAI+pB,EAAOD,EACDp/C,IAAMuJ,EAChB+rB,EAAK,EAAI,EAAK6pB,EAAOE,EACXp/C,IAAMsJ,IAChB+rB,EAAK,EAAI,EAAK8pB,EAAOD,GAGlB7pB,EAAI,EACPA,GAAK,EACKA,EAAI,IACdA,GAAK,IAIA,CACF,IAAJA,EACI,IAAJv4B,EACI,IAAJwM,IAIFjI,EAAQrC,IAAID,IAAM,SAAUC,GAC3B,IAAMc,EAAId,EAAI,GACRe,EAAIf,EAAI,GACVgB,EAAIhB,EAAI,GAMZ,MAAO,CALGqC,EAAQrC,IAAIF,IAAIE,GAAK,GAKhB,KAJL,EAAI,IAAMZ,KAAKF,IAAI4B,EAAG1B,KAAKF,IAAI6B,EAAGC,KAIpB,KAFxBA,EAAI,EAAI,EAAI,IAAM5B,KAAKD,IAAI2B,EAAG1B,KAAKD,IAAI4B,EAAGC,OAK3CqB,EAAQrC,IAAIy/C,KAAO,SAAUz/C,GAC5B,IAAMc,EAAId,EAAI,GAAK,IACbe,EAAIf,EAAI,GAAK,IACbgB,EAAIhB,EAAI,GAAK,IAEbirC,EAAI7rC,KAAKF,IAAI,EAAI4B,EAAG,EAAIC,EAAG,EAAIC,GAKrC,MAAO,CAAK,MAJD,EAAIF,EAAImqC,IAAM,EAAIA,IAAM,GAId,MAHV,EAAIlqC,EAAIkqC,IAAM,EAAIA,IAAM,GAGL,MAFnB,EAAIjqC,EAAIiqC,IAAM,EAAIA,IAAM,GAEI,IAAJA,IAcpC5oC,EAAQrC,IAAIoB,QAAU,SAAUpB,GAC/B,IAAMsgD,EAAWf,EAAgBv/C,GACjC,GAAIsgD,EACH,OAAOA,EAMR,IAHA,IACIC,EAlBwB74C,EAAGC,EAiB3B64C,EAAyBC,IAG7B,MAAsB/jD,OAAO4F,KAAKg9C,GAAlC,eAAgD,CAA3C,IAAMl+C,EAAO,KACX/D,EAAQiiD,EAAYl+C,GAGpBoC,GAxBqBkE,EAwBU1H,EAxBP2H,EAwBYtK,EAnB1C,SAAEqK,EAAE,GAAKC,EAAE,GAAO,GAAlB,SACED,EAAE,GAAKC,EAAE,GAAO,GADlB,SAEED,EAAE,GAAKC,EAAE,GAAO,IAoBdnE,EAAWg9C,IACdA,EAAyBh9C,EACzB+8C,EAAwBn/C,GAI1B,OAAOm/C,GAGRl+C,EAAQjB,QAAQpB,IAAM,SAAUoB,GAC/B,OAAOk+C,EAAYl+C,IAGpBiB,EAAQrC,IAAI0/C,IAAM,SAAU1/C,GAC3B,IAAIc,EAAId,EAAI,GAAK,IACbe,EAAIf,EAAI,GAAK,IACbgB,EAAIhB,EAAI,GAAK,IAWjB,MAAO,CAAK,KAJG,OAJfc,EAAIA,EAAI,OAAJ,UAAiBA,EAAI,MAAS,MAAU,KAAQA,EAAI,OAI1B,OAH9BC,EAAIA,EAAI,OAAJ,UAAiBA,EAAI,MAAS,MAAU,KAAQA,EAAI,OAGX,OAF7CC,EAAIA,EAAI,OAAJ,UAAiBA,EAAI,MAAS,MAAU,KAAQA,EAAI,QAMnC,KAHN,MAAJF,EAAmB,MAAJC,EAAmB,MAAJC,GAGX,KAFf,MAAJF,EAAmB,MAAJC,EAAmB,MAAJC,KAK1CqB,EAAQrC,IAAI2/C,IAAM,SAAU3/C,GAC3B,IAAM0/C,EAAMr9C,EAAQrC,IAAI0/C,IAAI1/C,GACxB0H,EAAIg4C,EAAI,GACR/3C,EAAI+3C,EAAI,GACR93C,EAAI83C,EAAI,GAcZ,OAXA/3C,GAAK,IACLC,GAAK,QAELF,GAJAA,GAAK,QAIG,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAQjD,CAJI,KAHXC,EAAIA,EAAI,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,KAGlC,GACZ,KAAOD,EAAIC,GACX,KAAOA,GAJjBC,EAAIA,EAAI,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,QASzDvF,EAAQvC,IAAIE,IAAM,SAAUF,GAC3B,IAGI4gD,EACAC,EACAjhD,EALE22B,EAAIv2B,EAAI,GAAK,IACbhC,EAAIgC,EAAI,GAAK,IACb+H,EAAI/H,EAAI,GAAK,IAKnB,GAAU,IAANhC,EAEH,MAAO,CADP4B,EAAU,IAAJmI,EACOnI,EAAKA,GAYnB,IAHA,IAAMkhD,EAAK,EAAI/4C,GALd64C,EADG74C,EAAI,GACFA,GAAK,EAAI/J,GAET+J,EAAI/J,EAAI+J,EAAI/J,GAKZkC,EAAM,CAAC,EAAG,EAAG,GACVzD,EAAI,EAAGA,EAAI,EAAGA,KACtBokD,EAAKtqB,EAAI,EAAI,IAAM95B,EAAI,IACd,GACRokD,IAGGA,EAAK,GACRA,IAIAjhD,EADG,EAAIihD,EAAK,EACNC,EAAiB,GAAXF,EAAKE,GAAUD,EACjB,EAAIA,EAAK,EACbD,EACI,EAAIC,EAAK,EACbC,GAAMF,EAAKE,IAAO,EAAI,EAAID,GAAM,EAEhCC,EAGP5gD,EAAIzD,GAAW,IAANmD,EAGV,OAAOM,GAGRqC,EAAQvC,IAAI0/C,IAAM,SAAU1/C,GAC3B,IAAMu2B,EAAIv2B,EAAI,GACVhC,EAAIgC,EAAI,GAAK,IACb+H,EAAI/H,EAAI,GAAK,IACb+gD,EAAO/iD,EACLgjD,EAAO1hD,KAAKD,IAAI0I,EAAG,KAQzB,OALA/J,IADA+J,GAAK,IACM,EAAKA,EAAI,EAAIA,EACxBg5C,GAAQC,GAAQ,EAAIA,EAAO,EAAIA,EAIxB,CAACzqB,EAAQ,KAFC,IAANxuB,EAAW,EAAIg5C,GAASC,EAAOD,GAAS,EAAI/iD,GAAM+J,EAAI/J,IAExC,MAHd+J,EAAI/J,GAAK,KAMrBuE,EAAQm9C,IAAIx/C,IAAM,SAAUw/C,GAC3B,IAAMnpB,EAAImpB,EAAI,GAAK,GACb1hD,EAAI0hD,EAAI,GAAK,IACfl1C,EAAIk1C,EAAI,GAAK,IACXuB,EAAK3hD,KAAKg8C,MAAM/kB,GAAK,EAErBp4B,EAAIo4B,EAAIj3B,KAAKg8C,MAAM/kB,GACnBzsB,EAAI,IAAMU,GAAK,EAAIxM,GACnBoZ,EAAI,IAAM5M,GAAK,EAAKxM,EAAIG,GACxBmT,EAAI,IAAM9G,GAAK,EAAKxM,GAAK,EAAIG,IAGnC,OAFAqM,GAAK,IAEGy2C,GACP,KAAK,EACJ,MAAO,CAACz2C,EAAG8G,EAAGxH,GACf,KAAK,EACJ,MAAO,CAACsN,EAAG5M,EAAGV,GACf,KAAK,EACJ,MAAO,CAACA,EAAGU,EAAG8G,GACf,KAAK,EACJ,MAAO,CAACxH,EAAGsN,EAAG5M,GACf,KAAK,EACJ,MAAO,CAAC8G,EAAGxH,EAAGU,GACf,KAAK,EACJ,MAAO,CAACA,EAAGV,EAAGsN,KAIjB7U,EAAQm9C,IAAI1/C,IAAM,SAAU0/C,GAC3B,IAIIwB,EACAn5C,EALEwuB,EAAImpB,EAAI,GACR1hD,EAAI0hD,EAAI,GAAK,IACbl1C,EAAIk1C,EAAI,GAAK,IACbyB,EAAO7hD,KAAKD,IAAImL,EAAG,KAIzBzC,GAAK,EAAI/J,GAAKwM,EACd,IAAMw2C,GAAQ,EAAIhjD,GAAKmjD,EAMvB,OALAD,EAAKljD,EAAImjD,EAKF,CAAC5qB,EAAQ,KAHhB2qB,GADAA,GAAOF,GAAQ,EAAKA,EAAO,EAAIA,IACpB,GAGc,KAFzBj5C,GAAK,KAMNxF,EAAQtC,IAAIC,IAAM,SAAUD,GAC3B,IAII9B,EAJEo4B,EAAIt2B,EAAI,GAAK,IACf8+B,EAAK9+B,EAAI,GAAK,IACdmhD,EAAKnhD,EAAI,GAAK,IACZ8I,EAAQg2B,EAAKqiB,EAIfr4C,EAAQ,IACXg2B,GAAMh2B,EACNq4C,GAAMr4C,GAGP,IAAMtM,EAAI6C,KAAKg8C,MAAM,EAAI/kB,GACnB/rB,EAAI,EAAI42C,EACdjjD,EAAI,EAAIo4B,EAAI95B,EAEO,KAAV,EAAJA,KACJ0B,EAAI,EAAIA,GAGT,IAEI6C,EACAC,EACAC,EAJEjD,EAAI8gC,EAAK5gC,GAAKqM,EAAIu0B,GAMxB,OAAQtiC,GACP,QACA,KAAK,EACL,KAAK,EAAGuE,EAAIwJ,EAAIvJ,EAAIhD,EAAIiD,EAAI69B,EAAI,MAChC,KAAK,EAAG/9B,EAAI/C,EAAIgD,EAAIuJ,EAAItJ,EAAI69B,EAAI,MAChC,KAAK,EAAG/9B,EAAI+9B,EAAI99B,EAAIuJ,EAAItJ,EAAIjD,EAAG,MAC/B,KAAK,EAAG+C,EAAI+9B,EAAI99B,EAAIhD,EAAIiD,EAAIsJ,EAAG,MAC/B,KAAK,EAAGxJ,EAAI/C,EAAIgD,EAAI89B,EAAI79B,EAAIsJ,EAAG,MAC/B,KAAK,EAAGxJ,EAAIwJ,EAAIvJ,EAAI89B,EAAI79B,EAAIjD,EAI7B,MAAO,CAAK,IAAJ+C,EAAa,IAAJC,EAAa,IAAJC,IAG3BqB,EAAQo9C,KAAKz/C,IAAM,SAAUy/C,GAC5B,IAAM50C,EAAI40C,EAAK,GAAK,IACdp1C,EAAIo1C,EAAK,GAAK,IACd93C,EAAI83C,EAAK,GAAK,IACdxU,EAAIwU,EAAK,GAAK,IAMpB,MAAO,CAAK,KAJF,EAAIrgD,KAAKF,IAAI,EAAG2L,GAAK,EAAIogC,GAAKA,IAInB,KAHX,EAAI7rC,KAAKF,IAAI,EAAGmL,GAAK,EAAI4gC,GAAKA,IAGV,KAFpB,EAAI7rC,KAAKF,IAAI,EAAGyI,GAAK,EAAIsjC,GAAKA,MAKzC5oC,EAAQq9C,IAAI1/C,IAAM,SAAU0/C,GAC3B,IAGI5+C,EACAC,EACAC,EALE0G,EAAIg4C,EAAI,GAAK,IACb/3C,EAAI+3C,EAAI,GAAK,IACb93C,EAAI83C,EAAI,GAAK,IA0BnB,OApBA3+C,GAAU,MAAL2G,EAAoB,OAAJC,EAAmB,MAAJC,EACpC5G,EAAS,MAAJ0G,GAAoB,KAALC,EAAoB,MAAJC,EAGpC9G,GALAA,EAAS,OAAJ4G,GAAoB,OAALC,GAAqB,MAALC,GAK5B,SACH,MAAQ,KAAR,IAAS9G,EAAM,EAAM,KAAS,KAC5B,MAAJA,EAEHC,EAAIA,EAAI,SACH,MAAQ,KAAR,IAASA,EAAM,EAAM,KAAS,KAC5B,MAAJA,EAEHC,EAAIA,EAAI,SACH,MAAQ,KAAR,IAASA,EAAM,EAAM,KAAS,KAC5B,MAAJA,EAMI,CAAK,KAJZF,EAAI1B,KAAKF,IAAIE,KAAKD,IAAI,EAAG2B,GAAI,IAIR,KAHrBC,EAAI3B,KAAKF,IAAIE,KAAKD,IAAI,EAAG4B,GAAI,IAGC,KAF9BC,EAAI5B,KAAKF,IAAIE,KAAKD,IAAI,EAAG6B,GAAI,MAK9BqB,EAAQq9C,IAAIC,IAAM,SAAUD,GAC3B,IAAIh4C,EAAIg4C,EAAI,GACR/3C,EAAI+3C,EAAI,GACR93C,EAAI83C,EAAI,GAcZ,OAXA/3C,GAAK,IACLC,GAAK,QAELF,GAJAA,GAAK,QAIG,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAQjD,CAJI,KAHXC,EAAIA,EAAI,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,KAGlC,GACZ,KAAOD,EAAIC,GACX,KAAOA,GAJjBC,EAAIA,EAAI,QAAJ,SAAgBA,EAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,QASzDvF,EAAQs9C,IAAID,IAAM,SAAUC,GAC3B,IAGIj4C,EACAC,EACAC,EALEC,EAAI83C,EAAI,GAQdj4C,EAPUi4C,EAAI,GAON,KADRh4C,GAAKE,EAAI,IAAM,KAEfD,EAAID,EAPMg4C,EAAI,GAOF,IAEZ,IAAMwB,EAAK,KAAH,IAAGx5C,EAAK,GACVy5C,EAAK,KAAH,IAAG15C,EAAK,GACV25C,EAAK,KAAH,IAAGz5C,EAAK,GAShB,OARAD,EAAIw5C,EAAK,QAAWA,GAAMx5C,EAAI,GAAK,KAAO,MAC1CD,EAAI05C,EAAK,QAAWA,GAAM15C,EAAI,GAAK,KAAO,MAC1CE,EAAIy5C,EAAK,QAAWA,GAAMz5C,EAAI,GAAK,KAAO,MAMnC,CAJPF,GAAK,OACLC,GAAK,IACLC,GAAK,UAKNvF,EAAQs9C,IAAIC,IAAM,SAAUD,GAC3B,IAGItpB,EAHExuB,EAAI83C,EAAI,GACRx+C,EAAIw+C,EAAI,GACR3+C,EAAI2+C,EAAI,GAYd,OARAtpB,EAAS,IADEj3B,KAAKkiD,MAAMtgD,EAAGG,GACV,EAAI/B,KAAK4R,IAEhB,IACPqlB,GAAK,KAKC,CAACxuB,EAFEzI,KAAKiS,KAAKlQ,EAAIA,EAAIH,EAAIA,GAElBq1B,IAGfh0B,EAAQu9C,IAAID,IAAM,SAAUC,GAC3B,IAAM/3C,EAAI+3C,EAAI,GACR/0C,EAAI+0C,EAAI,GAGR2B,EAFI3B,EAAI,GAEC,IAAM,EAAIxgD,KAAK4R,GAI9B,MAAO,CAACnJ,EAHEgD,EAAIzL,KAAK6R,IAAIswC,GACb12C,EAAIzL,KAAK8R,IAAIqwC,KAKxBl/C,EAAQrC,IAAI6/C,OAAS,SAAUr+C,GAAyB,IAAnBggD,EAAmB,uDAAN,KAAM,IACrChgD,EADqC,GAChDV,EADgD,KAC7CC,EAD6C,KAC1CC,EAD0C,KAEnD3D,EAAuB,OAAfmkD,EAAsBn/C,EAAQrC,IAAIw/C,IAAIh+C,GAAM,GAAKggD,EAI7D,GAAc,KAFdnkD,EAAQ+B,KAAKmB,MAAMlD,EAAQ,KAG1B,OAAO,GAGR,IAAIokD,EAAO,IACNriD,KAAKmB,MAAMS,EAAI,MAAQ,EACxB5B,KAAKmB,MAAMQ,EAAI,MAAQ,EACxB3B,KAAKmB,MAAMO,EAAI,MAMlB,OAJc,IAAVzD,IACHokD,GAAQ,IAGFA,GAGRp/C,EAAQm9C,IAAIK,OAAS,SAAUr+C,GAG9B,OAAOa,EAAQrC,IAAI6/C,OAAOx9C,EAAQm9C,IAAIx/C,IAAIwB,GAAOA,EAAK,KAGvDa,EAAQrC,IAAI8/C,QAAU,SAAUt+C,GAC/B,IAAMV,EAAIU,EAAK,GACTT,EAAIS,EAAK,GACTR,EAAIQ,EAAK,GAIf,OAAIV,IAAMC,GAAKA,IAAMC,EAChBF,EAAI,EACA,GAGJA,EAAI,IACA,IAGD1B,KAAKmB,OAAQO,EAAI,GAAK,IAAO,IAAM,IAG9B,GACT,GAAK1B,KAAKmB,MAAMO,EAAI,IAAM,GAC1B,EAAI1B,KAAKmB,MAAMQ,EAAI,IAAM,GAC1B3B,KAAKmB,MAAMS,EAAI,IAAM,IAKzBqB,EAAQw9C,OAAO7/C,IAAM,SAAUwB,GAC9B,IAAI0D,EAAQ1D,EAAO,GAGnB,GAAc,IAAV0D,GAAyB,IAAVA,EAOlB,OANI1D,EAAO,KACV0D,GAAS,KAKH,CAFPA,EAAQA,EAAQ,KAAO,IAERA,EAAOA,GAGvB,IAAMw8C,EAA6B,IAAL,KAAblgD,EAAO,KAKxB,MAAO,EAJa,EAAR0D,GAAaw8C,EAAQ,KACpBx8C,GAAS,EAAK,GAAKw8C,EAAQ,KAC3Bx8C,GAAS,EAAK,GAAKw8C,EAAQ,MAKzCr/C,EAAQy9C,QAAQ9/C,IAAM,SAAUwB,GAE/B,GAAIA,GAAQ,IAAK,CAChB,IAAMqJ,EAAmB,IAAdrJ,EAAO,KAAY,EAC9B,MAAO,CAACqJ,EAAGA,EAAGA,GAKf,IAAI82C,EAKJ,OAPAngD,GAAQ,GAOD,CAJGpC,KAAKg8C,MAAM55C,EAAO,IAAM,EAAI,IAC5BpC,KAAKg8C,OAAOuG,EAAMngD,EAAO,IAAM,GAAK,EAAI,IACvCmgD,EAAM,EAAK,EAAI,MAK3Bt/C,EAAQrC,IAAIU,IAAM,SAAUc,GAC3B,IAIM/B,KAJkC,IAAtBL,KAAKmB,MAAMiB,EAAK,MAAe,MACtB,IAAtBpC,KAAKmB,MAAMiB,EAAK,MAAe,IACV,IAAtBpC,KAAKmB,MAAMiB,EAAK,MAEGjC,SAAS,IAAIC,cACpC,MAAO,SAASI,UAAUH,EAAOnC,QAAUmC,GAG5C4C,EAAQ3B,IAAIV,IAAM,SAAUwB,GAC3B,IAAMvB,EAAQuB,EAAKjC,SAAS,IAAIU,MAAM,4BACtC,IAAKA,EACJ,MAAO,CAAC,EAAG,EAAG,GAGf,IAAIsE,EAActE,EAAM,GAEA,IAApBA,EAAM,GAAG3C,SACZiH,EAAcA,EAAYuI,MAAM,IAAI3G,KAAI,SAAAy7C,GACvC,OAAOA,EAAOA,KACZh9C,KAAK,KAGT,IAAMi9C,EAAUzhD,SAASmE,EAAa,IAKtC,MAAO,CAJIs9C,GAAW,GAAM,IACjBA,GAAW,EAAK,IACP,IAAVA,IAKXx/C,EAAQrC,IAAI+/C,IAAM,SAAU//C,GAC3B,IAOI8G,EAPEhG,EAAId,EAAI,GAAK,IACbe,EAAIf,EAAI,GAAK,IACbgB,EAAIhB,EAAI,GAAK,IACbb,EAAMC,KAAKD,IAAIC,KAAKD,IAAI2B,EAAGC,GAAIC,GAC/B9B,EAAME,KAAKF,IAAIE,KAAKF,IAAI4B,EAAGC,GAAIC,GAC/BkG,EAAU/H,EAAMD,EAyBtB,OAdC4H,EADGI,GAAU,EACP,EAEH/H,IAAQ2B,GACHC,EAAIC,GAAKkG,EAAU,EAExB/H,IAAQ4B,EACL,GAAKC,EAAIF,GAAKoG,EAEd,GAAKpG,EAAIC,GAAKmG,EAGrBJ,GAAO,EAGA,CAAO,KAFdA,GAAO,GAEqB,IAATI,EAA0B,KArBzCA,EAAS,EACAhI,GAAO,EAAIgI,GAEX,KAqBd7E,EAAQvC,IAAIigD,IAAM,SAAUjgD,GAC3B,IAAMhC,EAAIgC,EAAI,GAAK,IACb+H,EAAI/H,EAAI,GAAK,IAEb+K,EAAIhD,EAAI,GAAO,EAAM/J,EAAI+J,EAAM,EAAM/J,GAAK,EAAM+J,GAElD5J,EAAI,EAKR,OAJI4M,EAAI,IACP5M,GAAK4J,EAAI,GAAMgD,IAAM,EAAMA,IAGrB,CAAC/K,EAAI,GAAQ,IAAJ+K,EAAa,IAAJ5M,IAG1BoE,EAAQm9C,IAAIO,IAAM,SAAUP,GAC3B,IAAM1hD,EAAI0hD,EAAI,GAAK,IACbl1C,EAAIk1C,EAAI,GAAK,IAEb30C,EAAI/M,EAAIwM,EACVrM,EAAI,EAMR,OAJI4M,EAAI,IACP5M,GAAKqM,EAAIO,IAAM,EAAIA,IAGb,CAAC20C,EAAI,GAAQ,IAAJ30C,EAAa,IAAJ5M,IAG1BoE,EAAQ09C,IAAI//C,IAAM,SAAU+/C,GAC3B,IAAM1pB,EAAI0pB,EAAI,GAAK,IACbl1C,EAAIk1C,EAAI,GAAK,IACbh/C,EAAIg/C,EAAI,GAAK,IAEnB,GAAU,IAANl1C,EACH,MAAO,CAAK,IAAJ9J,EAAa,IAAJA,EAAa,IAAJA,GAG3B,IAII+gD,EAJEC,EAAO,CAAC,EAAG,EAAG,GACdhB,EAAM1qB,EAAI,EAAK,EACf/rB,EAAIy2C,EAAK,EACTl3C,EAAI,EAAIS,EAId,OAAQlL,KAAKg8C,MAAM2F,IAClB,KAAK,EACJgB,EAAK,GAAK,EAAGA,EAAK,GAAKz3C,EAAGy3C,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKl4C,EAAGk4C,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKz3C,EAAG,MACxC,KAAK,EACJy3C,EAAK,GAAK,EAAGA,EAAK,GAAKl4C,EAAGk4C,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKz3C,EAAGy3C,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,QACCA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKl4C,EAMtC,OAFAi4C,GAAM,EAAMj3C,GAAK9J,EAEV,CACe,KAApB8J,EAAIk3C,EAAK,GAAKD,GACM,KAApBj3C,EAAIk3C,EAAK,GAAKD,GACM,KAApBj3C,EAAIk3C,EAAK,GAAKD,KAIjBz/C,EAAQ09C,IAAIP,IAAM,SAAUO,GAC3B,IAAMl1C,EAAIk1C,EAAI,GAAK,IAGbz1C,EAAIO,EAFAk1C,EAAI,GAAK,KAEA,EAAMl1C,GACrB5M,EAAI,EAMR,OAJIqM,EAAI,IACPrM,EAAI4M,EAAIP,GAGF,CAACy1C,EAAI,GAAQ,IAAJ9hD,EAAa,IAAJqM,IAG1BjI,EAAQ09C,IAAIjgD,IAAM,SAAUigD,GAC3B,IAAMl1C,EAAIk1C,EAAI,GAAK,IAGbl4C,EAFIk4C,EAAI,GAAK,KAEJ,EAAMl1C,GAAK,GAAMA,EAC5B/M,EAAI,EASR,OAPI+J,EAAI,GAAOA,EAAI,GAClB/J,EAAI+M,GAAK,EAAIhD,GAEVA,GAAK,IAAOA,EAAI,IACnB/J,EAAI+M,GAAK,GAAK,EAAIhD,KAGZ,CAACk4C,EAAI,GAAQ,IAAJjiD,EAAa,IAAJ+J,IAG1BxF,EAAQ09C,IAAIhgD,IAAM,SAAUggD,GAC3B,IAAMl1C,EAAIk1C,EAAI,GAAK,IAEbz1C,EAAIO,EADAk1C,EAAI,GAAK,KACA,EAAMl1C,GACzB,MAAO,CAACk1C,EAAI,GAAc,KAATz1C,EAAIO,GAAoB,KAAT,EAAIP,KAGrCjI,EAAQtC,IAAIggD,IAAM,SAAUhgD,GAC3B,IAAM8J,EAAI9J,EAAI,GAAK,IAEbuK,EAAI,EADAvK,EAAI,GAAK,IAEb8K,EAAIP,EAAIT,EACV9I,EAAI,EAMR,OAJI8J,EAAI,IACP9J,GAAKuJ,EAAIO,IAAM,EAAIA,IAGb,CAAC9K,EAAI,GAAQ,IAAJ8K,EAAa,IAAJ9J,IAG1BsB,EAAQ29C,MAAMhgD,IAAM,SAAUggD,GAC7B,MAAO,CAAEA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,MAGlF39C,EAAQrC,IAAIggD,MAAQ,SAAUhgD,GAC7B,MAAO,CAAEA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,QAG1EqC,EAAQ8E,KAAKnH,IAAM,SAAUwB,GAC5B,MAAO,CAACA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,MAGnEa,EAAQ8E,KAAKrH,IAAM,SAAU0B,GAC5B,MAAO,CAAC,EAAG,EAAGA,EAAK,KAGpBa,EAAQ8E,KAAKq4C,IAAMn9C,EAAQ8E,KAAKrH,IAEhCuC,EAAQ8E,KAAKpH,IAAM,SAAUoH,GAC5B,MAAO,CAAC,EAAG,IAAKA,EAAK,KAGtB9E,EAAQ8E,KAAKs4C,KAAO,SAAUt4C,GAC7B,MAAO,CAAC,EAAG,EAAG,EAAGA,EAAK,KAGvB9E,EAAQ8E,KAAKw4C,IAAM,SAAUx4C,GAC5B,MAAO,CAACA,EAAK,GAAI,EAAG,IAGrB9E,EAAQ8E,KAAKzG,IAAM,SAAUyG,GAC5B,IAAMzH,EAAwC,IAAlCN,KAAKmB,MAAM4G,EAAK,GAAK,IAAM,KAGjC1H,IAFWC,GAAO,KAAOA,GAAO,GAAKA,GAEpBH,SAAS,IAAIC,cACpC,MAAO,SAASI,UAAUH,EAAOnC,QAAUmC,GAG5C4C,EAAQrC,IAAImH,KAAO,SAAUnH,GAE5B,MAAO,EADMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EAC3B,IAAM,O,2IC3zBRgiD,E,kDAIT,WAAY5qC,GAAsC,kCAC9C,cAAMA,IAJF6qC,YAAwC,KAK5C,EAAKC,aAAe,IAAMC,YAFoB,E,yDAM9C,OAAOn9C,KAAKi9C,c,iCAIZ,OAAOj9C,KAAKk9C,aAAat+C,SAAW,O,0CAIpCoB,KAAKi9C,YAAc,IAAkBj9C,KAAKo9C,WAAYp9C,KAAKoS,MAAMrC,SAAW,GAAI/P,KAAKoS,MAAM2S,YAC3Fs4B,EAAoBr9C,KAAKi9C,YAAaj9C,KAAKoS,MAAM4E,a,6CAI7C,IAAkBgnB,MAAMh+B,KAAKi9C,eAC7Bj9C,KAAKi9C,YAAY7qB,UACjBpyB,KAAKi9C,YAAc,Q,yCAIRK,GACX,IAAkBtf,MAAMh+B,KAAKi9C,eAC7Bj9C,KAAKi9C,YAAYltC,QAAQ/P,KAAKoS,MAAMrC,SAEhCutC,EAAUtmC,YAAchX,KAAKoS,MAAM4E,WACnCqmC,EAAoBr9C,KAAKi9C,YAAaj9C,KAAKoS,MAAM4E,c,mCAWrD,E,0UAAA,CALE,WAKF,iDAGJ,OACI,uCAAKA,UAAU,WAAcumC,EAAQ,CAAEC,IAAKx9C,KAAKk9C,eAC7C,yBAAKlmC,UAAU,4BACf,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACVhX,KAAKoS,MAAM+B,YAIxB,yBAAK6C,UAAU,yCACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,0BAGvB,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,0BAGvB,yBAAKA,UAAU,6B,GApEiB,aA0EhD,SAASqmC,EAAoB1D,EAA+B3iC,GACxD,GAAI,IAAkBgnB,MAAM2b,GAAa,KAC7Bre,EAASqe,EAAWve,cAApBE,KACFsK,EAAQ,IAAI4R,OAAJ,+BAAmCmC,EAAW5pC,UAAUiH,UAAU1P,QAAQ,MAAO,MAAjF,KAA2F,KACnGm2C,EAAeniB,EAAKtkB,UAAUlP,MAAM,KACrC48B,QAAO,SAAA/qC,GAAI,OAAIA,EAAKsB,MAAM2qC,MAC1BhmC,KAAK,KAEV07B,EAAKtkB,UAAL,UAAoBymC,EAApB,YAAoCzmC,GAAa","file":"static/js/12.f0b223ec.chunk.js","sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst _slice = [].slice;\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = object.color.slice();\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = _slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst labels = convert[this.model].labels;\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst channels = convert[this.model].channels;\n\t\tconst labels = convert[this.model].labels;\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, value))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.039_28) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst channels = convert[model].channels;\n\n\t// Conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tconst newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (arguments.length > 0) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}"],"sourceRoot":""}